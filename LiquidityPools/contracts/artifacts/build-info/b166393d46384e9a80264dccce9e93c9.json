{
	"id": "b166393d46384e9a80264dccce9e93c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PoolContract.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\";\r\n\r\n/* LiquidityPool contract can be found below LiquidityToken contract on which it is based */\r\n\r\ncontract LiquidityToken is IERC20 {\r\n    using SafeMath for uint;\r\n\r\n    string private constant _name = \"UZH Liquidty Pool\";\r\n    string private constant _symbol = \"UZH-LP\";\r\n    uint8 private constant decimals = 18;\r\n    uint override public totalSupply;\r\n    mapping(address => uint) override public balanceOf;\r\n    mapping(address => mapping(address => uint)) override public allowance;\r\n\r\n\r\n    constructor() {}\r\n\r\n\r\n    // Internal functions\r\n    function _mint(address to, uint value) internal {\r\n        totalSupply = totalSupply.add(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(address(0), to, value);\r\n    }\r\n    function _burn(address from, uint value) internal {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Transfer(from, address(0), value);\r\n    }\r\n    function _transfer(address from, address to, uint value) private {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n    function _approve(address owner, address spender, uint value) private {\r\n        allowance[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    // External functions\r\n    function transfer(address to, uint value) override external returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n    function transferFrom(address from, address to, uint value) override external returns (bool) \r\n    {\r\n        if (allowance[from][msg.sender] != type(uint).max) {\r\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        }\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n    function approve(address spender, uint value) override external returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract LiquidityPool is LiquidityToken {\r\n    using SafeMath for uint;\r\n    address public admin;\r\n\r\n    address public immutable factory;\r\n    address public router;\r\n    address public immutable token0;\r\n    address public immutable token1;\r\n\r\n    uint private _reserve0;\r\n    uint private _reserve1;\r\n\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);\r\n    \r\n\r\n    constructor(address _admin, address _factory, address _router, address _token0, address _token1) {\r\n        admin = _admin;\r\n        factory = _factory;\r\n        router = _router;\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n    }\r\n\r\n    // Mint liquidity for tokens\r\n    function mint(address to) external returns (uint liquidity) {\r\n        // Only specified router contract can mint liquidity\r\n        require(msg.sender == router, \"POOL: Access denied\");\r\n        // Get recieved amounts from difference between reserves and balances\r\n        (uint balance0, uint balance1) = getBalances();\r\n        (uint reserve0, uint reserve1) = getReserves();\r\n        uint amount0 = balance0.sub(reserve0);\r\n        uint amount1 = balance1.sub(reserve1);\r\n        // Determin corresponding liquidity to be payed out\r\n        if (totalSupply == 0) {\r\n            liquidity = Math.sqrt(amount0.mul(amount1));\r\n        } else {\r\n            liquidity = Math.min(amount0.mul(totalSupply) / reserve0, amount1.mul(totalSupply) / reserve1);\r\n        }\r\n        require(liquidity > 0, \"POOL: Insufficient liquidity minted\");\r\n        // Mint liquidity tokens\r\n        _mint(to, liquidity);\r\n        // Update reserves and emit 'Mint' event  \r\n        _update(balance0, balance1);\r\n        emit Mint(msg.sender, amount0, amount1);\r\n    }\r\n\r\n    // Burn liquidity for tokens \r\n    function burn(address to) external returns (uint amount0, uint amount1) {\r\n        // Only specified router contract can burn liquidity\r\n        require(msg.sender == router, \"POOL: Access denied\");\r\n        // Get recieved liquidity \r\n        (uint balance0, uint balance1) = getBalances();\r\n        (uint reserve0, uint reserve1) = getReserves();\r\n        uint liquidity = balanceOf[address(this)];\r\n        // determine corresponding amounts to be payed out\r\n        amount0 = liquidity.mul(balance0) / totalSupply;\r\n        amount1 = liquidity.mul(balance1) / totalSupply;\r\n        require(amount0 > 0 && amount1 > 0, \"POOL: Insufficient liquidity burned\");\r\n        // Burn liquidity tokens and transfer amounts\r\n        _burn(address(this), liquidity);\r\n        IERC20(token0).transfer(to, amount0);\r\n        IERC20(token1).transfer(to, amount1);\r\n        // Update reserves and emit 'Burn' event\r\n        (balance0, balance1) = getBalances();\r\n        _update(balance0, balance1);\r\n        emit Burn(msg.sender, amount0, amount1, to);\r\n    }  \r\n\r\n    // swap tokens using liquidity\r\n    function swap(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) external {\r\n        // Only specified router contract can burn liquidity\r\n        require(msg.sender == router, \"POOL: Access denied\");\r\n        // Check output amount\r\n        (uint reserve0, uint reserve1) = getReserves();\r\n        (uint amount0Out, uint amount1Out) = token0 == tokenOut ? (amountOut, uint(0)) : (uint(0), amountOut);\r\n        require(amount0Out > 0 || amount1Out > 0, \"ERROR: Insufficent output amount\");\r\n        // Check input amount\r\n        (uint balance0, uint balance1) = getBalances();\r\n        uint amount0In = balance0 > reserve0.sub(amount0Out) ? balance0.sub(reserve0.sub(amount0Out)) : 0;\r\n        uint amount1In = balance1 > reserve1.sub(amount1Out) ? balance1.sub(reserve1.sub(amount1Out)) : 0;\r\n        require(amount0In > 0 || amount1In > 0, \"ERROR: insufficient input amount\");\r\n        // Send output token\r\n        if (amount0Out > 0) IERC20(token0).transfer(to, amount0Out);\r\n        if (amount1Out > 0) IERC20(token1).transfer(to, amount1Out);\r\n        // update reserves and emit 'Swap' event\r\n        _update(balance0, balance1);\r\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\r\n    }\r\n\r\n    // Helper functions\r\n    function getReserves() public view returns (uint reserve0, uint reserve1) {\r\n        reserve0 = _reserve0;\r\n        reserve1 = _reserve1;\r\n    }\r\n\r\n    function getBalances() public view returns (uint balance0, uint balance1) {\r\n        balance0 = IERC20(token0).balanceOf(address(this));\r\n        balance1 = IERC20(token1).balanceOf(address(this));\r\n    }\r\n\r\n    function _update(uint balance0, uint balance1) private {\r\n        require(balance0 <= type(uint).max && balance1 <= type(uint).max, \"POOL: Overflow\");\r\n        _reserve0 = balance0;\r\n        _reserve1 = balance1;\r\n    }\r\n\r\n\r\n    // Admin functions\r\n    function setRouter(address _router) external {\r\n        // Only admin can change router\r\n        require(msg.sender == admin, \"FACTORY: Access denied\");\r\n        router = _router;\r\n    }\r\n\r\n    function setAdmin(address _admin) external {\r\n        // Only admin can change admin\r\n        require(msg.sender == admin, \"FACTORY: Access denied\");\r\n        admin = _admin;\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/PoolContract.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PoolContract.sol\":2369:7725  contract LiquidityPool is LiquidityToken {\r... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/PoolContract.sol\":2976:3216  constructor(address _admin, address _factory, address _router, address _token0, address _token1) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PoolContract.sol\":3092:3098  _admin */\n  dup5\n    /* \"contracts/PoolContract.sol\":3084:3089  admin */\n  0x03\n  0x00\n    /* \"contracts/PoolContract.sol\":3084:3098  admin = _admin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PoolContract.sol\":3119:3127  _factory */\n  dup4\n    /* \"contracts/PoolContract.sol\":3109:3127  factory = _factory */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/PoolContract.sol\":3147:3154  _router */\n  dup3\n    /* \"contracts/PoolContract.sol\":3138:3144  router */\n  0x04\n  0x00\n    /* \"contracts/PoolContract.sol\":3138:3154  router = _router */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PoolContract.sol\":3174:3181  _token0 */\n  dup2\n    /* \"contracts/PoolContract.sol\":3165:3181  token0 = _token0 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/PoolContract.sol\":3201:3208  _token1 */\n  dup1\n    /* \"contracts/PoolContract.sol\":3192:3208  token1 = _token1 */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/PoolContract.sol\":2976:3216  constructor(address _admin, address _factory, address _router, address _token0, address _token1) {\r... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/PoolContract.sol\":2369:7725  contract LiquidityPool is LiquidityToken {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:1133   */\ntag_3:\n    /* \"#utility.yul\":262:268   */\n  0x00\n    /* \"#utility.yul\":270:276   */\n  dup1\n    /* \"#utility.yul\":278:284   */\n  0x00\n    /* \"#utility.yul\":286:292   */\n  dup1\n    /* \"#utility.yul\":294:300   */\n  0x00\n    /* \"#utility.yul\":343:346   */\n  0xa0\n    /* \"#utility.yul\":331:340   */\n  dup7\n    /* \"#utility.yul\":322:329   */\n  dup9\n    /* \"#utility.yul\":318:341   */\n  sub\n    /* \"#utility.yul\":314:347   */\n  slt\n    /* \"#utility.yul\":311:431   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":350:429   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":311:431   */\ntag_15:\n    /* \"#utility.yul\":470:471   */\n  0x00\n    /* \"#utility.yul\":495:559   */\n  tag_18\n    /* \"#utility.yul\":551:558   */\n  dup9\n    /* \"#utility.yul\":542:548   */\n  dup3\n    /* \"#utility.yul\":531:540   */\n  dup10\n    /* \"#utility.yul\":527:549   */\n  add\n    /* \"#utility.yul\":495:559   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":485:559   */\n  swap6\n  pop\n    /* \"#utility.yul\":441:569   */\n  pop\n    /* \"#utility.yul\":608:610   */\n  0x20\n    /* \"#utility.yul\":634:698   */\n  tag_19\n    /* \"#utility.yul\":690:697   */\n  dup9\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":670:679   */\n  dup10\n    /* \"#utility.yul\":666:688   */\n  add\n    /* \"#utility.yul\":634:698   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":624:698   */\n  swap5\n  pop\n    /* \"#utility.yul\":579:708   */\n  pop\n    /* \"#utility.yul\":747:749   */\n  0x40\n    /* \"#utility.yul\":773:837   */\n  tag_20\n    /* \"#utility.yul\":829:836   */\n  dup9\n    /* \"#utility.yul\":820:826   */\n  dup3\n    /* \"#utility.yul\":809:818   */\n  dup10\n    /* \"#utility.yul\":805:827   */\n  add\n    /* \"#utility.yul\":773:837   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":763:837   */\n  swap4\n  pop\n    /* \"#utility.yul\":718:847   */\n  pop\n    /* \"#utility.yul\":886:888   */\n  0x60\n    /* \"#utility.yul\":912:976   */\n  tag_21\n    /* \"#utility.yul\":968:975   */\n  dup9\n    /* \"#utility.yul\":959:965   */\n  dup3\n    /* \"#utility.yul\":948:957   */\n  dup10\n    /* \"#utility.yul\":944:966   */\n  add\n    /* \"#utility.yul\":912:976   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":902:976   */\n  swap3\n  pop\n    /* \"#utility.yul\":857:986   */\n  pop\n    /* \"#utility.yul\":1025:1028   */\n  0x80\n    /* \"#utility.yul\":1052:1116   */\n  tag_22\n    /* \"#utility.yul\":1108:1115   */\n  dup9\n    /* \"#utility.yul\":1099:1105   */\n  dup3\n    /* \"#utility.yul\":1088:1097   */\n  dup10\n    /* \"#utility.yul\":1084:1106   */\n  add\n    /* \"#utility.yul\":1052:1116   */\n  tag_10\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":1042:1116   */\n  swap2\n  pop\n    /* \"#utility.yul\":996:1126   */\n  pop\n    /* \"#utility.yul\":156:1133   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1220:1316   */\ntag_25:\n    /* \"#utility.yul\":1257:1264   */\n  0x00\n    /* \"#utility.yul\":1286:1310   */\n  tag_27\n    /* \"#utility.yul\":1304:1309   */\n  dup3\n    /* \"#utility.yul\":1286:1310   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":1275:1310   */\n  swap1\n  pop\n    /* \"#utility.yul\":1220:1316   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1322:1448   */\ntag_28:\n    /* \"#utility.yul\":1359:1366   */\n  0x00\n    /* \"#utility.yul\":1399:1441   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1392:1397   */\n  dup3\n    /* \"#utility.yul\":1388:1442   */\n  and\n    /* \"#utility.yul\":1377:1442   */\n  swap1\n  pop\n    /* \"#utility.yul\":1322:1448   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1577:1694   */\ntag_17:\n    /* \"#utility.yul\":1686:1687   */\n  0x00\n    /* \"#utility.yul\":1683:1684   */\n  dup1\n    /* \"#utility.yul\":1676:1688   */\n  revert\n    /* \"#utility.yul\":1700:1822   */\ntag_13:\n    /* \"#utility.yul\":1773:1797   */\n  tag_34\n    /* \"#utility.yul\":1791:1796   */\n  dup2\n    /* \"#utility.yul\":1773:1797   */\n  tag_25\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1766:1771   */\n  dup2\n    /* \"#utility.yul\":1763:1798   */\n  eq\n    /* \"#utility.yul\":1753:1816   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1812:1813   */\n  0x00\n    /* \"#utility.yul\":1809:1810   */\n  dup1\n    /* \"#utility.yul\":1802:1814   */\n  revert\n    /* \"#utility.yul\":1753:1816   */\ntag_35:\n    /* \"#utility.yul\":1700:1822   */\n  pop\n  jump\t// out\n    /* \"contracts/PoolContract.sol\":2369:7725  contract LiquidityPool is LiquidityToken {\r... */\ntag_8:\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  shr(0x60, mload(0xc0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1919bbb77b48a65a3a334e011819abf5317994b267bc385c63c0af09ecf64635\")\n  0x00\n  assignImmutable(\"0xe54f8e4a5d17b2e4d97cb94ddb2a2b00b3620f93c06158e24f4515b3f1ad0dd8\")\n  0x00\n  assignImmutable(\"0x0e2ebb9616682a934d374d36ec533ac8c688d143a19ec3095914433ecc16266a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/PoolContract.sol\":2369:7725  contract LiquidityPool is LiquidityToken {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89afcb44\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd21220a7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd5bcb9b5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf887ea40\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x89afcb44\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc0d78655\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x18160ddd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x704b6c02\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x113e08\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PoolContract.sol\":6882:7086  function getBalances() public view returns (uint balance0, uint balance1) {\r... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":6730:6874  function getReserves() public view returns (uint reserve0, uint reserve1) {\r... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":2204:2360  function approve(address spender, uint value) override external returns (bool) {\r... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":2543:2574  address public immutable token0 */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":640:672  uint override public totalSupply */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":1876:2198  function transferFrom(address from, address to, uint value) override external returns (bool) \r... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":3258:4307  function mint(address to) external returns (uint liquidity) {\r... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":7541:7722  function setAdmin(address _admin) external {\r... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/PoolContract.sol\":679:729  mapping(address => uint) override public balanceOf */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":4350:5398  function burn(address to) external returns (uint amount0, uint amount1) {\r... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":1722:1870  function transfer(address to, uint value) override external returns (bool) {\r... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":7347:7533  function setRouter(address _router) external {\r... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/PoolContract.sol\":2476:2508  address public immutable factory */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":2581:2612  address public immutable token1 */\n    tag_16:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":5444:6697  function swap(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) external {\r... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/PoolContract.sol\":736:806  mapping(address => mapping(address => uint)) override public allowance */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":2447:2467  address public admin */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":2515:2536  address public router */\n    tag_20:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":6882:7086  function getBalances() public view returns (uint balance0, uint balance1) {\r... */\n    tag_25:\n        /* \"contracts/PoolContract.sol\":6926:6939  uint balance0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6941:6954  uint balance1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":6985:6991  token0 */\n      immutable(\"0xe54f8e4a5d17b2e4d97cb94ddb2a2b00b3620f93c06158e24f4515b3f1ad0dd8\")\n        /* \"contracts/PoolContract.sol\":6978:7002  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/PoolContract.sol\":7011:7015  this */\n      address\n        /* \"contracts/PoolContract.sol\":6978:7017  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"contracts/PoolContract.sol\":6967:7017  balance0 = IERC20(token0).balanceOf(address(this)) */\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":7046:7052  token1 */\n      immutable(\"0x1919bbb77b48a65a3a334e011819abf5317994b267bc385c63c0af09ecf64635\")\n        /* \"contracts/PoolContract.sol\":7039:7063  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/PoolContract.sol\":7072:7076  this */\n      address\n        /* \"contracts/PoolContract.sol\":7039:7078  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_105:\n        /* \"contracts/PoolContract.sol\":7028:7078  balance1 = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":6882:7086  function getBalances() public view returns (uint balance0, uint balance1) {\r... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":6730:6874  function getReserves() public view returns (uint reserve0, uint reserve1) {\r... */\n    tag_29:\n        /* \"contracts/PoolContract.sol\":6774:6787  uint reserve0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6789:6802  uint reserve1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":6826:6835  _reserve0 */\n      sload(0x05)\n        /* \"contracts/PoolContract.sol\":6815:6835  reserve0 = _reserve0 */\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":6857:6866  _reserve1 */\n      sload(0x06)\n        /* \"contracts/PoolContract.sol\":6846:6866  reserve1 = _reserve1 */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":6730:6874  function getReserves() public view returns (uint reserve0, uint reserve1) {\r... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":2204:2360  function approve(address spender, uint value) override external returns (bool) {\r... */\n    tag_34:\n        /* \"contracts/PoolContract.sol\":2277:2281  bool */\n      0x00\n        /* \"contracts/PoolContract.sol\":2294:2330  _approve(msg.sender, spender, value) */\n      tag_108\n        /* \"contracts/PoolContract.sol\":2303:2313  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":2315:2322  spender */\n      dup5\n        /* \"contracts/PoolContract.sol\":2324:2329  value */\n      dup5\n        /* \"contracts/PoolContract.sol\":2294:2302  _approve */\n      tag_109\n        /* \"contracts/PoolContract.sol\":2294:2330  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/PoolContract.sol\":2348:2352  true */\n      0x01\n        /* \"contracts/PoolContract.sol\":2341:2352  return true */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":2204:2360  function approve(address spender, uint value) override external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":2543:2574  address public immutable token0 */\n    tag_38:\n      immutable(\"0xe54f8e4a5d17b2e4d97cb94ddb2a2b00b3620f93c06158e24f4515b3f1ad0dd8\")\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":640:672  uint override public totalSupply */\n    tag_42:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1876:2198  function transferFrom(address from, address to, uint value) override external returns (bool) \r... */\n    tag_48:\n        /* \"contracts/PoolContract.sol\":1963:1967  bool */\n      0x00\n        /* \"contracts/PoolContract.sol\":2021:2035  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/PoolContract.sol\":1990:1999  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":1990:2005  allowance[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2000:2004  from */\n      dup7\n        /* \"contracts/PoolContract.sol\":1990:2005  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1990:2017  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2006:2016  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":1990:2017  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":1990:2035  allowance[from][msg.sender] != type(uint).max */\n      eq\n        /* \"contracts/PoolContract.sol\":1986:2132  if (allowance[from][msg.sender] != type(uint).max) {\r... */\n      tag_111\n      jumpi\n        /* \"contracts/PoolContract.sol\":2082:2120  allowance[from][msg.sender].sub(value) */\n      tag_112\n        /* \"contracts/PoolContract.sol\":2114:2119  value */\n      dup3\n        /* \"contracts/PoolContract.sol\":2082:2091  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":2082:2097  allowance[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2092:2096  from */\n      dup8\n        /* \"contracts/PoolContract.sol\":2082:2097  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":2082:2109  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2098:2108  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":2082:2109  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":2082:2113  allowance[from][msg.sender].sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":2082:2120  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/PoolContract.sol\":2052:2061  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":2052:2067  allowance[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2062:2066  from */\n      dup7\n        /* \"contracts/PoolContract.sol\":2052:2067  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":2052:2079  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2068:2078  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":2052:2079  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":2052:2120  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1986:2132  if (allowance[from][msg.sender] != type(uint).max) {\r... */\n    tag_111:\n        /* \"contracts/PoolContract.sol\":2142:2168  _transfer(from, to, value) */\n      tag_114\n        /* \"contracts/PoolContract.sol\":2152:2156  from */\n      dup5\n        /* \"contracts/PoolContract.sol\":2158:2160  to */\n      dup5\n        /* \"contracts/PoolContract.sol\":2162:2167  value */\n      dup5\n        /* \"contracts/PoolContract.sol\":2142:2151  _transfer */\n      tag_115\n        /* \"contracts/PoolContract.sol\":2142:2168  _transfer(from, to, value) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/PoolContract.sol\":2186:2190  true */\n      0x01\n        /* \"contracts/PoolContract.sol\":2179:2190  return true */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":1876:2198  function transferFrom(address from, address to, uint value) override external returns (bool) \r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":3258:4307  function mint(address to) external returns (uint liquidity) {\r... */\n    tag_53:\n        /* \"contracts/PoolContract.sol\":3302:3316  uint liquidity */\n      0x00\n        /* \"contracts/PoolContract.sol\":3413:3419  router */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":3399:3419  msg.sender == router */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":3399:3409  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":3399:3419  msg.sender == router */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoolContract.sol\":3391:3443  require(msg.sender == router, \"POOL: Access denied\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/PoolContract.sol\":3534:3547  uint balance0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":3549:3562  uint balance1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":3566:3579  getBalances() */\n      tag_120\n        /* \"contracts/PoolContract.sol\":3566:3577  getBalances */\n      tag_25\n        /* \"contracts/PoolContract.sol\":3566:3579  getBalances() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/PoolContract.sol\":3533:3579  (uint balance0, uint balance1) = getBalances() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":3591:3604  uint reserve0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":3606:3619  uint reserve1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":3623:3636  getReserves() */\n      tag_121\n        /* \"contracts/PoolContract.sol\":3623:3634  getReserves */\n      tag_29\n        /* \"contracts/PoolContract.sol\":3623:3636  getReserves() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/PoolContract.sol\":3590:3636  (uint reserve0, uint reserve1) = getReserves() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":3647:3659  uint amount0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":3662:3684  balance0.sub(reserve0) */\n      tag_122\n        /* \"contracts/PoolContract.sol\":3675:3683  reserve0 */\n      dup4\n        /* \"contracts/PoolContract.sol\":3662:3670  balance0 */\n      dup7\n        /* \"contracts/PoolContract.sol\":3662:3674  balance0.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":3662:3684  balance0.sub(reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/PoolContract.sol\":3647:3684  uint amount0 = balance0.sub(reserve0) */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":3695:3707  uint amount1 */\n      0x00\n        /* \"contracts/PoolContract.sol\":3710:3732  balance1.sub(reserve1) */\n      tag_123\n        /* \"contracts/PoolContract.sol\":3723:3731  reserve1 */\n      dup4\n        /* \"contracts/PoolContract.sol\":3710:3718  balance1 */\n      dup7\n        /* \"contracts/PoolContract.sol\":3710:3722  balance1.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":3710:3732  balance1.sub(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"contracts/PoolContract.sol\":3695:3732  uint amount1 = balance1.sub(reserve1) */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":3823:3824  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":3808:3819  totalSupply */\n      dup1\n      sload\n        /* \"contracts/PoolContract.sol\":3808:3824  totalSupply == 0 */\n      eq\n        /* \"contracts/PoolContract.sol\":3804:4023  if (totalSupply == 0) {\r... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/PoolContract.sol\":3853:3884  Math.sqrt(amount0.mul(amount1)) */\n      tag_125\n        /* \"contracts/PoolContract.sol\":3863:3883  amount0.mul(amount1) */\n      tag_126\n        /* \"contracts/PoolContract.sol\":3875:3882  amount1 */\n      dup3\n        /* \"contracts/PoolContract.sol\":3863:3870  amount0 */\n      dup5\n        /* \"contracts/PoolContract.sol\":3863:3874  amount0.mul */\n      tag_127\n      swap1\n        /* \"contracts/PoolContract.sol\":3863:3883  amount0.mul(amount1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/PoolContract.sol\":3853:3862  Math.sqrt */\n      tag_128\n        /* \"contracts/PoolContract.sol\":3853:3884  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/PoolContract.sol\":3841:3884  liquidity = Math.sqrt(amount0.mul(amount1)) */\n      swap7\n      pop\n        /* \"contracts/PoolContract.sol\":3804:4023  if (totalSupply == 0) {\r... */\n      jump(tag_129)\n    tag_124:\n        /* \"contracts/PoolContract.sol\":3929:4011  Math.min(amount0.mul(totalSupply) / reserve0, amount1.mul(totalSupply) / reserve1) */\n      tag_130\n        /* \"contracts/PoolContract.sol\":3965:3973  reserve0 */\n      dup5\n        /* \"contracts/PoolContract.sol\":3938:3962  amount0.mul(totalSupply) */\n      tag_131\n        /* \"contracts/PoolContract.sol\":3950:3961  totalSupply */\n      sload(0x00)\n        /* \"contracts/PoolContract.sol\":3938:3945  amount0 */\n      dup6\n        /* \"contracts/PoolContract.sol\":3938:3949  amount0.mul */\n      tag_127\n      swap1\n        /* \"contracts/PoolContract.sol\":3938:3962  amount0.mul(totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/PoolContract.sol\":3938:3973  amount0.mul(totalSupply) / reserve0 */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/PoolContract.sol\":4002:4010  reserve1 */\n      dup5\n        /* \"contracts/PoolContract.sol\":3975:3999  amount1.mul(totalSupply) */\n      tag_134\n        /* \"contracts/PoolContract.sol\":3987:3998  totalSupply */\n      sload(0x00)\n        /* \"contracts/PoolContract.sol\":3975:3982  amount1 */\n      dup6\n        /* \"contracts/PoolContract.sol\":3975:3986  amount1.mul */\n      tag_127\n      swap1\n        /* \"contracts/PoolContract.sol\":3975:3999  amount1.mul(totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/PoolContract.sol\":3975:4010  amount1.mul(totalSupply) / reserve1 */\n      tag_135\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_135:\n        /* \"contracts/PoolContract.sol\":3929:3937  Math.min */\n      tag_136\n        /* \"contracts/PoolContract.sol\":3929:4011  Math.min(amount0.mul(totalSupply) / reserve0, amount1.mul(totalSupply) / reserve1) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/PoolContract.sol\":3917:4011  liquidity = Math.min(amount0.mul(totalSupply) / reserve0, amount1.mul(totalSupply) / reserve1) */\n      swap7\n      pop\n        /* \"contracts/PoolContract.sol\":3804:4023  if (totalSupply == 0) {\r... */\n    tag_129:\n        /* \"contracts/PoolContract.sol\":4053:4054  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":4041:4050  liquidity */\n      dup8\n        /* \"contracts/PoolContract.sol\":4041:4054  liquidity > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":4033:4094  require(liquidity > 0, \"POOL: Insufficient liquidity minted\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/PoolContract.sol\":4139:4159  _mint(to, liquidity) */\n      tag_140\n        /* \"contracts/PoolContract.sol\":4145:4147  to */\n      dup9\n        /* \"contracts/PoolContract.sol\":4149:4158  liquidity */\n      dup9\n        /* \"contracts/PoolContract.sol\":4139:4144  _mint */\n      tag_141\n        /* \"contracts/PoolContract.sol\":4139:4159  _mint(to, liquidity) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/PoolContract.sol\":4222:4249  _update(balance0, balance1) */\n      tag_142\n        /* \"contracts/PoolContract.sol\":4230:4238  balance0 */\n      dup7\n        /* \"contracts/PoolContract.sol\":4240:4248  balance1 */\n      dup7\n        /* \"contracts/PoolContract.sol\":4222:4229  _update */\n      tag_143\n        /* \"contracts/PoolContract.sol\":4222:4249  _update(balance0, balance1) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/PoolContract.sol\":4270:4280  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":4265:4299  Mint(msg.sender, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n        /* \"contracts/PoolContract.sol\":4282:4289  amount0 */\n      dup4\n        /* \"contracts/PoolContract.sol\":4291:4298  amount1 */\n      dup4\n        /* \"contracts/PoolContract.sol\":4265:4299  Mint(msg.sender, amount0, amount1) */\n      mload(0x40)\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PoolContract.sol\":3318:4307  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PoolContract.sol\":3258:4307  function mint(address to) external returns (uint liquidity) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":7541:7722  function setAdmin(address _admin) external {\r... */\n    tag_57:\n        /* \"contracts/PoolContract.sol\":7657:7662  admin */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":7643:7662  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":7643:7653  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":7643:7662  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoolContract.sol\":7635:7689  require(msg.sender == admin, \"FACTORY: Access denied\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/PoolContract.sol\":7708:7714  _admin */\n      dup1\n        /* \"contracts/PoolContract.sol\":7700:7705  admin */\n      0x03\n      0x00\n        /* \"contracts/PoolContract.sol\":7700:7714  admin = _admin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":7541:7722  function setAdmin(address _admin) external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":679:729  mapping(address => uint) override public balanceOf */\n    tag_60:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":4350:5398  function burn(address to) external returns (uint amount0, uint amount1) {\r... */\n    tag_64:\n        /* \"contracts/PoolContract.sol\":4394:4406  uint amount0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":4408:4420  uint amount1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":4517:4523  router */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":4503:4523  msg.sender == router */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":4503:4513  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":4503:4523  msg.sender == router */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoolContract.sol\":4495:4547  require(msg.sender == router, \"POOL: Access denied\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_119\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/PoolContract.sol\":4595:4608  uint balance0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":4610:4623  uint balance1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":4627:4640  getBalances() */\n      tag_152\n        /* \"contracts/PoolContract.sol\":4627:4638  getBalances */\n      tag_25\n        /* \"contracts/PoolContract.sol\":4627:4640  getBalances() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/PoolContract.sol\":4594:4640  (uint balance0, uint balance1) = getBalances() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":4652:4665  uint reserve0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":4667:4680  uint reserve1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":4684:4697  getReserves() */\n      tag_153\n        /* \"contracts/PoolContract.sol\":4684:4695  getReserves */\n      tag_29\n        /* \"contracts/PoolContract.sol\":4684:4697  getReserves() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/PoolContract.sol\":4651:4697  (uint reserve0, uint reserve1) = getReserves() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":4708:4722  uint liquidity */\n      0x00\n        /* \"contracts/PoolContract.sol\":4725:4734  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":4725:4749  balanceOf[address(this)] */\n      0x00\n        /* \"contracts/PoolContract.sol\":4743:4747  this */\n      address\n        /* \"contracts/PoolContract.sol\":4725:4749  balanceOf[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":4708:4749  uint liquidity = balanceOf[address(this)] */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":4856:4867  totalSupply */\n      sload(0x00)\n        /* \"contracts/PoolContract.sol\":4830:4853  liquidity.mul(balance0) */\n      tag_154\n        /* \"contracts/PoolContract.sol\":4844:4852  balance0 */\n      dup7\n        /* \"contracts/PoolContract.sol\":4830:4839  liquidity */\n      dup4\n        /* \"contracts/PoolContract.sol\":4830:4843  liquidity.mul */\n      tag_127\n      swap1\n        /* \"contracts/PoolContract.sol\":4830:4853  liquidity.mul(balance0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/PoolContract.sol\":4830:4867  liquidity.mul(balance0) / totalSupply */\n      tag_155\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_155:\n        /* \"contracts/PoolContract.sol\":4820:4867  amount0 = liquidity.mul(balance0) / totalSupply */\n      swap7\n      pop\n        /* \"contracts/PoolContract.sol\":4914:4925  totalSupply */\n      sload(0x00)\n        /* \"contracts/PoolContract.sol\":4888:4911  liquidity.mul(balance1) */\n      tag_156\n        /* \"contracts/PoolContract.sol\":4902:4910  balance1 */\n      dup6\n        /* \"contracts/PoolContract.sol\":4888:4897  liquidity */\n      dup4\n        /* \"contracts/PoolContract.sol\":4888:4901  liquidity.mul */\n      tag_127\n      swap1\n        /* \"contracts/PoolContract.sol\":4888:4911  liquidity.mul(balance1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/PoolContract.sol\":4888:4925  liquidity.mul(balance1) / totalSupply */\n      tag_157\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_157:\n        /* \"contracts/PoolContract.sol\":4878:4925  amount1 = liquidity.mul(balance1) / totalSupply */\n      swap6\n      pop\n        /* \"contracts/PoolContract.sol\":4954:4955  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":4944:4951  amount0 */\n      dup8\n        /* \"contracts/PoolContract.sol\":4944:4955  amount0 > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":4944:4970  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_158\n      jumpi\n      pop\n        /* \"contracts/PoolContract.sol\":4969:4970  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":4959:4966  amount1 */\n      dup7\n        /* \"contracts/PoolContract.sol\":4959:4970  amount1 > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":4944:4970  amount0 > 0 && amount1 > 0 */\n    tag_158:\n        /* \"contracts/PoolContract.sol\":4936:5010  require(amount0 > 0 && amount1 > 0, \"POOL: Insufficient liquidity burned\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/PoolContract.sol\":5076:5107  _burn(address(this), liquidity) */\n      tag_162\n        /* \"contracts/PoolContract.sol\":5090:5094  this */\n      address\n        /* \"contracts/PoolContract.sol\":5097:5106  liquidity */\n      dup3\n        /* \"contracts/PoolContract.sol\":5076:5081  _burn */\n      tag_163\n        /* \"contracts/PoolContract.sol\":5076:5107  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/PoolContract.sol\":5125:5131  token0 */\n      immutable(\"0xe54f8e4a5d17b2e4d97cb94ddb2a2b00b3620f93c06158e24f4515b3f1ad0dd8\")\n        /* \"contracts/PoolContract.sol\":5118:5141  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/PoolContract.sol\":5142:5144  to */\n      dup10\n        /* \"contracts/PoolContract.sol\":5146:5153  amount0 */\n      dup10\n        /* \"contracts/PoolContract.sol\":5118:5154  IERC20(token0).transfer(to, amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      pop\n        /* \"contracts/PoolContract.sol\":5172:5178  token1 */\n      immutable(\"0x1919bbb77b48a65a3a334e011819abf5317994b267bc385c63c0af09ecf64635\")\n        /* \"contracts/PoolContract.sol\":5165:5188  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/PoolContract.sol\":5189:5191  to */\n      dup10\n        /* \"contracts/PoolContract.sol\":5193:5200  amount1 */\n      dup9\n        /* \"contracts/PoolContract.sol\":5165:5201  IERC20(token1).transfer(to, amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_171:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_175:\n      pop\n        /* \"contracts/PoolContract.sol\":5285:5298  getBalances() */\n      tag_176\n        /* \"contracts/PoolContract.sol\":5285:5296  getBalances */\n      tag_25\n        /* \"contracts/PoolContract.sol\":5285:5298  getBalances() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/PoolContract.sol\":5262:5298  (balance0, balance1) = getBalances() */\n      dup1\n      swap6\n      pop\n      dup2\n      swap7\n      pop\n      pop\n      pop\n        /* \"contracts/PoolContract.sol\":5309:5336  _update(balance0, balance1) */\n      tag_177\n        /* \"contracts/PoolContract.sol\":5317:5325  balance0 */\n      dup6\n        /* \"contracts/PoolContract.sol\":5327:5335  balance1 */\n      dup6\n        /* \"contracts/PoolContract.sol\":5309:5316  _update */\n      tag_143\n        /* \"contracts/PoolContract.sol\":5309:5336  _update(balance0, balance1) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/PoolContract.sol\":5387:5389  to */\n      dup8\n        /* \"contracts/PoolContract.sol\":5352:5390  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":5357:5367  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":5352:5390  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n        /* \"contracts/PoolContract.sol\":5369:5376  amount0 */\n      dup10\n        /* \"contracts/PoolContract.sol\":5378:5385  amount1 */\n      dup10\n        /* \"contracts/PoolContract.sol\":5352:5390  Burn(msg.sender, amount0, amount1, to) */\n      mload(0x40)\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":4422:5398  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PoolContract.sol\":4350:5398  function burn(address to) external returns (uint amount0, uint amount1) {\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1722:1870  function transfer(address to, uint value) override external returns (bool) {\r... */\n    tag_68:\n        /* \"contracts/PoolContract.sol\":1791:1795  bool */\n      0x00\n        /* \"contracts/PoolContract.sol\":1808:1840  _transfer(msg.sender, to, value) */\n      tag_180\n        /* \"contracts/PoolContract.sol\":1818:1828  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":1830:1832  to */\n      dup5\n        /* \"contracts/PoolContract.sol\":1834:1839  value */\n      dup5\n        /* \"contracts/PoolContract.sol\":1808:1817  _transfer */\n      tag_115\n        /* \"contracts/PoolContract.sol\":1808:1840  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/PoolContract.sol\":1858:1862  true */\n      0x01\n        /* \"contracts/PoolContract.sol\":1851:1862  return true */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":1722:1870  function transfer(address to, uint value) override external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":7347:7533  function setRouter(address _router) external {\r... */\n    tag_72:\n        /* \"contracts/PoolContract.sol\":7466:7471  admin */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":7452:7471  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":7452:7462  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":7452:7471  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoolContract.sol\":7444:7498  require(msg.sender == admin, \"FACTORY: Access denied\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_148\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/PoolContract.sol\":7518:7525  _router */\n      dup1\n        /* \"contracts/PoolContract.sol\":7509:7515  router */\n      0x04\n      0x00\n        /* \"contracts/PoolContract.sol\":7509:7525  router = _router */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":7347:7533  function setRouter(address _router) external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":2476:2508  address public immutable factory */\n    tag_74:\n      immutable(\"0x0e2ebb9616682a934d374d36ec533ac8c688d143a19ec3095914433ecc16266a\")\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":2581:2612  address public immutable token1 */\n    tag_77:\n      immutable(\"0x1919bbb77b48a65a3a334e011819abf5317994b267bc385c63c0af09ecf64635\")\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":5444:6697  function swap(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) external {\r... */\n    tag_82:\n        /* \"contracts/PoolContract.sol\":5640:5646  router */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":5626:5646  msg.sender == router */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":5626:5636  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":5626:5646  msg.sender == router */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoolContract.sol\":5618:5670  require(msg.sender == router, \"POOL: Access denied\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_119\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/PoolContract.sol\":5714:5727  uint reserve0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":5729:5742  uint reserve1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":5746:5759  getReserves() */\n      tag_187\n        /* \"contracts/PoolContract.sol\":5746:5757  getReserves */\n      tag_29\n        /* \"contracts/PoolContract.sol\":5746:5759  getReserves() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/PoolContract.sol\":5713:5759  (uint reserve0, uint reserve1) = getReserves() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":5771:5786  uint amount0Out */\n      0x00\n        /* \"contracts/PoolContract.sol\":5788:5803  uint amount1Out */\n      dup1\n        /* \"contracts/PoolContract.sol\":5817:5825  tokenOut */\n      dup8\n        /* \"contracts/PoolContract.sol\":5807:5825  token0 == tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":5807:5813  token0 */\n      immutable(\"0xe54f8e4a5d17b2e4d97cb94ddb2a2b00b3620f93c06158e24f4515b3f1ad0dd8\")\n        /* \"contracts/PoolContract.sol\":5807:5825  token0 == tokenOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoolContract.sol\":5807:5871  token0 == tokenOut ? (amountOut, uint(0)) : (uint(0), amountOut) */\n      tag_188\n      jumpi\n        /* \"contracts/PoolContract.sol\":5857:5858  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":5861:5870  amountOut */\n      dup7\n        /* \"contracts/PoolContract.sol\":5807:5871  token0 == tokenOut ? (amountOut, uint(0)) : (uint(0), amountOut) */\n      jump(tag_189)\n    tag_188:\n        /* \"contracts/PoolContract.sol\":5829:5838  amountOut */\n      dup6\n        /* \"contracts/PoolContract.sol\":5845:5846  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":5807:5871  token0 == tokenOut ? (amountOut, uint(0)) : (uint(0), amountOut) */\n    tag_189:\n        /* \"contracts/PoolContract.sol\":5770:5871  (uint amount0Out, uint amount1Out) = token0 == tokenOut ? (amountOut, uint(0)) : (uint(0), amountOut) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":5903:5904  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":5890:5900  amount0Out */\n      dup3\n        /* \"contracts/PoolContract.sol\":5890:5904  amount0Out > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":5890:5922  amount0Out > 0 || amount1Out > 0 */\n      dup1\n      tag_190\n      jumpi\n      pop\n        /* \"contracts/PoolContract.sol\":5921:5922  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":5908:5918  amount1Out */\n      dup2\n        /* \"contracts/PoolContract.sol\":5908:5922  amount1Out > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":5890:5922  amount0Out > 0 || amount1Out > 0 */\n    tag_190:\n        /* \"contracts/PoolContract.sol\":5882:5959  require(amount0Out > 0 || amount1Out > 0, \"ERROR: Insufficent output amount\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/PoolContract.sol\":6002:6015  uint balance0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6017:6030  uint balance1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":6034:6047  getBalances() */\n      tag_194\n        /* \"contracts/PoolContract.sol\":6034:6045  getBalances */\n      tag_25\n        /* \"contracts/PoolContract.sol\":6034:6047  getBalances() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/PoolContract.sol\":6001:6047  (uint balance0, uint balance1) = getBalances() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PoolContract.sol\":6058:6072  uint amount0In */\n      0x00\n        /* \"contracts/PoolContract.sol\":6086:6110  reserve0.sub(amount0Out) */\n      tag_195\n        /* \"contracts/PoolContract.sol\":6099:6109  amount0Out */\n      dup6\n        /* \"contracts/PoolContract.sol\":6086:6094  reserve0 */\n      dup9\n        /* \"contracts/PoolContract.sol\":6086:6098  reserve0.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":6086:6110  reserve0.sub(amount0Out) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"contracts/PoolContract.sol\":6075:6083  balance0 */\n      dup4\n        /* \"contracts/PoolContract.sol\":6075:6110  balance0 > reserve0.sub(amount0Out) */\n      gt\n        /* \"contracts/PoolContract.sol\":6075:6155  balance0 > reserve0.sub(amount0Out) ? balance0.sub(reserve0.sub(amount0Out)) : 0 */\n      tag_196\n      jumpi\n        /* \"contracts/PoolContract.sol\":6154:6155  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6075:6155  balance0 > reserve0.sub(amount0Out) ? balance0.sub(reserve0.sub(amount0Out)) : 0 */\n      jump(tag_197)\n    tag_196:\n        /* \"contracts/PoolContract.sol\":6113:6151  balance0.sub(reserve0.sub(amount0Out)) */\n      tag_198\n        /* \"contracts/PoolContract.sol\":6126:6150  reserve0.sub(amount0Out) */\n      tag_199\n        /* \"contracts/PoolContract.sol\":6139:6149  amount0Out */\n      dup7\n        /* \"contracts/PoolContract.sol\":6126:6134  reserve0 */\n      dup10\n        /* \"contracts/PoolContract.sol\":6126:6138  reserve0.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":6126:6150  reserve0.sub(amount0Out) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/PoolContract.sol\":6113:6121  balance0 */\n      dup5\n        /* \"contracts/PoolContract.sol\":6113:6125  balance0.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":6113:6151  balance0.sub(reserve0.sub(amount0Out)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"contracts/PoolContract.sol\":6075:6155  balance0 > reserve0.sub(amount0Out) ? balance0.sub(reserve0.sub(amount0Out)) : 0 */\n    tag_197:\n        /* \"contracts/PoolContract.sol\":6058:6155  uint amount0In = balance0 > reserve0.sub(amount0Out) ? balance0.sub(reserve0.sub(amount0Out)) : 0 */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":6166:6180  uint amount1In */\n      0x00\n        /* \"contracts/PoolContract.sol\":6194:6218  reserve1.sub(amount1Out) */\n      tag_200\n        /* \"contracts/PoolContract.sol\":6207:6217  amount1Out */\n      dup6\n        /* \"contracts/PoolContract.sol\":6194:6202  reserve1 */\n      dup9\n        /* \"contracts/PoolContract.sol\":6194:6206  reserve1.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":6194:6218  reserve1.sub(amount1Out) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/PoolContract.sol\":6183:6191  balance1 */\n      dup4\n        /* \"contracts/PoolContract.sol\":6183:6218  balance1 > reserve1.sub(amount1Out) */\n      gt\n        /* \"contracts/PoolContract.sol\":6183:6263  balance1 > reserve1.sub(amount1Out) ? balance1.sub(reserve1.sub(amount1Out)) : 0 */\n      tag_201\n      jumpi\n        /* \"contracts/PoolContract.sol\":6262:6263  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6183:6263  balance1 > reserve1.sub(amount1Out) ? balance1.sub(reserve1.sub(amount1Out)) : 0 */\n      jump(tag_202)\n    tag_201:\n        /* \"contracts/PoolContract.sol\":6221:6259  balance1.sub(reserve1.sub(amount1Out)) */\n      tag_203\n        /* \"contracts/PoolContract.sol\":6234:6258  reserve1.sub(amount1Out) */\n      tag_204\n        /* \"contracts/PoolContract.sol\":6247:6257  amount1Out */\n      dup7\n        /* \"contracts/PoolContract.sol\":6234:6242  reserve1 */\n      dup10\n        /* \"contracts/PoolContract.sol\":6234:6246  reserve1.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":6234:6258  reserve1.sub(amount1Out) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/PoolContract.sol\":6221:6229  balance1 */\n      dup5\n        /* \"contracts/PoolContract.sol\":6221:6233  balance1.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":6221:6259  balance1.sub(reserve1.sub(amount1Out)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/PoolContract.sol\":6183:6263  balance1 > reserve1.sub(amount1Out) ? balance1.sub(reserve1.sub(amount1Out)) : 0 */\n    tag_202:\n        /* \"contracts/PoolContract.sol\":6166:6263  uint amount1In = balance1 > reserve1.sub(amount1Out) ? balance1.sub(reserve1.sub(amount1Out)) : 0 */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":6294:6295  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6282:6291  amount0In */\n      dup3\n        /* \"contracts/PoolContract.sol\":6282:6295  amount0In > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":6282:6312  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_205\n      jumpi\n      pop\n        /* \"contracts/PoolContract.sol\":6311:6312  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6299:6308  amount1In */\n      dup2\n        /* \"contracts/PoolContract.sol\":6299:6312  amount1In > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":6282:6312  amount0In > 0 || amount1In > 0 */\n    tag_205:\n        /* \"contracts/PoolContract.sol\":6274:6349  require(amount0In > 0 || amount1In > 0, \"ERROR: insufficient input amount\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/PoolContract.sol\":6407:6408  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6394:6404  amount0Out */\n      dup7\n        /* \"contracts/PoolContract.sol\":6394:6408  amount0Out > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":6390:6449  if (amount0Out > 0) IERC20(token0).transfer(to, amount0Out) */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/PoolContract.sol\":6417:6423  token0 */\n      immutable(\"0xe54f8e4a5d17b2e4d97cb94ddb2a2b00b3620f93c06158e24f4515b3f1ad0dd8\")\n        /* \"contracts/PoolContract.sol\":6410:6433  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/PoolContract.sol\":6434:6436  to */\n      dup11\n        /* \"contracts/PoolContract.sol\":6438:6448  amount0Out */\n      dup9\n        /* \"contracts/PoolContract.sol\":6410:6449  IERC20(token0).transfer(to, amount0Out) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_214:\n      pop\n        /* \"contracts/PoolContract.sol\":6390:6449  if (amount0Out > 0) IERC20(token0).transfer(to, amount0Out) */\n    tag_209:\n        /* \"contracts/PoolContract.sol\":6477:6478  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":6464:6474  amount1Out */\n      dup6\n        /* \"contracts/PoolContract.sol\":6464:6478  amount1Out > 0 */\n      gt\n        /* \"contracts/PoolContract.sol\":6460:6519  if (amount1Out > 0) IERC20(token1).transfer(to, amount1Out) */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/PoolContract.sol\":6487:6493  token1 */\n      immutable(\"0x1919bbb77b48a65a3a334e011819abf5317994b267bc385c63c0af09ecf64635\")\n        /* \"contracts/PoolContract.sol\":6480:6503  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/PoolContract.sol\":6504:6506  to */\n      dup11\n        /* \"contracts/PoolContract.sol\":6508:6518  amount1Out */\n      dup8\n        /* \"contracts/PoolContract.sol\":6480:6519  IERC20(token1).transfer(to, amount1Out) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_220:\n      pop\n        /* \"contracts/PoolContract.sol\":6460:6519  if (amount1Out > 0) IERC20(token1).transfer(to, amount1Out) */\n    tag_215:\n        /* \"contracts/PoolContract.sol\":6580:6607  _update(balance0, balance1) */\n      tag_221\n        /* \"contracts/PoolContract.sol\":6588:6596  balance0 */\n      dup5\n        /* \"contracts/PoolContract.sol\":6598:6606  balance1 */\n      dup5\n        /* \"contracts/PoolContract.sol\":6580:6587  _update */\n      tag_143\n        /* \"contracts/PoolContract.sol\":6580:6607  _update(balance0, balance1) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/PoolContract.sol\":6686:6688  to */\n      dup9\n        /* \"contracts/PoolContract.sol\":6623:6689  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":6628:6638  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":6623:6689  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n        /* \"contracts/PoolContract.sol\":6640:6649  amount0In */\n      dup5\n        /* \"contracts/PoolContract.sol\":6651:6660  amount1In */\n      dup5\n        /* \"contracts/PoolContract.sol\":6662:6672  amount0Out */\n      dup11\n        /* \"contracts/PoolContract.sol\":6674:6684  amount1Out */\n      dup11\n        /* \"contracts/PoolContract.sol\":6623:6689  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      mload(0x40)\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":5545:6697  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PoolContract.sol\":5444:6697  function swap(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) external {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":736:806  mapping(address => mapping(address => uint)) override public allowance */\n    tag_86:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":2447:2467  address public admin */\n    tag_89:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":2515:2536  address public router */\n    tag_92:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1518:1687  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_109:\n        /* \"contracts/PoolContract.sol\":1627:1632  value */\n      dup1\n        /* \"contracts/PoolContract.sol\":1599:1608  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":1599:1615  allowance[owner] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1609:1614  owner */\n      dup6\n        /* \"contracts/PoolContract.sol\":1599:1615  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1599:1624  allowance[owner][spender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1616:1623  spender */\n      dup5\n        /* \"contracts/PoolContract.sol\":1599:1624  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1599:1632  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1664:1671  spender */\n      dup2\n        /* \"contracts/PoolContract.sol\":1648:1679  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":1657:1662  owner */\n      dup4\n        /* \"contracts/PoolContract.sol\":1648:1679  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/PoolContract.sol\":1673:1678  value */\n      dup4\n        /* \"contracts/PoolContract.sol\":1648:1679  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":1518:1687  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1292:1512  function _transfer(address from, address to, uint value) private {\r... */\n    tag_115:\n        /* \"contracts/PoolContract.sol\":1386:1412  balanceOf[from].sub(value) */\n      tag_230\n        /* \"contracts/PoolContract.sol\":1406:1411  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":1386:1395  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1386:1401  balanceOf[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1396:1400  from */\n      dup7\n        /* \"contracts/PoolContract.sol\":1386:1401  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":1386:1405  balanceOf[from].sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":1386:1412  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/PoolContract.sol\":1368:1377  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1368:1383  balanceOf[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1378:1382  from */\n      dup6\n        /* \"contracts/PoolContract.sol\":1368:1383  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1368:1412  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1439:1463  balanceOf[to].add(value) */\n      tag_231\n        /* \"contracts/PoolContract.sol\":1457:1462  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":1439:1448  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1439:1452  balanceOf[to] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1449:1451  to */\n      dup6\n        /* \"contracts/PoolContract.sol\":1439:1452  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":1439:1456  balanceOf[to].add */\n      tag_232\n      swap1\n        /* \"contracts/PoolContract.sol\":1439:1463  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/PoolContract.sol\":1423:1432  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1423:1436  balanceOf[to] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1433:1435  to */\n      dup5\n        /* \"contracts/PoolContract.sol\":1423:1436  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1423:1463  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1494:1496  to */\n      dup2\n        /* \"contracts/PoolContract.sol\":1479:1504  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":1488:1492  from */\n      dup4\n        /* \"contracts/PoolContract.sol\":1479:1504  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PoolContract.sol\":1498:1503  value */\n      dup4\n        /* \"contracts/PoolContract.sol\":1479:1504  Transfer(from, to, value) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":1292:1512  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6237:7879  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6285:6292  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6313:6314  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6308:6309  a */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6308:6314  a == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6304:6349  if (a == 0) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6337:6338  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6330:6338  return 0 */\n      swap1\n      pop\n      jump(tag_237)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6304:6349  if (a == 0) {... */\n    tag_238:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7028:7042  uint256 result */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7062:7063  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7051:7058  log2(a) */\n      tag_239\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7056:7057  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7051:7055  log2 */\n      tag_240\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7051:7058  log2(a) */\n      jump\t// in\n    tag_239:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7051:7063  log2(a) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7045:7046  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7045:7064  1 << (log2(a) >> 1) */\n      swap1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7028:7064  uint256 result = 1 << (log2(a) >> 1) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7523:7524  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7512:7518  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7508:7509  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7508:7518  a / result */\n      dup2\n      tag_241\n      jumpi\n      tag_242\n      tag_243\n      jump\t// in\n    tag_242:\n    tag_241:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7499:7505  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7499:7518  result + a / result */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7498:7524  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7489:7524  result = (result + a / result) >> 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7572:7573  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7561:7567  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7557:7558  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7557:7567  a / result */\n      dup2\n      tag_244\n      jumpi\n      tag_245\n      tag_243\n      jump\t// in\n    tag_245:\n    tag_244:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7548:7554  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7548:7567  result + a / result */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7547:7573  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7538:7573  result = (result + a / result) >> 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7621:7622  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7610:7616  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7606:7607  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7606:7616  a / result */\n      dup2\n      tag_246\n      jumpi\n      tag_247\n      tag_243\n      jump\t// in\n    tag_247:\n    tag_246:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7597:7603  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7597:7616  result + a / result */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7596:7622  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7587:7622  result = (result + a / result) >> 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7670:7671  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7659:7665  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7655:7656  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7655:7665  a / result */\n      dup2\n      tag_248\n      jumpi\n      tag_249\n      tag_243\n      jump\t// in\n    tag_249:\n    tag_248:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7646:7652  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7646:7665  result + a / result */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7645:7671  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7636:7671  result = (result + a / result) >> 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7719:7720  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7708:7714  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7704:7705  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7704:7714  a / result */\n      dup2\n      tag_250\n      jumpi\n      tag_251\n      tag_243\n      jump\t// in\n    tag_251:\n    tag_250:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7695:7701  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7695:7714  result + a / result */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7694:7720  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7685:7720  result = (result + a / result) >> 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7768:7769  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7757:7763  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7753:7754  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7753:7763  a / result */\n      dup2\n      tag_252\n      jumpi\n      tag_253\n      tag_243\n      jump\t// in\n    tag_253:\n    tag_252:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7744:7750  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7744:7763  result + a / result */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7743:7769  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7734:7769  result = (result + a / result) >> 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7817:7818  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7806:7812  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7802:7803  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7802:7812  a / result */\n      dup2\n      tag_254\n      jumpi\n      tag_255\n      tag_243\n      jump\t// in\n    tag_255:\n    tag_254:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7793:7799  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7793:7812  result + a / result */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7792:7818  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7783:7818  result = (result + a / result) >> 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7839:7862  min(result, a / result) */\n      tag_256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7843:7849  result */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7855:7861  result */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7851:7852  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7851:7861  a / result */\n      dup2\n      tag_257\n      jumpi\n      tag_258\n      tag_243\n      jump\t// in\n    tag_258:\n    tag_257:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7839:7842  min */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7839:7862  min(result, a / result) */\n      jump\t// in\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":7832:7862  return min(result, a / result) */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":6237:7879  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_237:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":646:653  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":676:677  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":672:673  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":672:677  a < b */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      tag_260\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":684:685  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      jump(tag_261)\n    tag_260:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":680:681  a */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n    tag_261:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":665:685  return a < b ? a : b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":870:1071  function _mint(address to, uint value) internal {\r... */\n    tag_141:\n        /* \"contracts/PoolContract.sol\":943:965  totalSupply.add(value) */\n      tag_263\n        /* \"contracts/PoolContract.sol\":959:964  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":943:954  totalSupply */\n      sload(0x00)\n        /* \"contracts/PoolContract.sol\":943:958  totalSupply.add */\n      tag_232\n      swap1\n        /* \"contracts/PoolContract.sol\":943:965  totalSupply.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/PoolContract.sol\":929:940  totalSupply */\n      0x00\n        /* \"contracts/PoolContract.sol\":929:965  totalSupply = totalSupply.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":992:1016  balanceOf[to].add(value) */\n      tag_264\n        /* \"contracts/PoolContract.sol\":1010:1015  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":992:1001  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":992:1005  balanceOf[to] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1002:1004  to */\n      dup6\n        /* \"contracts/PoolContract.sol\":992:1005  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":992:1009  balanceOf[to].add */\n      tag_232\n      swap1\n        /* \"contracts/PoolContract.sol\":992:1016  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/PoolContract.sol\":976:985  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":976:989  balanceOf[to] */\n      0x00\n        /* \"contracts/PoolContract.sol\":986:988  to */\n      dup5\n        /* \"contracts/PoolContract.sol\":976:989  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":976:1016  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1053:1055  to */\n      dup2\n        /* \"contracts/PoolContract.sol\":1032:1063  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":1049:1050  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":1032:1063  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PoolContract.sol\":1057:1062  value */\n      dup4\n        /* \"contracts/PoolContract.sol\":1032:1063  Transfer(address(0), to, value) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":870:1071  function _mint(address to, uint value) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":7094:7313  function _update(uint balance0, uint balance1) private {\r... */\n    tag_143:\n        /* \"contracts/PoolContract.sol\":7180:7194  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/PoolContract.sol\":7168:7176  balance0 */\n      dup3\n        /* \"contracts/PoolContract.sol\":7168:7194  balance0 <= type(uint).max */\n      gt\n      iszero\n        /* \"contracts/PoolContract.sol\":7168:7224  balance0 <= type(uint).max && balance1 <= type(uint).max */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"contracts/PoolContract.sol\":7210:7224  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/PoolContract.sol\":7198:7206  balance1 */\n      dup2\n        /* \"contracts/PoolContract.sol\":7198:7224  balance1 <= type(uint).max */\n      gt\n      iszero\n        /* \"contracts/PoolContract.sol\":7168:7224  balance0 <= type(uint).max && balance1 <= type(uint).max */\n    tag_267:\n        /* \"contracts/PoolContract.sol\":7160:7243  require(balance0 <= type(uint).max && balance1 <= type(uint).max, \"POOL: Overflow\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"contracts/PoolContract.sol\":7266:7274  balance0 */\n      dup2\n        /* \"contracts/PoolContract.sol\":7254:7263  _reserve0 */\n      0x05\n        /* \"contracts/PoolContract.sol\":7254:7274  _reserve0 = balance0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":7297:7305  balance1 */\n      dup1\n        /* \"contracts/PoolContract.sol\":7285:7294  _reserve1 */\n      0x06\n        /* \"contracts/PoolContract.sol\":7285:7305  _reserve1 = balance1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":7094:7313  function _update(uint balance0, uint balance1) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1077:1286  function _burn(address from, uint value) internal {\r... */\n    tag_163:\n        /* \"contracts/PoolContract.sol\":1156:1182  balanceOf[from].sub(value) */\n      tag_272\n        /* \"contracts/PoolContract.sol\":1176:1181  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":1156:1165  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1156:1171  balanceOf[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1166:1170  from */\n      dup6\n        /* \"contracts/PoolContract.sol\":1156:1171  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":1156:1175  balanceOf[from].sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":1156:1182  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/PoolContract.sol\":1138:1147  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1138:1153  balanceOf[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1148:1152  from */\n      dup5\n        /* \"contracts/PoolContract.sol\":1138:1153  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1138:1182  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1207:1229  totalSupply.sub(value) */\n      tag_273\n        /* \"contracts/PoolContract.sol\":1223:1228  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":1207:1218  totalSupply */\n      sload(0x00)\n        /* \"contracts/PoolContract.sol\":1207:1222  totalSupply.sub */\n      tag_113\n      swap1\n        /* \"contracts/PoolContract.sol\":1207:1229  totalSupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/PoolContract.sol\":1193:1204  totalSupply */\n      0x00\n        /* \"contracts/PoolContract.sol\":1193:1229  totalSupply = totalSupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1268:1269  0 */\n      0x00\n        /* \"contracts/PoolContract.sol\":1245:1278  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":1254:1258  from */\n      dup3\n        /* \"contracts/PoolContract.sol\":1245:1278  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PoolContract.sol\":1272:1277  value */\n      dup4\n        /* \"contracts/PoolContract.sol\":1245:1278  Transfer(from, address(0), value) */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":1077:1286  function _burn(address from, uint value) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_232:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8340:9323  function log2(uint256 value) internal pure returns (uint256) {... */\n    tag_240:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8392:8399  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8411:8425  uint256 result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8428:8429  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8411:8429  uint256 result = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8482:8483  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8476:8479  128 */\n      0x80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8467:8472  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8467:8479  value >> 128 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8467:8483  value >> 128 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8463:8562  if (value >> 128 > 0) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8513:8516  128 */\n      0x80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8503:8516  value >>= 128 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8544:8547  128 */\n      0x80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8534:8547  result += 128 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8463:8562  if (value >> 128 > 0) {... */\n    tag_279:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8593:8594  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8588:8590  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8579:8584  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8579:8590  value >> 64 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8579:8594  value >> 64 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8575:8671  if (value >> 64 > 0) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8624:8626  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8614:8626  value >>= 64 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8654:8656  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8644:8656  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8575:8671  if (value >> 64 > 0) {... */\n    tag_280:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8702:8703  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8697:8699  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8688:8693  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8688:8699  value >> 32 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8688:8703  value >> 32 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8684:8780  if (value >> 32 > 0) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8733:8735  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8723:8735  value >>= 32 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8763:8765  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8753:8765  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8684:8780  if (value >> 32 > 0) {... */\n    tag_281:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8811:8812  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8806:8808  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8797:8802  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8797:8808  value >> 16 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8797:8812  value >> 16 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8793:8889  if (value >> 16 > 0) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8842:8844  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8832:8844  value >>= 16 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8872:8874  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8862:8874  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8793:8889  if (value >> 16 > 0) {... */\n    tag_282:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8919:8920  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8915:8916  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8906:8911  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8906:8916  value >> 8 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8906:8920  value >> 8 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8902:8995  if (value >> 8 > 0) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8950:8951  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8940:8951  value >>= 8 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8979:8980  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8969:8980  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8902:8995  if (value >> 8 > 0) {... */\n    tag_283:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9025:9026  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9021:9022  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9012:9017  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9012:9022  value >> 4 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9012:9026  value >> 4 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9008:9101  if (value >> 4 > 0) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9056:9057  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9046:9057  value >>= 4 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9085:9086  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9075:9086  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9008:9101  if (value >> 4 > 0) {... */\n    tag_284:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9131:9132  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9127:9128  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9118:9123  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9118:9128  value >> 2 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9118:9132  value >> 2 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9114:9207  if (value >> 2 > 0) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9162:9163  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9152:9163  value >>= 2 */\n      dup4\n      swap1\n      shr\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9191:9192  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9181:9192  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9114:9207  if (value >> 2 > 0) {... */\n    tag_285:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9237:9238  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9233:9234  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9224:9229  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9224:9234  value >> 1 */\n      swap1\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9224:9238  value >> 1 > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9220:9284  if (value >> 1 > 0) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9268:9269  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9258:9269  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9220:9284  if (value >> 1 > 0) {... */\n    tag_286:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9310:9316  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":9303:9316  return result */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":8340:9323  function log2(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_288:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_290\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_292:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_294\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_296:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_298\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_300:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_302\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_299\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_52:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_305\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":665:784   */\n    tag_304:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_307\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_288\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1398   */\n    tag_85:\n        /* \"#utility.yul\":992:998   */\n      0x00\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":1049:1051   */\n      0x40\n        /* \"#utility.yul\":1037:1046   */\n      dup4\n        /* \"#utility.yul\":1028:1035   */\n      dup6\n        /* \"#utility.yul\":1024:1047   */\n      sub\n        /* \"#utility.yul\":1020:1052   */\n      slt\n        /* \"#utility.yul\":1017:1136   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1055:1134   */\n      tag_310\n      tag_306\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1017:1136   */\n    tag_309:\n        /* \"#utility.yul\":1175:1176   */\n      0x00\n        /* \"#utility.yul\":1200:1253   */\n      tag_311\n        /* \"#utility.yul\":1245:1252   */\n      dup6\n        /* \"#utility.yul\":1236:1242   */\n      dup3\n        /* \"#utility.yul\":1225:1234   */\n      dup7\n        /* \"#utility.yul\":1221:1243   */\n      add\n        /* \"#utility.yul\":1200:1253   */\n      tag_288\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1190:1253   */\n      swap3\n      pop\n        /* \"#utility.yul\":1146:1263   */\n      pop\n        /* \"#utility.yul\":1302:1304   */\n      0x20\n        /* \"#utility.yul\":1328:1381   */\n      tag_312\n        /* \"#utility.yul\":1373:1380   */\n      dup6\n        /* \"#utility.yul\":1364:1370   */\n      dup3\n        /* \"#utility.yul\":1353:1362   */\n      dup7\n        /* \"#utility.yul\":1349:1371   */\n      add\n        /* \"#utility.yul\":1328:1381   */\n      tag_288\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1318:1381   */\n      swap2\n      pop\n        /* \"#utility.yul\":1273:1391   */\n      pop\n        /* \"#utility.yul\":924:1398   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:2023   */\n    tag_47:\n        /* \"#utility.yul\":1481:1487   */\n      0x00\n        /* \"#utility.yul\":1489:1495   */\n      dup1\n        /* \"#utility.yul\":1497:1503   */\n      0x00\n        /* \"#utility.yul\":1546:1548   */\n      0x60\n        /* \"#utility.yul\":1534:1543   */\n      dup5\n        /* \"#utility.yul\":1525:1532   */\n      dup7\n        /* \"#utility.yul\":1521:1544   */\n      sub\n        /* \"#utility.yul\":1517:1549   */\n      slt\n        /* \"#utility.yul\":1514:1633   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":1552:1631   */\n      tag_315\n      tag_306\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1514:1633   */\n    tag_314:\n        /* \"#utility.yul\":1672:1673   */\n      0x00\n        /* \"#utility.yul\":1697:1750   */\n      tag_316\n        /* \"#utility.yul\":1742:1749   */\n      dup7\n        /* \"#utility.yul\":1733:1739   */\n      dup3\n        /* \"#utility.yul\":1722:1731   */\n      dup8\n        /* \"#utility.yul\":1718:1740   */\n      add\n        /* \"#utility.yul\":1697:1750   */\n      tag_288\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1687:1750   */\n      swap4\n      pop\n        /* \"#utility.yul\":1643:1760   */\n      pop\n        /* \"#utility.yul\":1799:1801   */\n      0x20\n        /* \"#utility.yul\":1825:1878   */\n      tag_317\n        /* \"#utility.yul\":1870:1877   */\n      dup7\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup8\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_288\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1770:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x40\n        /* \"#utility.yul\":1953:2006   */\n      tag_318\n        /* \"#utility.yul\":1998:2005   */\n      dup7\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup8\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_296\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1404:2023   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2029:2940   */\n    tag_81:\n        /* \"#utility.yul\":2124:2130   */\n      0x00\n        /* \"#utility.yul\":2132:2138   */\n      dup1\n        /* \"#utility.yul\":2140:2146   */\n      0x00\n        /* \"#utility.yul\":2148:2154   */\n      dup1\n        /* \"#utility.yul\":2156:2162   */\n      0x00\n        /* \"#utility.yul\":2205:2208   */\n      0xa0\n        /* \"#utility.yul\":2193:2202   */\n      dup7\n        /* \"#utility.yul\":2184:2191   */\n      dup9\n        /* \"#utility.yul\":2180:2203   */\n      sub\n        /* \"#utility.yul\":2176:2209   */\n      slt\n        /* \"#utility.yul\":2173:2293   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2212:2291   */\n      tag_321\n      tag_306\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2173:2293   */\n    tag_320:\n        /* \"#utility.yul\":2332:2333   */\n      0x00\n        /* \"#utility.yul\":2357:2410   */\n      tag_322\n        /* \"#utility.yul\":2402:2409   */\n      dup9\n        /* \"#utility.yul\":2393:2399   */\n      dup3\n        /* \"#utility.yul\":2382:2391   */\n      dup10\n        /* \"#utility.yul\":2378:2400   */\n      add\n        /* \"#utility.yul\":2357:2410   */\n      tag_288\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2347:2410   */\n      swap6\n      pop\n        /* \"#utility.yul\":2303:2420   */\n      pop\n        /* \"#utility.yul\":2459:2461   */\n      0x20\n        /* \"#utility.yul\":2485:2538   */\n      tag_323\n        /* \"#utility.yul\":2530:2537   */\n      dup9\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup10\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_288\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2475:2538   */\n      swap5\n      pop\n        /* \"#utility.yul\":2430:2548   */\n      pop\n        /* \"#utility.yul\":2587:2589   */\n      0x40\n        /* \"#utility.yul\":2613:2666   */\n      tag_324\n        /* \"#utility.yul\":2658:2665   */\n      dup9\n        /* \"#utility.yul\":2649:2655   */\n      dup3\n        /* \"#utility.yul\":2638:2647   */\n      dup10\n        /* \"#utility.yul\":2634:2656   */\n      add\n        /* \"#utility.yul\":2613:2666   */\n      tag_296\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2603:2666   */\n      swap4\n      pop\n        /* \"#utility.yul\":2558:2676   */\n      pop\n        /* \"#utility.yul\":2715:2717   */\n      0x60\n        /* \"#utility.yul\":2741:2794   */\n      tag_325\n        /* \"#utility.yul\":2786:2793   */\n      dup9\n        /* \"#utility.yul\":2777:2783   */\n      dup3\n        /* \"#utility.yul\":2766:2775   */\n      dup10\n        /* \"#utility.yul\":2762:2784   */\n      add\n        /* \"#utility.yul\":2741:2794   */\n      tag_296\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2731:2794   */\n      swap3\n      pop\n        /* \"#utility.yul\":2686:2804   */\n      pop\n        /* \"#utility.yul\":2843:2846   */\n      0x80\n        /* \"#utility.yul\":2870:2923   */\n      tag_326\n        /* \"#utility.yul\":2915:2922   */\n      dup9\n        /* \"#utility.yul\":2906:2912   */\n      dup3\n        /* \"#utility.yul\":2895:2904   */\n      dup10\n        /* \"#utility.yul\":2891:2913   */\n      add\n        /* \"#utility.yul\":2870:2923   */\n      tag_288\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2860:2923   */\n      swap2\n      pop\n        /* \"#utility.yul\":2814:2933   */\n      pop\n        /* \"#utility.yul\":2029:2940   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2946:3420   */\n    tag_33:\n        /* \"#utility.yul\":3014:3020   */\n      0x00\n        /* \"#utility.yul\":3022:3028   */\n      dup1\n        /* \"#utility.yul\":3071:3073   */\n      0x40\n        /* \"#utility.yul\":3059:3068   */\n      dup4\n        /* \"#utility.yul\":3050:3057   */\n      dup6\n        /* \"#utility.yul\":3046:3069   */\n      sub\n        /* \"#utility.yul\":3042:3074   */\n      slt\n        /* \"#utility.yul\":3039:3158   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":3077:3156   */\n      tag_329\n      tag_306\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3039:3158   */\n    tag_328:\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3222:3275   */\n      tag_330\n        /* \"#utility.yul\":3267:3274   */\n      dup6\n        /* \"#utility.yul\":3258:3264   */\n      dup3\n        /* \"#utility.yul\":3247:3256   */\n      dup7\n        /* \"#utility.yul\":3243:3265   */\n      add\n        /* \"#utility.yul\":3222:3275   */\n      tag_288\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3212:3275   */\n      swap3\n      pop\n        /* \"#utility.yul\":3168:3285   */\n      pop\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3350:3403   */\n      tag_331\n        /* \"#utility.yul\":3395:3402   */\n      dup6\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3375:3384   */\n      dup7\n        /* \"#utility.yul\":3371:3393   */\n      add\n        /* \"#utility.yul\":3350:3403   */\n      tag_296\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3340:3403   */\n      swap2\n      pop\n        /* \"#utility.yul\":3295:3413   */\n      pop\n        /* \"#utility.yul\":2946:3420   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3426:3771   */\n    tag_170:\n        /* \"#utility.yul\":3493:3499   */\n      0x00\n        /* \"#utility.yul\":3542:3544   */\n      0x20\n        /* \"#utility.yul\":3530:3539   */\n      dup3\n        /* \"#utility.yul\":3521:3528   */\n      dup5\n        /* \"#utility.yul\":3517:3540   */\n      sub\n        /* \"#utility.yul\":3513:3545   */\n      slt\n        /* \"#utility.yul\":3510:3629   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":3548:3627   */\n      tag_334\n      tag_306\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3510:3629   */\n    tag_333:\n        /* \"#utility.yul\":3668:3669   */\n      0x00\n        /* \"#utility.yul\":3693:3754   */\n      tag_335\n        /* \"#utility.yul\":3746:3753   */\n      dup5\n        /* \"#utility.yul\":3737:3743   */\n      dup3\n        /* \"#utility.yul\":3726:3735   */\n      dup6\n        /* \"#utility.yul\":3722:3744   */\n      add\n        /* \"#utility.yul\":3693:3754   */\n      tag_292\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3683:3754   */\n      swap2\n      pop\n        /* \"#utility.yul\":3639:3764   */\n      pop\n        /* \"#utility.yul\":3426:3771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3777:4128   */\n    tag_100:\n        /* \"#utility.yul\":3847:3853   */\n      0x00\n        /* \"#utility.yul\":3896:3898   */\n      0x20\n        /* \"#utility.yul\":3884:3893   */\n      dup3\n        /* \"#utility.yul\":3875:3882   */\n      dup5\n        /* \"#utility.yul\":3871:3894   */\n      sub\n        /* \"#utility.yul\":3867:3899   */\n      slt\n        /* \"#utility.yul\":3864:3983   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3902:3981   */\n      tag_338\n      tag_306\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3864:3983   */\n    tag_337:\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4047:4111   */\n      tag_339\n        /* \"#utility.yul\":4103:4110   */\n      dup5\n        /* \"#utility.yul\":4094:4100   */\n      dup3\n        /* \"#utility.yul\":4083:4092   */\n      dup6\n        /* \"#utility.yul\":4079:4101   */\n      add\n        /* \"#utility.yul\":4047:4111   */\n      tag_300\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4037:4111   */\n      swap2\n      pop\n        /* \"#utility.yul\":3993:4121   */\n      pop\n        /* \"#utility.yul\":3777:4128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4134:4252   */\n    tag_340:\n        /* \"#utility.yul\":4221:4245   */\n      tag_342\n        /* \"#utility.yul\":4239:4244   */\n      dup2\n        /* \"#utility.yul\":4221:4245   */\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4216:4219   */\n      dup3\n        /* \"#utility.yul\":4209:4246   */\n      mstore\n        /* \"#utility.yul\":4134:4252   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4258:4367   */\n    tag_344:\n        /* \"#utility.yul\":4339:4360   */\n      tag_346\n        /* \"#utility.yul\":4354:4359   */\n      dup2\n        /* \"#utility.yul\":4339:4360   */\n      tag_347\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4334:4337   */\n      dup3\n        /* \"#utility.yul\":4327:4361   */\n      mstore\n        /* \"#utility.yul\":4258:4367   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4373:4739   */\n    tag_348:\n        /* \"#utility.yul\":4515:4518   */\n      0x00\n        /* \"#utility.yul\":4536:4603   */\n      tag_350\n        /* \"#utility.yul\":4600:4602   */\n      0x23\n        /* \"#utility.yul\":4595:4598   */\n      dup4\n        /* \"#utility.yul\":4536:4603   */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4529:4603   */\n      swap2\n      pop\n        /* \"#utility.yul\":4612:4705   */\n      tag_352\n        /* \"#utility.yul\":4701:4704   */\n      dup3\n        /* \"#utility.yul\":4612:4705   */\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4730:4732   */\n      0x40\n        /* \"#utility.yul\":4725:4728   */\n      dup3\n        /* \"#utility.yul\":4721:4733   */\n      add\n        /* \"#utility.yul\":4714:4733   */\n      swap1\n      pop\n        /* \"#utility.yul\":4373:4739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4745:5111   */\n    tag_354:\n        /* \"#utility.yul\":4887:4890   */\n      0x00\n        /* \"#utility.yul\":4908:4975   */\n      tag_356\n        /* \"#utility.yul\":4972:4974   */\n      0x16\n        /* \"#utility.yul\":4967:4970   */\n      dup4\n        /* \"#utility.yul\":4908:4975   */\n      tag_351\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4901:4975   */\n      swap2\n      pop\n        /* \"#utility.yul\":4984:5077   */\n      tag_357\n        /* \"#utility.yul\":5073:5076   */\n      dup3\n        /* \"#utility.yul\":4984:5077   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5102:5104   */\n      0x20\n        /* \"#utility.yul\":5097:5100   */\n      dup3\n        /* \"#utility.yul\":5093:5105   */\n      add\n        /* \"#utility.yul\":5086:5105   */\n      swap1\n      pop\n        /* \"#utility.yul\":4745:5111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5117:5483   */\n    tag_359:\n        /* \"#utility.yul\":5259:5262   */\n      0x00\n        /* \"#utility.yul\":5280:5347   */\n      tag_361\n        /* \"#utility.yul\":5344:5346   */\n      0x13\n        /* \"#utility.yul\":5339:5342   */\n      dup4\n        /* \"#utility.yul\":5280:5347   */\n      tag_351\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5273:5347   */\n      swap2\n      pop\n        /* \"#utility.yul\":5356:5449   */\n      tag_362\n        /* \"#utility.yul\":5445:5448   */\n      dup3\n        /* \"#utility.yul\":5356:5449   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5474:5476   */\n      0x20\n        /* \"#utility.yul\":5469:5472   */\n      dup3\n        /* \"#utility.yul\":5465:5477   */\n      add\n        /* \"#utility.yul\":5458:5477   */\n      swap1\n      pop\n        /* \"#utility.yul\":5117:5483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5489:5855   */\n    tag_364:\n        /* \"#utility.yul\":5631:5634   */\n      0x00\n        /* \"#utility.yul\":5652:5719   */\n      tag_366\n        /* \"#utility.yul\":5716:5718   */\n      0x20\n        /* \"#utility.yul\":5711:5714   */\n      dup4\n        /* \"#utility.yul\":5652:5719   */\n      tag_351\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5645:5719   */\n      swap2\n      pop\n        /* \"#utility.yul\":5728:5821   */\n      tag_367\n        /* \"#utility.yul\":5817:5820   */\n      dup3\n        /* \"#utility.yul\":5728:5821   */\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5846:5848   */\n      0x20\n        /* \"#utility.yul\":5841:5844   */\n      dup3\n        /* \"#utility.yul\":5837:5849   */\n      add\n        /* \"#utility.yul\":5830:5849   */\n      swap1\n      pop\n        /* \"#utility.yul\":5489:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5861:6227   */\n    tag_369:\n        /* \"#utility.yul\":6003:6006   */\n      0x00\n        /* \"#utility.yul\":6024:6091   */\n      tag_371\n        /* \"#utility.yul\":6088:6090   */\n      0x23\n        /* \"#utility.yul\":6083:6086   */\n      dup4\n        /* \"#utility.yul\":6024:6091   */\n      tag_351\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6017:6091   */\n      swap2\n      pop\n        /* \"#utility.yul\":6100:6193   */\n      tag_372\n        /* \"#utility.yul\":6189:6192   */\n      dup3\n        /* \"#utility.yul\":6100:6193   */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6218:6220   */\n      0x40\n        /* \"#utility.yul\":6213:6216   */\n      dup3\n        /* \"#utility.yul\":6209:6221   */\n      add\n        /* \"#utility.yul\":6202:6221   */\n      swap1\n      pop\n        /* \"#utility.yul\":5861:6227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6233:6599   */\n    tag_374:\n        /* \"#utility.yul\":6375:6378   */\n      0x00\n        /* \"#utility.yul\":6396:6463   */\n      tag_376\n        /* \"#utility.yul\":6460:6462   */\n      0x0e\n        /* \"#utility.yul\":6455:6458   */\n      dup4\n        /* \"#utility.yul\":6396:6463   */\n      tag_351\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6389:6463   */\n      swap2\n      pop\n        /* \"#utility.yul\":6472:6565   */\n      tag_377\n        /* \"#utility.yul\":6561:6564   */\n      dup3\n        /* \"#utility.yul\":6472:6565   */\n      tag_378\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6590:6592   */\n      0x20\n        /* \"#utility.yul\":6585:6588   */\n      dup3\n        /* \"#utility.yul\":6581:6593   */\n      add\n        /* \"#utility.yul\":6574:6593   */\n      swap1\n      pop\n        /* \"#utility.yul\":6233:6599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6605:6971   */\n    tag_379:\n        /* \"#utility.yul\":6747:6750   */\n      0x00\n        /* \"#utility.yul\":6768:6835   */\n      tag_381\n        /* \"#utility.yul\":6832:6834   */\n      0x20\n        /* \"#utility.yul\":6827:6830   */\n      dup4\n        /* \"#utility.yul\":6768:6835   */\n      tag_351\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6761:6835   */\n      swap2\n      pop\n        /* \"#utility.yul\":6844:6937   */\n      tag_382\n        /* \"#utility.yul\":6933:6936   */\n      dup3\n        /* \"#utility.yul\":6844:6937   */\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"#utility.yul\":6957:6960   */\n      dup3\n        /* \"#utility.yul\":6953:6965   */\n      add\n        /* \"#utility.yul\":6946:6965   */\n      swap1\n      pop\n        /* \"#utility.yul\":6605:6971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6977:7095   */\n    tag_384:\n        /* \"#utility.yul\":7064:7088   */\n      tag_386\n        /* \"#utility.yul\":7082:7087   */\n      dup2\n        /* \"#utility.yul\":7064:7088   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7059:7062   */\n      dup3\n        /* \"#utility.yul\":7052:7089   */\n      mstore\n        /* \"#utility.yul\":6977:7095   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7101:7323   */\n    tag_40:\n        /* \"#utility.yul\":7194:7198   */\n      0x00\n        /* \"#utility.yul\":7232:7234   */\n      0x20\n        /* \"#utility.yul\":7221:7230   */\n      dup3\n        /* \"#utility.yul\":7217:7235   */\n      add\n        /* \"#utility.yul\":7209:7235   */\n      swap1\n      pop\n        /* \"#utility.yul\":7245:7316   */\n      tag_389\n        /* \"#utility.yul\":7313:7314   */\n      0x00\n        /* \"#utility.yul\":7302:7311   */\n      dup4\n        /* \"#utility.yul\":7298:7315   */\n      add\n        /* \"#utility.yul\":7289:7295   */\n      dup5\n        /* \"#utility.yul\":7245:7316   */\n      tag_340\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7101:7323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7329:7661   */\n    tag_165:\n        /* \"#utility.yul\":7450:7454   */\n      0x00\n        /* \"#utility.yul\":7488:7490   */\n      0x40\n        /* \"#utility.yul\":7477:7486   */\n      dup3\n        /* \"#utility.yul\":7473:7491   */\n      add\n        /* \"#utility.yul\":7465:7491   */\n      swap1\n      pop\n        /* \"#utility.yul\":7501:7572   */\n      tag_391\n        /* \"#utility.yul\":7569:7570   */\n      0x00\n        /* \"#utility.yul\":7558:7567   */\n      dup4\n        /* \"#utility.yul\":7554:7571   */\n      add\n        /* \"#utility.yul\":7545:7551   */\n      dup6\n        /* \"#utility.yul\":7501:7572   */\n      tag_340\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7582:7654   */\n      tag_392\n        /* \"#utility.yul\":7650:7652   */\n      0x20\n        /* \"#utility.yul\":7639:7648   */\n      dup4\n        /* \"#utility.yul\":7635:7653   */\n      add\n        /* \"#utility.yul\":7626:7632   */\n      dup5\n        /* \"#utility.yul\":7582:7654   */\n      tag_384\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7329:7661   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7667:7877   */\n    tag_36:\n        /* \"#utility.yul\":7754:7758   */\n      0x00\n        /* \"#utility.yul\":7792:7794   */\n      0x20\n        /* \"#utility.yul\":7781:7790   */\n      dup3\n        /* \"#utility.yul\":7777:7795   */\n      add\n        /* \"#utility.yul\":7769:7795   */\n      swap1\n      pop\n        /* \"#utility.yul\":7805:7870   */\n      tag_394\n        /* \"#utility.yul\":7867:7868   */\n      0x00\n        /* \"#utility.yul\":7856:7865   */\n      dup4\n        /* \"#utility.yul\":7852:7869   */\n      add\n        /* \"#utility.yul\":7843:7849   */\n      dup5\n        /* \"#utility.yul\":7805:7870   */\n      tag_344\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7667:7877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7883:8302   */\n    tag_139:\n        /* \"#utility.yul\":8049:8053   */\n      0x00\n        /* \"#utility.yul\":8087:8089   */\n      0x20\n        /* \"#utility.yul\":8076:8085   */\n      dup3\n        /* \"#utility.yul\":8072:8090   */\n      add\n        /* \"#utility.yul\":8064:8090   */\n      swap1\n      pop\n        /* \"#utility.yul\":8136:8145   */\n      dup2\n        /* \"#utility.yul\":8130:8134   */\n      dup2\n        /* \"#utility.yul\":8126:8146   */\n      sub\n        /* \"#utility.yul\":8122:8123   */\n      0x00\n        /* \"#utility.yul\":8111:8120   */\n      dup4\n        /* \"#utility.yul\":8107:8124   */\n      add\n        /* \"#utility.yul\":8100:8147   */\n      mstore\n        /* \"#utility.yul\":8164:8295   */\n      tag_396\n        /* \"#utility.yul\":8290:8294   */\n      dup2\n        /* \"#utility.yul\":8164:8295   */\n      tag_348\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8156:8295   */\n      swap1\n      pop\n        /* \"#utility.yul\":7883:8302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8308:8727   */\n    tag_148:\n        /* \"#utility.yul\":8474:8478   */\n      0x00\n        /* \"#utility.yul\":8512:8514   */\n      0x20\n        /* \"#utility.yul\":8501:8510   */\n      dup3\n        /* \"#utility.yul\":8497:8515   */\n      add\n        /* \"#utility.yul\":8489:8515   */\n      swap1\n      pop\n        /* \"#utility.yul\":8561:8570   */\n      dup2\n        /* \"#utility.yul\":8555:8559   */\n      dup2\n        /* \"#utility.yul\":8551:8571   */\n      sub\n        /* \"#utility.yul\":8547:8548   */\n      0x00\n        /* \"#utility.yul\":8536:8545   */\n      dup4\n        /* \"#utility.yul\":8532:8549   */\n      add\n        /* \"#utility.yul\":8525:8572   */\n      mstore\n        /* \"#utility.yul\":8589:8720   */\n      tag_398\n        /* \"#utility.yul\":8715:8719   */\n      dup2\n        /* \"#utility.yul\":8589:8720   */\n      tag_354\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8581:8720   */\n      swap1\n      pop\n        /* \"#utility.yul\":8308:8727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8733:9152   */\n    tag_119:\n        /* \"#utility.yul\":8899:8903   */\n      0x00\n        /* \"#utility.yul\":8937:8939   */\n      0x20\n        /* \"#utility.yul\":8926:8935   */\n      dup3\n        /* \"#utility.yul\":8922:8940   */\n      add\n        /* \"#utility.yul\":8914:8940   */\n      swap1\n      pop\n        /* \"#utility.yul\":8986:8995   */\n      dup2\n        /* \"#utility.yul\":8980:8984   */\n      dup2\n        /* \"#utility.yul\":8976:8996   */\n      sub\n        /* \"#utility.yul\":8972:8973   */\n      0x00\n        /* \"#utility.yul\":8961:8970   */\n      dup4\n        /* \"#utility.yul\":8957:8974   */\n      add\n        /* \"#utility.yul\":8950:8997   */\n      mstore\n        /* \"#utility.yul\":9014:9145   */\n      tag_400\n        /* \"#utility.yul\":9140:9144   */\n      dup2\n        /* \"#utility.yul\":9014:9145   */\n      tag_359\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9006:9145   */\n      swap1\n      pop\n        /* \"#utility.yul\":8733:9152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9158:9577   */\n    tag_208:\n        /* \"#utility.yul\":9324:9328   */\n      0x00\n        /* \"#utility.yul\":9362:9364   */\n      0x20\n        /* \"#utility.yul\":9351:9360   */\n      dup3\n        /* \"#utility.yul\":9347:9365   */\n      add\n        /* \"#utility.yul\":9339:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9411:9420   */\n      dup2\n        /* \"#utility.yul\":9405:9409   */\n      dup2\n        /* \"#utility.yul\":9401:9421   */\n      sub\n        /* \"#utility.yul\":9397:9398   */\n      0x00\n        /* \"#utility.yul\":9386:9395   */\n      dup4\n        /* \"#utility.yul\":9382:9399   */\n      add\n        /* \"#utility.yul\":9375:9422   */\n      mstore\n        /* \"#utility.yul\":9439:9570   */\n      tag_402\n        /* \"#utility.yul\":9565:9569   */\n      dup2\n        /* \"#utility.yul\":9439:9570   */\n      tag_364\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9431:9570   */\n      swap1\n      pop\n        /* \"#utility.yul\":9158:9577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9583:10002   */\n    tag_161:\n        /* \"#utility.yul\":9749:9753   */\n      0x00\n        /* \"#utility.yul\":9787:9789   */\n      0x20\n        /* \"#utility.yul\":9776:9785   */\n      dup3\n        /* \"#utility.yul\":9772:9790   */\n      add\n        /* \"#utility.yul\":9764:9790   */\n      swap1\n      pop\n        /* \"#utility.yul\":9836:9845   */\n      dup2\n        /* \"#utility.yul\":9830:9834   */\n      dup2\n        /* \"#utility.yul\":9826:9846   */\n      sub\n        /* \"#utility.yul\":9822:9823   */\n      0x00\n        /* \"#utility.yul\":9811:9820   */\n      dup4\n        /* \"#utility.yul\":9807:9824   */\n      add\n        /* \"#utility.yul\":9800:9847   */\n      mstore\n        /* \"#utility.yul\":9864:9995   */\n      tag_404\n        /* \"#utility.yul\":9990:9994   */\n      dup2\n        /* \"#utility.yul\":9864:9995   */\n      tag_369\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9856:9995   */\n      swap1\n      pop\n        /* \"#utility.yul\":9583:10002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10008:10427   */\n    tag_270:\n        /* \"#utility.yul\":10174:10178   */\n      0x00\n        /* \"#utility.yul\":10212:10214   */\n      0x20\n        /* \"#utility.yul\":10201:10210   */\n      dup3\n        /* \"#utility.yul\":10197:10215   */\n      add\n        /* \"#utility.yul\":10189:10215   */\n      swap1\n      pop\n        /* \"#utility.yul\":10261:10270   */\n      dup2\n        /* \"#utility.yul\":10255:10259   */\n      dup2\n        /* \"#utility.yul\":10251:10271   */\n      sub\n        /* \"#utility.yul\":10247:10248   */\n      0x00\n        /* \"#utility.yul\":10236:10245   */\n      dup4\n        /* \"#utility.yul\":10232:10249   */\n      add\n        /* \"#utility.yul\":10225:10272   */\n      mstore\n        /* \"#utility.yul\":10289:10420   */\n      tag_406\n        /* \"#utility.yul\":10415:10419   */\n      dup2\n        /* \"#utility.yul\":10289:10420   */\n      tag_374\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10281:10420   */\n      swap1\n      pop\n        /* \"#utility.yul\":10008:10427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10433:10852   */\n    tag_193:\n        /* \"#utility.yul\":10599:10603   */\n      0x00\n        /* \"#utility.yul\":10637:10639   */\n      0x20\n        /* \"#utility.yul\":10626:10635   */\n      dup3\n        /* \"#utility.yul\":10622:10640   */\n      add\n        /* \"#utility.yul\":10614:10640   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:10695   */\n      dup2\n        /* \"#utility.yul\":10680:10684   */\n      dup2\n        /* \"#utility.yul\":10676:10696   */\n      sub\n        /* \"#utility.yul\":10672:10673   */\n      0x00\n        /* \"#utility.yul\":10661:10670   */\n      dup4\n        /* \"#utility.yul\":10657:10674   */\n      add\n        /* \"#utility.yul\":10650:10697   */\n      mstore\n        /* \"#utility.yul\":10714:10845   */\n      tag_408\n        /* \"#utility.yul\":10840:10844   */\n      dup2\n        /* \"#utility.yul\":10714:10845   */\n      tag_379\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10706:10845   */\n      swap1\n      pop\n        /* \"#utility.yul\":10433:10852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10858:11080   */\n    tag_44:\n        /* \"#utility.yul\":10951:10955   */\n      0x00\n        /* \"#utility.yul\":10989:10991   */\n      0x20\n        /* \"#utility.yul\":10978:10987   */\n      dup3\n        /* \"#utility.yul\":10974:10992   */\n      add\n        /* \"#utility.yul\":10966:10992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11002:11073   */\n      tag_410\n        /* \"#utility.yul\":11070:11071   */\n      0x00\n        /* \"#utility.yul\":11059:11068   */\n      dup4\n        /* \"#utility.yul\":11055:11072   */\n      add\n        /* \"#utility.yul\":11046:11052   */\n      dup5\n        /* \"#utility.yul\":11002:11073   */\n      tag_384\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10858:11080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11086:11418   */\n    tag_27:\n        /* \"#utility.yul\":11207:11211   */\n      0x00\n        /* \"#utility.yul\":11245:11247   */\n      0x40\n        /* \"#utility.yul\":11234:11243   */\n      dup3\n        /* \"#utility.yul\":11230:11248   */\n      add\n        /* \"#utility.yul\":11222:11248   */\n      swap1\n      pop\n        /* \"#utility.yul\":11258:11329   */\n      tag_412\n        /* \"#utility.yul\":11326:11327   */\n      0x00\n        /* \"#utility.yul\":11315:11324   */\n      dup4\n        /* \"#utility.yul\":11311:11328   */\n      add\n        /* \"#utility.yul\":11302:11308   */\n      dup6\n        /* \"#utility.yul\":11258:11329   */\n      tag_384\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11339:11411   */\n      tag_413\n        /* \"#utility.yul\":11407:11409   */\n      0x20\n        /* \"#utility.yul\":11396:11405   */\n      dup4\n        /* \"#utility.yul\":11392:11410   */\n      add\n        /* \"#utility.yul\":11383:11389   */\n      dup5\n        /* \"#utility.yul\":11339:11411   */\n      tag_384\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11086:11418   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11424:11977   */\n    tag_223:\n        /* \"#utility.yul\":11601:11605   */\n      0x00\n        /* \"#utility.yul\":11639:11642   */\n      0x80\n        /* \"#utility.yul\":11628:11637   */\n      dup3\n        /* \"#utility.yul\":11624:11643   */\n      add\n        /* \"#utility.yul\":11616:11643   */\n      swap1\n      pop\n        /* \"#utility.yul\":11653:11724   */\n      tag_415\n        /* \"#utility.yul\":11721:11722   */\n      0x00\n        /* \"#utility.yul\":11710:11719   */\n      dup4\n        /* \"#utility.yul\":11706:11723   */\n      add\n        /* \"#utility.yul\":11697:11703   */\n      dup8\n        /* \"#utility.yul\":11653:11724   */\n      tag_384\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11734:11806   */\n      tag_416\n        /* \"#utility.yul\":11802:11804   */\n      0x20\n        /* \"#utility.yul\":11791:11800   */\n      dup4\n        /* \"#utility.yul\":11787:11805   */\n      add\n        /* \"#utility.yul\":11778:11784   */\n      dup7\n        /* \"#utility.yul\":11734:11806   */\n      tag_384\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11816:11888   */\n      tag_417\n        /* \"#utility.yul\":11884:11886   */\n      0x40\n        /* \"#utility.yul\":11873:11882   */\n      dup4\n        /* \"#utility.yul\":11869:11887   */\n      add\n        /* \"#utility.yul\":11860:11866   */\n      dup6\n        /* \"#utility.yul\":11816:11888   */\n      tag_384\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11898:11970   */\n      tag_418\n        /* \"#utility.yul\":11966:11968   */\n      0x60\n        /* \"#utility.yul\":11955:11964   */\n      dup4\n        /* \"#utility.yul\":11951:11969   */\n      add\n        /* \"#utility.yul\":11942:11948   */\n      dup5\n        /* \"#utility.yul\":11898:11970   */\n      tag_384\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11424:11977   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12064:12233   */\n    tag_351:\n        /* \"#utility.yul\":12148:12159   */\n      0x00\n        /* \"#utility.yul\":12182:12188   */\n      dup3\n        /* \"#utility.yul\":12177:12180   */\n      dup3\n        /* \"#utility.yul\":12170:12189   */\n      mstore\n        /* \"#utility.yul\":12222:12226   */\n      0x20\n        /* \"#utility.yul\":12217:12220   */\n      dup3\n        /* \"#utility.yul\":12213:12227   */\n      add\n        /* \"#utility.yul\":12198:12227   */\n      swap1\n      pop\n        /* \"#utility.yul\":12064:12233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12239:12544   */\n    tag_277:\n        /* \"#utility.yul\":12279:12282   */\n      0x00\n        /* \"#utility.yul\":12298:12318   */\n      tag_423\n        /* \"#utility.yul\":12316:12317   */\n      dup3\n        /* \"#utility.yul\":12298:12318   */\n      tag_387\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12293:12318   */\n      swap2\n      pop\n        /* \"#utility.yul\":12332:12352   */\n      tag_424\n        /* \"#utility.yul\":12350:12351   */\n      dup4\n        /* \"#utility.yul\":12332:12352   */\n      tag_387\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12327:12352   */\n      swap3\n      pop\n        /* \"#utility.yul\":12486:12487   */\n      dup3\n        /* \"#utility.yul\":12418:12484   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12414:12488   */\n      sub\n        /* \"#utility.yul\":12411:12412   */\n      dup3\n        /* \"#utility.yul\":12408:12489   */\n      gt\n        /* \"#utility.yul\":12405:12512   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":12492:12510   */\n      tag_426\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12405:12512   */\n    tag_425:\n        /* \"#utility.yul\":12536:12537   */\n      dup3\n        /* \"#utility.yul\":12533:12534   */\n      dup3\n        /* \"#utility.yul\":12529:12538   */\n      add\n        /* \"#utility.yul\":12522:12538   */\n      swap1\n      pop\n        /* \"#utility.yul\":12239:12544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12550:12735   */\n    tag_133:\n        /* \"#utility.yul\":12590:12591   */\n      0x00\n        /* \"#utility.yul\":12607:12627   */\n      tag_429\n        /* \"#utility.yul\":12625:12626   */\n      dup3\n        /* \"#utility.yul\":12607:12627   */\n      tag_387\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12602:12627   */\n      swap2\n      pop\n        /* \"#utility.yul\":12641:12661   */\n      tag_430\n        /* \"#utility.yul\":12659:12660   */\n      dup4\n        /* \"#utility.yul\":12641:12661   */\n      tag_387\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12636:12661   */\n      swap3\n      pop\n        /* \"#utility.yul\":12680:12681   */\n      dup3\n        /* \"#utility.yul\":12670:12705   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":12685:12703   */\n      tag_432\n      tag_243\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12670:12705   */\n    tag_431:\n        /* \"#utility.yul\":12727:12728   */\n      dup3\n        /* \"#utility.yul\":12724:12725   */\n      dup3\n        /* \"#utility.yul\":12720:12729   */\n      div\n        /* \"#utility.yul\":12715:12729   */\n      swap1\n      pop\n        /* \"#utility.yul\":12550:12735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12741:13089   */\n    tag_236:\n        /* \"#utility.yul\":12781:12788   */\n      0x00\n        /* \"#utility.yul\":12804:12824   */\n      tag_434\n        /* \"#utility.yul\":12822:12823   */\n      dup3\n        /* \"#utility.yul\":12804:12824   */\n      tag_387\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12799:12824   */\n      swap2\n      pop\n        /* \"#utility.yul\":12838:12858   */\n      tag_435\n        /* \"#utility.yul\":12856:12857   */\n      dup4\n        /* \"#utility.yul\":12838:12858   */\n      tag_387\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":12833:12858   */\n      swap3\n      pop\n        /* \"#utility.yul\":13026:13027   */\n      dup2\n        /* \"#utility.yul\":12958:13024   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12954:13028   */\n      div\n        /* \"#utility.yul\":12951:12952   */\n      dup4\n        /* \"#utility.yul\":12948:13029   */\n      gt\n        /* \"#utility.yul\":12943:12944   */\n      dup3\n        /* \"#utility.yul\":12936:12945   */\n      iszero\n        /* \"#utility.yul\":12929:12946   */\n      iszero\n        /* \"#utility.yul\":12925:13030   */\n      and\n        /* \"#utility.yul\":12922:13053   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":13033:13051   */\n      tag_437\n      tag_427\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12922:13053   */\n    tag_436:\n        /* \"#utility.yul\":13081:13082   */\n      dup3\n        /* \"#utility.yul\":13078:13079   */\n      dup3\n        /* \"#utility.yul\":13074:13083   */\n      mul\n        /* \"#utility.yul\":13063:13083   */\n      swap1\n      pop\n        /* \"#utility.yul\":12741:13089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13095:13286   */\n    tag_228:\n        /* \"#utility.yul\":13135:13139   */\n      0x00\n        /* \"#utility.yul\":13155:13175   */\n      tag_439\n        /* \"#utility.yul\":13173:13174   */\n      dup3\n        /* \"#utility.yul\":13155:13175   */\n      tag_387\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13150:13175   */\n      swap2\n      pop\n        /* \"#utility.yul\":13189:13209   */\n      tag_440\n        /* \"#utility.yul\":13207:13208   */\n      dup4\n        /* \"#utility.yul\":13189:13209   */\n      tag_387\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13184:13209   */\n      swap3\n      pop\n        /* \"#utility.yul\":13228:13229   */\n      dup3\n        /* \"#utility.yul\":13225:13226   */\n      dup3\n        /* \"#utility.yul\":13222:13230   */\n      lt\n        /* \"#utility.yul\":13219:13253   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":13233:13251   */\n      tag_442\n      tag_427\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13219:13253   */\n    tag_441:\n        /* \"#utility.yul\":13278:13279   */\n      dup3\n        /* \"#utility.yul\":13275:13276   */\n      dup3\n        /* \"#utility.yul\":13271:13280   */\n      sub\n        /* \"#utility.yul\":13263:13280   */\n      swap1\n      pop\n        /* \"#utility.yul\":13095:13286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13388   */\n    tag_343:\n        /* \"#utility.yul\":13329:13336   */\n      0x00\n        /* \"#utility.yul\":13358:13382   */\n      tag_444\n        /* \"#utility.yul\":13376:13381   */\n      dup3\n        /* \"#utility.yul\":13358:13382   */\n      tag_445\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13347:13382   */\n      swap1\n      pop\n        /* \"#utility.yul\":13292:13388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13394:13484   */\n    tag_347:\n        /* \"#utility.yul\":13428:13435   */\n      0x00\n        /* \"#utility.yul\":13471:13476   */\n      dup2\n        /* \"#utility.yul\":13464:13477   */\n      iszero\n        /* \"#utility.yul\":13457:13478   */\n      iszero\n        /* \"#utility.yul\":13446:13478   */\n      swap1\n      pop\n        /* \"#utility.yul\":13394:13484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13490:13616   */\n    tag_445:\n        /* \"#utility.yul\":13527:13534   */\n      0x00\n        /* \"#utility.yul\":13567:13609   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13560:13565   */\n      dup3\n        /* \"#utility.yul\":13556:13610   */\n      and\n        /* \"#utility.yul\":13545:13610   */\n      swap1\n      pop\n        /* \"#utility.yul\":13490:13616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13622:13699   */\n    tag_387:\n        /* \"#utility.yul\":13659:13666   */\n      0x00\n        /* \"#utility.yul\":13688:13693   */\n      dup2\n        /* \"#utility.yul\":13677:13693   */\n      swap1\n      pop\n        /* \"#utility.yul\":13622:13699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13705:13885   */\n    tag_427:\n        /* \"#utility.yul\":13753:13830   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13750:13751   */\n      0x00\n        /* \"#utility.yul\":13743:13831   */\n      mstore\n        /* \"#utility.yul\":13850:13854   */\n      0x11\n        /* \"#utility.yul\":13847:13848   */\n      0x04\n        /* \"#utility.yul\":13840:13855   */\n      mstore\n        /* \"#utility.yul\":13874:13878   */\n      0x24\n        /* \"#utility.yul\":13871:13872   */\n      0x00\n        /* \"#utility.yul\":13864:13879   */\n      revert\n        /* \"#utility.yul\":13891:14071   */\n    tag_243:\n        /* \"#utility.yul\":13939:14016   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13936:13937   */\n      0x00\n        /* \"#utility.yul\":13929:14017   */\n      mstore\n        /* \"#utility.yul\":14036:14040   */\n      0x12\n        /* \"#utility.yul\":14033:14034   */\n      0x04\n        /* \"#utility.yul\":14026:14041   */\n      mstore\n        /* \"#utility.yul\":14060:14064   */\n      0x24\n        /* \"#utility.yul\":14057:14058   */\n      0x00\n        /* \"#utility.yul\":14050:14065   */\n      revert\n        /* \"#utility.yul\":14200:14317   */\n    tag_306:\n        /* \"#utility.yul\":14309:14310   */\n      0x00\n        /* \"#utility.yul\":14306:14307   */\n      dup1\n        /* \"#utility.yul\":14299:14311   */\n      revert\n        /* \"#utility.yul\":14323:14545   */\n    tag_353:\n        /* \"#utility.yul\":14463:14497   */\n      0x504f4f4c3a20496e73756666696369656e74206c6971756964697479206d696e\n        /* \"#utility.yul\":14459:14460   */\n      0x00\n        /* \"#utility.yul\":14451:14457   */\n      dup3\n        /* \"#utility.yul\":14447:14461   */\n      add\n        /* \"#utility.yul\":14440:14498   */\n      mstore\n        /* \"#utility.yul\":14532:14537   */\n      0x7465640000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14527:14529   */\n      0x20\n        /* \"#utility.yul\":14519:14525   */\n      dup3\n        /* \"#utility.yul\":14515:14530   */\n      add\n        /* \"#utility.yul\":14508:14538   */\n      mstore\n        /* \"#utility.yul\":14323:14545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14551:14723   */\n    tag_358:\n        /* \"#utility.yul\":14691:14715   */\n      0x464143544f52593a204163636573732064656e69656400000000000000000000\n        /* \"#utility.yul\":14687:14688   */\n      0x00\n        /* \"#utility.yul\":14679:14685   */\n      dup3\n        /* \"#utility.yul\":14675:14689   */\n      add\n        /* \"#utility.yul\":14668:14716   */\n      mstore\n        /* \"#utility.yul\":14551:14723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14729:14898   */\n    tag_363:\n        /* \"#utility.yul\":14869:14890   */\n      0x504f4f4c3a204163636573732064656e69656400000000000000000000000000\n        /* \"#utility.yul\":14865:14866   */\n      0x00\n        /* \"#utility.yul\":14857:14863   */\n      dup3\n        /* \"#utility.yul\":14853:14867   */\n      add\n        /* \"#utility.yul\":14846:14891   */\n      mstore\n        /* \"#utility.yul\":14729:14898   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14904:15086   */\n    tag_368:\n        /* \"#utility.yul\":15044:15078   */\n      0x4552524f523a20696e73756666696369656e7420696e70757420616d6f756e74\n        /* \"#utility.yul\":15040:15041   */\n      0x00\n        /* \"#utility.yul\":15032:15038   */\n      dup3\n        /* \"#utility.yul\":15028:15042   */\n      add\n        /* \"#utility.yul\":15021:15079   */\n      mstore\n        /* \"#utility.yul\":14904:15086   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15092:15314   */\n    tag_373:\n        /* \"#utility.yul\":15232:15266   */\n      0x504f4f4c3a20496e73756666696369656e74206c697175696469747920627572\n        /* \"#utility.yul\":15228:15229   */\n      0x00\n        /* \"#utility.yul\":15220:15226   */\n      dup3\n        /* \"#utility.yul\":15216:15230   */\n      add\n        /* \"#utility.yul\":15209:15267   */\n      mstore\n        /* \"#utility.yul\":15301:15306   */\n      0x6e65640000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15296:15298   */\n      0x20\n        /* \"#utility.yul\":15288:15294   */\n      dup3\n        /* \"#utility.yul\":15284:15299   */\n      add\n        /* \"#utility.yul\":15277:15307   */\n      mstore\n        /* \"#utility.yul\":15092:15314   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15320:15484   */\n    tag_378:\n        /* \"#utility.yul\":15460:15476   */\n      0x504f4f4c3a204f766572666c6f77000000000000000000000000000000000000\n        /* \"#utility.yul\":15456:15457   */\n      0x00\n        /* \"#utility.yul\":15448:15454   */\n      dup3\n        /* \"#utility.yul\":15444:15458   */\n      add\n        /* \"#utility.yul\":15437:15477   */\n      mstore\n        /* \"#utility.yul\":15320:15484   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15490:15672   */\n    tag_383:\n        /* \"#utility.yul\":15630:15664   */\n      0x4552524f523a20496e737566666963656e74206f757470757420616d6f756e74\n        /* \"#utility.yul\":15626:15627   */\n      0x00\n        /* \"#utility.yul\":15618:15624   */\n      dup3\n        /* \"#utility.yul\":15614:15628   */\n      add\n        /* \"#utility.yul\":15607:15665   */\n      mstore\n        /* \"#utility.yul\":15490:15672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15678:15800   */\n    tag_291:\n        /* \"#utility.yul\":15751:15775   */\n      tag_462\n        /* \"#utility.yul\":15769:15774   */\n      dup2\n        /* \"#utility.yul\":15751:15775   */\n      tag_343\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15744:15749   */\n      dup2\n        /* \"#utility.yul\":15741:15776   */\n      eq\n        /* \"#utility.yul\":15731:15794   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":15790:15791   */\n      0x00\n        /* \"#utility.yul\":15787:15788   */\n      dup1\n        /* \"#utility.yul\":15780:15792   */\n      revert\n        /* \"#utility.yul\":15731:15794   */\n    tag_463:\n        /* \"#utility.yul\":15678:15800   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15806:15922   */\n    tag_295:\n        /* \"#utility.yul\":15876:15897   */\n      tag_465\n        /* \"#utility.yul\":15891:15896   */\n      dup2\n        /* \"#utility.yul\":15876:15897   */\n      tag_347\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":15869:15874   */\n      dup2\n        /* \"#utility.yul\":15866:15898   */\n      eq\n        /* \"#utility.yul\":15856:15916   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":15912:15913   */\n      0x00\n        /* \"#utility.yul\":15909:15910   */\n      dup1\n        /* \"#utility.yul\":15902:15914   */\n      revert\n        /* \"#utility.yul\":15856:15916   */\n    tag_466:\n        /* \"#utility.yul\":15806:15922   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15928:16050   */\n    tag_299:\n        /* \"#utility.yul\":16001:16025   */\n      tag_468\n        /* \"#utility.yul\":16019:16024   */\n      dup2\n        /* \"#utility.yul\":16001:16025   */\n      tag_387\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15994:15999   */\n      dup2\n        /* \"#utility.yul\":15991:16026   */\n      eq\n        /* \"#utility.yul\":15981:16044   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":16040:16041   */\n      0x00\n        /* \"#utility.yul\":16037:16038   */\n      dup1\n        /* \"#utility.yul\":16030:16042   */\n      revert\n        /* \"#utility.yul\":15981:16044   */\n    tag_469:\n        /* \"#utility.yul\":15928:16050   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fee28eb909f3aeeae673cf14df5075f80987c4ab804e68be4fc66b08a7fd297864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1825:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:4",
														"type": ""
													}
												],
												"src": "7:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "301:832:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "348:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "350:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "350:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "350:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "322:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "331:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "318:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "318:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "314:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:33:4"
															},
															"nodeType": "YulIf",
															"src": "311:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "441:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "456:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "470:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "460:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "485:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "531:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "542:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "527:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "527:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "551:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "495:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "485:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "579:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "594:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "608:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "598:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "624:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "670:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "681:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "690:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "634:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "634:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "624:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "718:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "733:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "737:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "763:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "809:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "820:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "805:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "805:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "829:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "773:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "763:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "857:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "872:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "886:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "876:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "902:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "948:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "959:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "944:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "944:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "968:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "912:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "912:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "902:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "996:130:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1011:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1025:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1015:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1042:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1088:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1084:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1084:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1108:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1052:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1052:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1042:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "239:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "250:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "262:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "270:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "278:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "286:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "294:6:4",
														"type": ""
													}
												],
												"src": "156:977:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1179:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1189:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1205:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1199:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1189:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1172:6:4",
														"type": ""
													}
												],
												"src": "1139:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1275:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1304:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1286:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1275:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1247:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1257:7:4",
														"type": ""
													}
												],
												"src": "1220:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1377:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1392:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1377:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1349:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1359:7:4",
														"type": ""
													}
												],
												"src": "1322:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1543:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1560:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1563:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1553:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1454:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1683:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1577:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1800:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1812:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1766:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1791:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1773:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1763:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1763:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:43:4"
															},
															"nodeType": "YulIf",
															"src": "1753:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1736:5:4",
														"type": ""
													}
												],
												"src": "1700:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x268C CODESIZE SUB DUP1 PUSH3 0x268C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x25B JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x17A DUP2 PUSH3 0x241 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x19F JUMPI PUSH3 0x19E PUSH3 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1AF DUP9 DUP3 DUP10 ADD PUSH3 0x169 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x1C2 DUP9 DUP3 DUP10 ADD PUSH3 0x169 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x1D5 DUP9 DUP3 DUP10 ADD PUSH3 0x169 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x1E8 DUP9 DUP3 DUP10 ADD PUSH3 0x169 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x1FB DUP9 DUP3 DUP10 ADD PUSH3 0x169 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x215 DUP3 PUSH3 0x21C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x208 JUMP JUMPDEST DUP2 EQ PUSH3 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x23C7 PUSH3 0x2C5 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x461 ADD MSTORE DUP2 DUP2 PUSH2 0xC60 ADD MSTORE DUP2 DUP2 PUSH2 0xEA8 ADD MSTORE PUSH2 0x11D1 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3B6 ADD MSTORE DUP2 DUP2 PUSH2 0x538 ADD MSTORE DUP2 DUP2 PUSH2 0xBB2 ADD MSTORE DUP2 DUP2 PUSH2 0xF85 ADD MSTORE PUSH2 0x1119 ADD MSTORE PUSH1 0x0 PUSH2 0xE84 ADD MSTORE PUSH2 0x23C7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AFCB44 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xD5BCB9B5 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x393 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2ED JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x240 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH2 0x134D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x439 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD SWAP2 POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C CALLER DUP5 DUP5 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x715 JUMPI PUSH2 0x694 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x720 DUP5 DUP5 DUP5 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B4 SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7C8 PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0x7D7 PUSH2 0x50E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x7F0 DUP4 DUP7 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x807 DUP4 DUP7 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD EQ ISZERO PUSH2 0x835 JUMPI PUSH2 0x82E PUSH2 0x829 DUP3 DUP5 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x161E JUMP JUMPDEST SWAP7 POP PUSH2 0x880 JUMP JUMPDEST PUSH2 0x87D DUP5 PUSH2 0x84E PUSH1 0x0 SLOAD DUP6 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST DUP5 PUSH2 0x86E PUSH1 0x0 SLOAD DUP6 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x1718 JUMP JUMPDEST SWAP7 POP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CD DUP9 DUP9 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x8D7 DUP7 DUP7 PUSH2 0x184B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x91F SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B9 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA8 SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABC PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0xACB PUSH2 0x50E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 SLOAD PUSH2 0xB29 DUP7 DUP4 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 SLOAD PUSH2 0xB4B DUP6 DUP4 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP8 GT DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 ADDRESS DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0B SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP PUSH2 0xD14 PUSH2 0x3B1 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP PUSH2 0xD26 DUP6 DUP6 PUSH2 0x184B JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xD85 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 CALLER DUP5 DUP5 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF51 SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF65 PUSH2 0x50E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP7 PUSH2 0xFCB JUMP JUMPDEST DUP6 PUSH1 0x0 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xFDE JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1028 PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1041 DUP6 DUP9 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 GT PUSH2 0x104E JUMPI PUSH1 0x0 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x1073 PUSH2 0x1064 DUP7 DUP10 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x108B DUP6 DUP9 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 GT PUSH2 0x1098 JUMPI PUSH1 0x0 PUSH2 0x10BE JUMP JUMPDEST PUSH2 0x10BD PUSH2 0x10AE DUP7 DUP10 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x10CF JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x11C6 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x127E JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP JUMPDEST PUSH2 0x1288 DUP5 DUP5 PUSH2 0x184B JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x12EB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x146C SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x155B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x1631 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1713 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x163E DUP5 PUSH2 0x1A1C JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x168A JUMPI PUSH2 0x1689 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16BC JUMPI PUSH2 0x16BB PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x170F DUP2 DUP3 DUP6 DUP2 PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV PUSH2 0x1718 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1727 JUMPI DUP2 PUSH2 0x1729 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1746 DUP2 PUSH1 0x0 SLOAD PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x179E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x183F SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x189B JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO JUMPDEST PUSH2 0x18DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D1 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x193E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1996 DUP2 PUSH1 0x0 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19FA SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A14 SWAP2 SWAP1 PUSH2 0x2021 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A3E JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A59 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A74 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A8F JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AC5 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AE0 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B0C DUP2 PUSH2 0x234C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B21 DUP2 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B36 DUP2 PUSH2 0x237A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B4B DUP2 PUSH2 0x237A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B66 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B75 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA3 DUP6 DUP3 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BD7 JUMPI PUSH2 0x1BD6 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BE5 DUP7 DUP3 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BF6 DUP7 DUP3 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C07 DUP7 DUP3 DUP8 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C2D JUMPI PUSH2 0x1C2C PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP9 DUP3 DUP10 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C4C DUP9 DUP3 DUP10 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1C5D DUP9 DUP3 DUP10 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1C6E DUP9 DUP3 DUP10 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1C7F DUP9 DUP3 DUP10 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1D DUP5 DUP3 DUP6 ADD PUSH2 0x1B3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x2136 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D3E DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D51 PUSH1 0x23 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5C DUP3 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 PUSH1 0x16 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7F DUP3 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D97 PUSH1 0x13 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA2 DUP3 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBA PUSH1 0x20 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC5 DUP3 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDD PUSH1 0x23 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE8 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E00 PUSH1 0xE DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0B DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E23 PUSH1 0x20 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2E DUP3 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x2174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E78 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x1E85 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC0 DUP2 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE0 DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F00 DUP2 PUSH2 0x1D8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F20 DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F40 DUP2 PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F60 DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F80 DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FB7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FE0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1FED PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1FFA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x2007 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202C DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x2037 DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x217E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2082 DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x208D DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B3 DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BE DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20F6 PUSH2 0x217E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210D DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x2118 DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212B JUMPI PUSH2 0x212A PUSH2 0x217E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2141 DUP3 PUSH2 0x2154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x504F4F4C3A20496E73756666696369656E74206C6971756964697479206D696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7465640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x464143544F52593A204163636573732064656E69656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x504F4F4C3A204163636573732064656E69656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A20696E73756666696369656E7420696E70757420616D6F756E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x504F4F4C3A20496E73756666696369656E74206C697175696469747920627572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E65640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x504F4F4C3A204F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A20496E737566666963656E74206F757470757420616D6F756E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2355 DUP2 PUSH2 0x2136 JUMP JUMPDEST DUP2 EQ PUSH2 0x2360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP2 EQ PUSH2 0x2377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2383 DUP2 PUSH2 0x2174 JUMP JUMPDEST DUP2 EQ PUSH2 0x238E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xE2 DUP15 0xB9 MULMOD RETURN 0xAE 0xEA 0xE6 PUSH20 0xCF14DF5075F80987C4AB804E68BE4FC66B08A7FD 0x29 PUSH25 0x64736F6C634300080700330000000000000000000000000000 ",
							"sourceMap": "2369:5356:0:-:0;;;2976:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3092:6;3084:5;;:14;;;;;;;;;;;;;;;;;;3119:8;3109:18;;;;;;;;;;;;3147:7;3138:6;;:16;;;;;;;;;;;;;;;;;;3174:7;3165:16;;;;;;;;;;;;3201:7;3192:16;;;;;;;;;;;;2976:240;;;;;2369:5356;;7:143:4;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:977::-;262:6;270;278;286;294;343:3;331:9;322:7;318:23;314:33;311:120;;;350:79;;:::i;:::-;311:120;470:1;495:64;551:7;542:6;531:9;527:22;495:64;:::i;:::-;485:74;;441:128;608:2;634:64;690:7;681:6;670:9;666:22;634:64;:::i;:::-;624:74;;579:129;747:2;773:64;829:7;820:6;809:9;805:22;773:64;:::i;:::-;763:74;;718:129;886:2;912:64;968:7;959:6;948:9;944:22;912:64;:::i;:::-;902:74;;857:129;1025:3;1052:64;1108:7;1099:6;1088:9;1084:22;1052:64;:::i;:::-;1042:74;;996:130;156:977;;;;;;;;:::o;1220:96::-;1257:7;1286:24;1304:5;1286:24;:::i;:::-;1275:35;;1220:96;;;:::o;1322:126::-;1359:7;1399:42;1392:5;1388:54;1377:65;;1322:126;;;:::o;1577:117::-;1686:1;1683;1676:12;1700:122;1773:24;1791:5;1773:24;:::i;:::-;1766:5;1763:35;1753:63;;1812:1;1809;1802:12;1753:63;1700:122;:::o;2369:5356:0:-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_169": {
									"entryPoint": 4979,
									"id": 169,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_107": {
									"entryPoint": 6380,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_72": {
									"entryPoint": 5937,
									"id": 72,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_145": {
									"entryPoint": 5236,
									"id": 145,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_800": {
									"entryPoint": 6219,
									"id": 800,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1957": {
									"entryPoint": 6662,
									"id": 1957,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@admin_269": {
									"entryPoint": 4903,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_33": {
									"entryPoint": 4866,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_261": {
									"entryPoint": 1311,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_26": {
									"entryPoint": 2566,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_563": {
									"entryPoint": 2590,
									"id": 563,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@factory_271": {
									"entryPoint": 3714,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalances_765": {
									"entryPoint": 945,
									"id": 765,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getReserves_733": {
									"entryPoint": 1294,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@log2_1453": {
									"entryPoint": 6684,
									"id": 1453,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@min_958": {
									"entryPoint": 5912,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_449": {
									"entryPoint": 1835,
									"id": 449,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_1987": {
									"entryPoint": 5640,
									"id": 1987,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@router_273": {
									"entryPoint": 4941,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAdmin_836": {
									"entryPoint": 2354,
									"id": 836,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRouter_818": {
									"entryPoint": 3502,
									"id": 818,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sqrt_1285": {
									"entryPoint": 5662,
									"id": 1285,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sub_1972": {
									"entryPoint": 5214,
									"id": 1972,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swap_717": {
									"entryPoint": 3786,
									"id": 717,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@token0_275": {
									"entryPoint": 1334,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_277": {
									"entryPoint": 3750,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_21": {
									"entryPoint": 1370,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_241": {
									"entryPoint": 1376,
									"id": 241,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_189": {
									"entryPoint": 3479,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8621,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83": {
									"entryPoint": 8752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af": {
									"entryPoint": 8793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06": {
									"entryPoint": 8875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16053:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:4",
														"type": ""
													}
												],
												"src": "152:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:4",
														"type": ""
													}
												],
												"src": "295:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:4",
														"type": ""
													}
												],
												"src": "440:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:4"
															},
															"nodeType": "YulIf",
															"src": "665:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:4",
														"type": ""
													}
												],
												"src": "589:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1007:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1053:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1055:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1055:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1037:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:32:4"
															},
															"nodeType": "YulIf",
															"src": "1017:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1146:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1161:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1175:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1165:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1190:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1225:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1236:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1221:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1221:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1245:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1200:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1200:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1190:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1273:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1288:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1302:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1292:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1318:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1353:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1364:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1349:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1373:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1328:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1318:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "969:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "980:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "992:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1000:6:4",
														"type": ""
													}
												],
												"src": "924:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1504:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1550:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1552:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1552:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1552:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1525:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1534:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1546:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:32:4"
															},
															"nodeType": "YulIf",
															"src": "1514:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1643:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1658:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1662:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1687:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1722:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1733:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1718:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1718:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1742:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1697:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1687:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1770:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1785:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1799:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1789:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1815:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1898:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1943:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1458:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1469:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1481:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1489:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1497:6:4",
														"type": ""
													}
												],
												"src": "1404:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:777:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2210:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2212:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2212:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2212:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2180:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:33:4"
															},
															"nodeType": "YulIf",
															"src": "2173:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2303:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2318:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2322:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2347:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2382:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2378:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2378:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2402:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2357:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2347:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2430:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2445:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2449:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2475:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2558:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2573:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2587:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2577:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2603:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2638:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2649:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2634:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2634:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2658:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2613:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2613:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2603:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2686:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2701:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2715:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2705:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2731:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2766:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2777:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2762:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2762:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2786:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2741:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2741:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2731:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2814:119:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2829:17:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2833:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2860:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2895:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2906:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2891:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2891:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2915:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2870:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2870:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2860:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2101:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2112:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2124:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2132:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2140:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2148:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2156:6:4",
														"type": ""
													}
												],
												"src": "2029:911:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3075:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3077:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3077:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3077:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3050:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3059:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3046:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3046:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3042:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:32:4"
															},
															"nodeType": "YulIf",
															"src": "3039:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3168:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3183:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3187:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3212:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3247:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3258:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3243:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3243:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3267:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3222:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3222:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3212:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3295:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3310:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3314:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3340:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3375:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3386:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3371:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3371:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3395:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3350:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3350:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3340:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2991:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3002:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3014:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3022:6:4",
														"type": ""
													}
												],
												"src": "2946:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3500:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3546:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3548:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3548:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3548:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3521:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3530:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3517:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3542:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3513:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:32:4"
															},
															"nodeType": "YulIf",
															"src": "3510:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3639:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3654:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3668:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3658:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3683:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3726:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3737:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3722:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3722:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3746:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3693:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3683:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3470:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3481:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3493:6:4",
														"type": ""
													}
												],
												"src": "3426:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3854:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3900:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3902:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3902:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3902:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3875:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3871:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3867:32:4"
															},
															"nodeType": "YulIf",
															"src": "3864:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3993:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4008:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4022:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4012:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4037:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4083:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4094:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4079:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4079:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4103:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4047:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4037:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3824:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3835:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3847:6:4",
														"type": ""
													}
												],
												"src": "3777:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4199:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4216:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4239:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4221:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4221:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4209:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4187:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4194:3:4",
														"type": ""
													}
												],
												"src": "4134:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4334:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4354:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4339:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4339:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4327:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4327:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4305:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4312:3:4",
														"type": ""
													}
												],
												"src": "4258:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4519:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4529:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4600:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4536:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4529:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4701:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1",
																	"nodeType": "YulIdentifier",
																	"src": "4612:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4612:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4714:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4725:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4730:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4721:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4714:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4507:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4515:3:4",
														"type": ""
													}
												],
												"src": "4373:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4901:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4967:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4908:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4901:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5073:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83",
																	"nodeType": "YulIdentifier",
																	"src": "4984:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4984:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5086:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5097:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5102:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5093:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5086:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4879:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4887:3:4",
														"type": ""
													}
												],
												"src": "4745:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5263:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5273:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5339:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5344:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5280:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5280:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5445:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
																	"nodeType": "YulIdentifier",
																	"src": "5356:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5458:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5469:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5474:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5465:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5465:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5458:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5251:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5259:3:4",
														"type": ""
													}
												],
												"src": "5117:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5635:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5645:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5711:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5652:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5645:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5817:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970",
																	"nodeType": "YulIdentifier",
																	"src": "5728:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5728:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5728:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5830:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5841:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5846:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5837:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5830:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5623:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5631:3:4",
														"type": ""
													}
												],
												"src": "5489:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6007:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6017:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6083:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6088:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6024:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6017:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6189:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06",
																	"nodeType": "YulIdentifier",
																	"src": "6100:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6100:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6202:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6213:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6218:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6209:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6209:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6202:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5995:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6003:3:4",
														"type": ""
													}
												],
												"src": "5861:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6379:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6389:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6455:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:2:4",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6396:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6396:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6389:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6561:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490",
																	"nodeType": "YulIdentifier",
																	"src": "6472:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6472:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6472:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6574:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6585:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6590:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6581:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6367:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6375:3:4",
														"type": ""
													}
												],
												"src": "6233:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6751:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6761:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6827:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6832:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6768:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6761:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6933:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3",
																	"nodeType": "YulIdentifier",
																	"src": "6844:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6844:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6844:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6946:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6957:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6953:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6946:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6739:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6747:3:4",
														"type": ""
													}
												],
												"src": "6605:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7042:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7059:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7082:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7064:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7064:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7052:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7030:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7037:3:4",
														"type": ""
													}
												],
												"src": "6977:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7199:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7209:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7221:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7232:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7217:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7209:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7289:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7302:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7313:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7298:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7298:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7245:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7245:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7171:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7183:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7194:4:4",
														"type": ""
													}
												],
												"src": "7101:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7455:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7477:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7488:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7473:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7473:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7465:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7545:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7558:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7569:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7501:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7501:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7626:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7639:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7650:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7635:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7635:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7582:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7582:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7582:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7419:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7431:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7439:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7450:4:4",
														"type": ""
													}
												],
												"src": "7329:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7759:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7769:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7781:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7792:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7777:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7777:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7769:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7843:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7856:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7867:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7852:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7852:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7805:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7805:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7731:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7743:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7754:4:4",
														"type": ""
													}
												],
												"src": "7667:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8054:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8064:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8076:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8087:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8072:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8072:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8064:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8111:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8122:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8107:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8107:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8130:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8126:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8126:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8100:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8100:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8100:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8156:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8290:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8164:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8164:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8156:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8034:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8049:4:4",
														"type": ""
													}
												],
												"src": "7883:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8479:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8489:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8501:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8512:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8489:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8536:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8547:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8532:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8532:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8555:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8561:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8551:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8525:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8525:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8581:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8715:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8589:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8581:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8459:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8474:4:4",
														"type": ""
													}
												],
												"src": "8308:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8904:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8914:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8926:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8937:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8914:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8961:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8972:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8957:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8957:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8980:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8986:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8976:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8950:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8950:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8950:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9006:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9140:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9014:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8884:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8899:4:4",
														"type": ""
													}
												],
												"src": "8733:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9329:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9339:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9351:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9347:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9339:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9386:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9397:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9382:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9382:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9405:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9411:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9401:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9401:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9375:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9375:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9375:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9431:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9565:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9439:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9439:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9431:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9309:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9324:4:4",
														"type": ""
													}
												],
												"src": "9158:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9754:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9764:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9776:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9787:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9772:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9772:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9764:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9811:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9807:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9807:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9830:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9836:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9826:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9826:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9800:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9800:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9800:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9856:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9990:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9864:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9864:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9856:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9734:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9749:4:4",
														"type": ""
													}
												],
												"src": "9583:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10179:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10189:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10201:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10212:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10197:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10197:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10189:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10236:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10247:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10232:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10232:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10255:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10261:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10251:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10225:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10225:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10281:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10415:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10289:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10289:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10281:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10159:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10174:4:4",
														"type": ""
													}
												],
												"src": "10008:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10604:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10614:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10626:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10622:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10622:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10614:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10661:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10672:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10657:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10680:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10686:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10676:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10650:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10650:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10650:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10706:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10840:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10714:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10714:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10706:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10584:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10599:4:4",
														"type": ""
													}
												],
												"src": "10433:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10956:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10966:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10978:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10989:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10974:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10974:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10966:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11046:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11059:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11070:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11055:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11055:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11002:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11002:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11002:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10928:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10940:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10951:4:4",
														"type": ""
													}
												],
												"src": "10858:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11212:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11222:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11234:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11245:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11230:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11230:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11222:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11302:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11315:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11326:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11311:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11311:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11258:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11258:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11258:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11383:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11396:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11407:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11392:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11392:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11339:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11339:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11339:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11176:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11188:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11196:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11207:4:4",
														"type": ""
													}
												],
												"src": "11086:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11606:371:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11616:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11628:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11639:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11624:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11624:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11616:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11697:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11710:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11721:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11706:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11706:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11653:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11653:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11653:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11778:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11791:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11802:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11787:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11787:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11734:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11734:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11860:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11873:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11884:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11869:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11869:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11816:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11816:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11816:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11942:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11955:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11966:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11951:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11951:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11898:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11898:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11898:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11554:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11566:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11574:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11582:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11590:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11601:4:4",
														"type": ""
													}
												],
												"src": "11424:553:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12049:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12043:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12043:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12033:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12016:6:4",
														"type": ""
													}
												],
												"src": "11983:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12160:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12177:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12182:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12170:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12170:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12170:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12198:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12217:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12222:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12213:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12213:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12198:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12132:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12137:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12148:11:4",
														"type": ""
													}
												],
												"src": "12064:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12283:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12293:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12316:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12298:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12298:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12293:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12327:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12350:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12332:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12332:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12327:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12490:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12492:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12492:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12492:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12411:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12418:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12486:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12414:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12408:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12408:81:4"
															},
															"nodeType": "YulIf",
															"src": "12405:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12522:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12533:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12536:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12529:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12522:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12270:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12273:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12279:3:4",
														"type": ""
													}
												],
												"src": "12239:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12592:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12602:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12625:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12607:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12607:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12602:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12636:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12659:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12641:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12641:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12636:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12683:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12685:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12685:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12685:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12680:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12673:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12673:9:4"
															},
															"nodeType": "YulIf",
															"src": "12670:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12715:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12724:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12727:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12720:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12720:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12715:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12581:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12584:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12590:1:4",
														"type": ""
													}
												],
												"src": "12550:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12789:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12799:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12822:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12804:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12804:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12799:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12833:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12856:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12838:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12833:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13031:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13033:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13033:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13033:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12943:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12936:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12936:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12929:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12929:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12951:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12958:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13026:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12954:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12954:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12948:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12948:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12925:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12925:105:4"
															},
															"nodeType": "YulIf",
															"src": "12922:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13063:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13078:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13081:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13074:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13074:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13063:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12772:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12775:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12781:7:4",
														"type": ""
													}
												],
												"src": "12741:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13140:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13150:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13173:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13155:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13155:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13150:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13184:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13207:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13189:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13189:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13184:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13231:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13233:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13233:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13233:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13225:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13228:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13222:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13222:8:4"
															},
															"nodeType": "YulIf",
															"src": "13219:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13263:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13275:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13278:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13271:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13271:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13263:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13126:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13129:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13135:4:4",
														"type": ""
													}
												],
												"src": "13095:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13337:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13347:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13376:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13358:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13347:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13319:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13329:7:4",
														"type": ""
													}
												],
												"src": "13292:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13436:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13446:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13471:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13464:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13464:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13457:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13457:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13446:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13418:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13428:7:4",
														"type": ""
													}
												],
												"src": "13394:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13535:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13545:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13560:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13567:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13556:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13556:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13545:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13517:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13527:7:4",
														"type": ""
													}
												],
												"src": "13490:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13667:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13677:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13688:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13677:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13649:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13659:7:4",
														"type": ""
													}
												],
												"src": "13622:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13733:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13750:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13753:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13743:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13743:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13743:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13847:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13850:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13840:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13840:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13840:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13871:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13874:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13864:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13864:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13864:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13705:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13919:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13936:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13939:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13929:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13929:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13929:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14033:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14036:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14026:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14026:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14026:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14057:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14060:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14050:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14050:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14050:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13891:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14166:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14183:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14186:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14176:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14176:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14176:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "14077:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14289:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14306:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14309:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14299:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14299:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14299:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14200:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14429:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14451:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14459:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14447:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14447:14:4"
																	},
																	{
																		"hexValue": "504f4f4c3a20496e73756666696369656e74206c6971756964697479206d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14463:34:4",
																		"type": "",
																		"value": "POOL: Insufficient liquidity min"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14440:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14440:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14440:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14519:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14527:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14515:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14515:15:4"
																	},
																	{
																		"hexValue": "746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14532:5:4",
																		"type": "",
																		"value": "ted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14508:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14508:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14508:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14421:6:4",
														"type": ""
													}
												],
												"src": "14323:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14657:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14679:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14687:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14675:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14675:14:4"
																	},
																	{
																		"hexValue": "464143544f52593a204163636573732064656e696564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14691:24:4",
																		"type": "",
																		"value": "FACTORY: Access denied"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14668:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14668:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14668:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14649:6:4",
														"type": ""
													}
												],
												"src": "14551:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14835:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14857:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14865:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14853:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14853:14:4"
																	},
																	{
																		"hexValue": "504f4f4c3a204163636573732064656e696564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14869:21:4",
																		"type": "",
																		"value": "POOL: Access denied"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14846:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14846:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14846:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14827:6:4",
														"type": ""
													}
												],
												"src": "14729:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15010:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15032:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15040:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15028:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15028:14:4"
																	},
																	{
																		"hexValue": "4552524f523a20696e73756666696369656e7420696e70757420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15044:34:4",
																		"type": "",
																		"value": "ERROR: insufficient input amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15021:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15021:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15021:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15002:6:4",
														"type": ""
													}
												],
												"src": "14904:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15198:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15220:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15228:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15216:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15216:14:4"
																	},
																	{
																		"hexValue": "504f4f4c3a20496e73756666696369656e74206c697175696469747920627572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15232:34:4",
																		"type": "",
																		"value": "POOL: Insufficient liquidity bur"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15209:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15209:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15209:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15288:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15296:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15284:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15284:15:4"
																	},
																	{
																		"hexValue": "6e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15301:5:4",
																		"type": "",
																		"value": "ned"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15277:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15277:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15277:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15190:6:4",
														"type": ""
													}
												],
												"src": "15092:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15426:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15448:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15456:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15444:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15444:14:4"
																	},
																	{
																		"hexValue": "504f4f4c3a204f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15460:16:4",
																		"type": "",
																		"value": "POOL: Overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15437:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15437:40:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15437:40:4"
														}
													]
												},
												"name": "store_literal_in_memory_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15418:6:4",
														"type": ""
													}
												],
												"src": "15320:164:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15596:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15618:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15626:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15614:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15614:14:4"
																	},
																	{
																		"hexValue": "4552524f523a20496e737566666963656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15630:34:4",
																		"type": "",
																		"value": "ERROR: Insufficent output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15607:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15607:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15607:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15588:6:4",
														"type": ""
													}
												],
												"src": "15490:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15721:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15778:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15787:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15790:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15780:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15780:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15780:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15744:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15769:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15751:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15751:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15741:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15741:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15734:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:43:4"
															},
															"nodeType": "YulIf",
															"src": "15731:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15714:5:4",
														"type": ""
													}
												],
												"src": "15678:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15846:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15900:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15909:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15912:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15902:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15902:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15902:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15869:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15891:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15876:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15876:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15866:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15866:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15859:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:40:4"
															},
															"nodeType": "YulIf",
															"src": "15856:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15839:5:4",
														"type": ""
													}
												],
												"src": "15806:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15971:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16030:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16001:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15991:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15984:43:4"
															},
															"nodeType": "YulIf",
															"src": "15981:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15964:5:4",
														"type": ""
													}
												],
												"src": "15928:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1(memPtr) {\n\n        mstore(add(memPtr, 0), \"POOL: Insufficient liquidity min\")\n\n        mstore(add(memPtr, 32), \"ted\")\n\n    }\n\n    function store_literal_in_memory_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83(memPtr) {\n\n        mstore(add(memPtr, 0), \"FACTORY: Access denied\")\n\n    }\n\n    function store_literal_in_memory_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af(memPtr) {\n\n        mstore(add(memPtr, 0), \"POOL: Access denied\")\n\n    }\n\n    function store_literal_in_memory_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: insufficient input amount\")\n\n    }\n\n    function store_literal_in_memory_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06(memPtr) {\n\n        mstore(add(memPtr, 0), \"POOL: Insufficient liquidity bur\")\n\n        mstore(add(memPtr, 32), \"ned\")\n\n    }\n\n    function store_literal_in_memory_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490(memPtr) {\n\n        mstore(add(memPtr, 0), \"POOL: Overflow\")\n\n    }\n\n    function store_literal_in_memory_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERROR: Insufficent output amount\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"271": [
									{
										"length": 32,
										"start": 3716
									}
								],
								"275": [
									{
										"length": 32,
										"start": 950
									},
									{
										"length": 32,
										"start": 1336
									},
									{
										"length": 32,
										"start": 2994
									},
									{
										"length": 32,
										"start": 3973
									},
									{
										"length": 32,
										"start": 4377
									}
								],
								"277": [
									{
										"length": 32,
										"start": 1121
									},
									{
										"length": 32,
										"start": 3168
									},
									{
										"length": 32,
										"start": 3752
									},
									{
										"length": 32,
										"start": 4561
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AFCB44 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xD5BCB9B5 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x393 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xC0D78655 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2ED JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x240 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0x113E08 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1BBE JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH2 0xECA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH2 0x134D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x439 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD SWAP2 POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52C CALLER DUP5 DUP5 PUSH2 0x1373 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x715 JUMPI PUSH2 0x694 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x720 DUP5 DUP5 DUP5 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B4 SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7C8 PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0x7D7 PUSH2 0x50E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x7F0 DUP4 DUP7 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x807 DUP4 DUP7 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD EQ ISZERO PUSH2 0x835 JUMPI PUSH2 0x82E PUSH2 0x829 DUP3 DUP5 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x161E JUMP JUMPDEST SWAP7 POP PUSH2 0x880 JUMP JUMPDEST PUSH2 0x87D DUP5 PUSH2 0x84E PUSH1 0x0 SLOAD DUP6 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST DUP5 PUSH2 0x86E PUSH1 0x0 SLOAD DUP6 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x1718 JUMP JUMPDEST SWAP7 POP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CD DUP9 DUP9 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x8D7 DUP7 DUP7 PUSH2 0x184B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x91F SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B9 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA8 SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABC PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH2 0xACB PUSH2 0x50E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 SLOAD PUSH2 0xB29 DUP7 DUP4 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 SLOAD PUSH2 0xB4B DUP6 DUP4 PUSH2 0x1608 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0x2077 JUMP JUMPDEST SWAP6 POP PUSH1 0x0 DUP8 GT DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x0 DUP7 GT JUMPDEST PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 ADDRESS DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0B SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP10 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP PUSH2 0xD14 PUSH2 0x3B1 JUMP JUMPDEST DUP1 SWAP6 POP DUP2 SWAP7 POP POP POP PUSH2 0xD26 DUP6 DUP6 PUSH2 0x184B JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xD85 SWAP3 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA4 CALLER DUP5 DUP5 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE35 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF51 SWAP1 PUSH2 0x1EE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF65 PUSH2 0x50E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP7 PUSH2 0xFCB JUMP JUMPDEST DUP6 PUSH1 0x0 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xFDE JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1028 PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1041 DUP6 DUP9 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 GT PUSH2 0x104E JUMPI PUSH1 0x0 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x1073 PUSH2 0x1064 DUP7 DUP10 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x108B DUP6 DUP9 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 GT PUSH2 0x1098 JUMPI PUSH1 0x0 PUSH2 0x10BE JUMP JUMPDEST PUSH2 0x10BD PUSH2 0x10AE DUP7 DUP10 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x10CF JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x11C6 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1172 SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C4 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x127E JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x1E63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST POP JUMPDEST PUSH2 0x1288 DUP5 DUP5 PUSH2 0x184B JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x12EB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x146C SWAP2 SWAP1 PUSH2 0x2102 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14C6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x155B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x1631 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1713 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x163E DUP5 PUSH2 0x1A1C JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1658 JUMPI PUSH2 0x1657 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x168A JUMPI PUSH2 0x1689 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16BC JUMPI PUSH2 0x16BB PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16D5 JUMPI PUSH2 0x16D4 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x16EE JUMPI PUSH2 0x16ED PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x170F DUP2 DUP3 DUP6 DUP2 PUSH2 0x1709 JUMPI PUSH2 0x1708 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DIV PUSH2 0x1718 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1727 JUMPI DUP2 PUSH2 0x1729 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1746 DUP2 PUSH1 0x0 SLOAD PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x179E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A06 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x183F SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x189B JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO JUMPDEST PUSH2 0x18DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D1 SWAP1 PUSH2 0x1F47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x193E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1996 DUP2 PUSH1 0x0 SLOAD PUSH2 0x145E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19FA SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A14 SWAP2 SWAP1 PUSH2 0x2021 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A3E JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A59 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A74 JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1A8F JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AC5 JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AE0 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x1AF4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B0C DUP2 PUSH2 0x234C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B21 DUP2 PUSH2 0x2363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B36 DUP2 PUSH2 0x237A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B4B DUP2 PUSH2 0x237A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH2 0x1B66 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B75 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B94 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA3 DUP6 DUP3 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BD7 JUMPI PUSH2 0x1BD6 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BE5 DUP7 DUP3 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BF6 DUP7 DUP3 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C07 DUP7 DUP3 DUP8 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C2D JUMPI PUSH2 0x1C2C PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP9 DUP3 DUP10 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C4C DUP9 DUP3 DUP10 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1C5D DUP9 DUP3 DUP10 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1C6E DUP9 DUP3 DUP10 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1C7F DUP9 DUP3 DUP10 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CB1 DUP6 DUP3 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CC2 DUP6 DUP3 DUP7 ADD PUSH2 0x1B27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH2 0x1CE1 PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP3 DUP6 ADD PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x21DC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1D DUP5 DUP3 DUP6 ADD PUSH2 0x1B3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x2136 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D3E DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D51 PUSH1 0x23 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5C DUP3 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 PUSH1 0x16 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7F DUP3 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D97 PUSH1 0x13 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA2 DUP3 PUSH2 0x2259 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBA PUSH1 0x20 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC5 DUP3 PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDD PUSH1 0x23 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE8 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E00 PUSH1 0xE DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E0B DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E23 PUSH1 0x20 DUP4 PUSH2 0x2010 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E2E DUP3 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x2174 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E78 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x1E85 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC0 DUP2 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE0 DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F00 DUP2 PUSH2 0x1D8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F20 DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F40 DUP2 PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F60 DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F80 DUP2 PUSH2 0x1E16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FB7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1FC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FE0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1FED PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1FFA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x2007 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E39 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202C DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x2037 DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x206C JUMPI PUSH2 0x206B PUSH2 0x217E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2082 DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x208D DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B3 DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BE DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20F6 PUSH2 0x217E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210D DUP3 PUSH2 0x2174 JUMP JUMPDEST SWAP2 POP PUSH2 0x2118 DUP4 PUSH2 0x2174 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x212B JUMPI PUSH2 0x212A PUSH2 0x217E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2141 DUP3 PUSH2 0x2154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x504F4F4C3A20496E73756666696369656E74206C6971756964697479206D696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7465640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x464143544F52593A204163636573732064656E69656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x504F4F4C3A204163636573732064656E69656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A20696E73756666696369656E7420696E70757420616D6F756E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x504F4F4C3A20496E73756666696369656E74206C697175696469747920627572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E65640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x504F4F4C3A204F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552524F523A20496E737566666963656E74206F757470757420616D6F756E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2355 DUP2 PUSH2 0x2136 JUMP JUMPDEST DUP2 EQ PUSH2 0x2360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x236C DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP2 EQ PUSH2 0x2377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2383 DUP2 PUSH2 0x2174 JUMP JUMPDEST DUP2 EQ PUSH2 0x238E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xE2 DUP15 0xB9 MULMOD RETURN 0xAE 0xEA 0xE6 PUSH20 0xCF14DF5075F80987C4AB804E68BE4FC66B08A7FD 0x29 PUSH25 0x64736F6C634300080700330000000000000000000000000000 ",
							"sourceMap": "2369:5356:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6882:204;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6730:144;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2204:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1876:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3258:1049;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7541:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;679:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4350:1048;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1722:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7347:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2476:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2581:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5444:1253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;736:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2447:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2515:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6882:204;6926:13;6941;6985:6;6978:24;;;7011:4;6978:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6967:50;;7046:6;7039:24;;;7072:4;7039:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7028:50;;6882:204;;:::o;6730:144::-;6774:13;6789;6826:9;;6815:20;;6857:9;;6846:20;;6730:144;;:::o;2204:156::-;2277:4;2294:36;2303:10;2315:7;2324:5;2294:8;:36::i;:::-;2348:4;2341:11;;2204:156;;;;:::o;2543:31::-;;;:::o;640:32::-;;;;:::o;1876:322::-;1963:4;2021:14;1990:9;:15;2000:4;1990:15;;;;;;;;;;;;;;;:27;2006:10;1990:27;;;;;;;;;;;;;;;;:45;1986:146;;2082:38;2114:5;2082:9;:15;2092:4;2082:15;;;;;;;;;;;;;;;:27;2098:10;2082:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2052:9;:15;2062:4;2052:15;;;;;;;;;;;;;;;:27;2068:10;2052:27;;;;;;;;;;;;;;;:68;;;;1986:146;2142:26;2152:4;2158:2;2162:5;2142:9;:26::i;:::-;2186:4;2179:11;;1876:322;;;;;:::o;3258:1049::-;3302:14;3413:6;;;;;;;;;;;3399:20;;:10;:20;;;3391:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3534:13;3549;3566;:11;:13::i;:::-;3533:46;;;;3591:13;3606;3623;:11;:13::i;:::-;3590:46;;;;3647:12;3662:22;3675:8;3662;:12;;:22;;;;:::i;:::-;3647:37;;3695:12;3710:22;3723:8;3710;:12;;:22;;;;:::i;:::-;3695:37;;3823:1;3808:11;;:16;3804:219;;;3853:31;3863:20;3875:7;3863;:11;;:20;;;;:::i;:::-;3853:9;:31::i;:::-;3841:43;;3804:219;;;3929:82;3965:8;3938:24;3950:11;;3938:7;:11;;:24;;;;:::i;:::-;:35;;;;:::i;:::-;4002:8;3975:24;3987:11;;3975:7;:11;;:24;;;;:::i;:::-;:35;;;;:::i;:::-;3929:8;:82::i;:::-;3917:94;;3804:219;4053:1;4041:9;:13;4033:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4139:20;4145:2;4149:9;4139:5;:20::i;:::-;4222:27;4230:8;4240;4222:7;:27::i;:::-;4270:10;4265:34;;;4282:7;4291;4265:34;;;;;;;:::i;:::-;;;;;;;;3318:989;;;;;;3258:1049;;;:::o;7541:181::-;7657:5;;;;;;;;;;;7643:19;;:10;:19;;;7635:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7708:6;7700:5;;:14;;;;;;;;;;;;;;;;;;7541:181;:::o;679:50::-;;;;;;;;;;;;;;;;;:::o;4350:1048::-;4394:12;4408;4517:6;;;;;;;;;;;4503:20;;:10;:20;;;4495:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4595:13;4610;4627;:11;:13::i;:::-;4594:46;;;;4652:13;4667;4684;:11;:13::i;:::-;4651:46;;;;4708:14;4725:9;:24;4743:4;4725:24;;;;;;;;;;;;;;;;4708:41;;4856:11;;4830:23;4844:8;4830:9;:13;;:23;;;;:::i;:::-;:37;;;;:::i;:::-;4820:47;;4914:11;;4888:23;4902:8;4888:9;:13;;:23;;;;:::i;:::-;:37;;;;:::i;:::-;4878:47;;4954:1;4944:7;:11;:26;;;;;4969:1;4959:7;:11;4944:26;4936:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5076:31;5090:4;5097:9;5076:5;:31::i;:::-;5125:6;5118:23;;;5142:2;5146:7;5118:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5172:6;5165:23;;;5189:2;5193:7;5165:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5285:13;:11;:13::i;:::-;5262:36;;;;;;;;5309:27;5317:8;5327;5309:7;:27::i;:::-;5387:2;5352:38;;5357:10;5352:38;;;5369:7;5378;5352:38;;;;;;;:::i;:::-;;;;;;;;4422:976;;;;;4350:1048;;;:::o;1722:148::-;1791:4;1808:32;1818:10;1830:2;1834:5;1808:9;:32::i;:::-;1858:4;1851:11;;1722:148;;;;:::o;7347:186::-;7466:5;;;;;;;;;;;7452:19;;:10;:19;;;7444:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7518:7;7509:6;;:16;;;;;;;;;;;;;;;;;;7347:186;:::o;2476:32::-;;;:::o;2581:31::-;;;:::o;5444:1253::-;5640:6;;;;;;;;;;;5626:20;;:10;:20;;;5618:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5714:13;5729;5746;:11;:13::i;:::-;5713:46;;;;5771:15;5788;5817:8;5807:18;;:6;:18;;;:64;;5857:1;5861:9;5807:64;;;5829:9;5845:1;5807:64;5770:101;;;;5903:1;5890:10;:14;:32;;;;5921:1;5908:10;:14;5890:32;5882:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;6002:13;6017;6034;:11;:13::i;:::-;6001:46;;;;6058:14;6086:24;6099:10;6086:8;:12;;:24;;;;:::i;:::-;6075:8;:35;:80;;6154:1;6075:80;;;6113:38;6126:24;6139:10;6126:8;:12;;:24;;;;:::i;:::-;6113:8;:12;;:38;;;;:::i;:::-;6075:80;6058:97;;6166:14;6194:24;6207:10;6194:8;:12;;:24;;;;:::i;:::-;6183:8;:35;:80;;6262:1;6183:80;;;6221:38;6234:24;6247:10;6234:8;:12;;:24;;;;:::i;:::-;6221:8;:12;;:38;;;;:::i;:::-;6183:80;6166:97;;6294:1;6282:9;:13;:30;;;;6311:1;6299:9;:13;6282:30;6274:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;6407:1;6394:10;:14;6390:59;;;6417:6;6410:23;;;6434:2;6438:10;6410:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6390:59;6477:1;6464:10;:14;6460:59;;;6487:6;6480:23;;;6504:2;6508:10;6480:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6460:59;6580:27;6588:8;6598;6580:7;:27::i;:::-;6686:2;6623:66;;6628:10;6623:66;;;6640:9;6651;6662:10;6674;6623:66;;;;;;;;;:::i;:::-;;;;;;;;5545:1152;;;;;;;;5444:1253;;;;;:::o;736:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2447:20::-;;;;;;;;;;;;;:::o;2515:21::-;;;;;;;;;;;;;:::o;1518:169::-;1627:5;1599:9;:16;1609:5;1599:16;;;;;;;;;;;;;;;:25;1616:7;1599:25;;;;;;;;;;;;;;;:33;;;;1664:7;1648:31;;1657:5;1648:31;;;1673:5;1648:31;;;;;;:::i;:::-;;;;;;;;1518:169;;;:::o;3122:96:3:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;1292:220:0:-;1386:26;1406:5;1386:9;:15;1396:4;1386:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1368:9;:15;1378:4;1368:15;;;;;;;;;;;;;;;:44;;;;1439:24;1457:5;1439:9;:13;1449:2;1439:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1423:9;:13;1433:2;1423:13;;;;;;;;;;;;;;;:40;;;;1494:2;1479:25;;1488:4;1479:25;;;1498:5;1479:25;;;;;;:::i;:::-;;;;;;;;1292:220;;;:::o;3465:96:3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6237:1642:2:-;6285:7;6313:1;6308;:6;6304:45;;;6337:1;6330:8;;;;6304:45;7028:14;7062:1;7051:7;7056:1;7051:4;:7::i;:::-;:12;;7045:1;:19;;7028:36;;7523:1;7512:6;7508:1;:10;;;;;:::i;:::-;;;7499:6;:19;7498:26;;7489:35;;7572:1;7561:6;7557:1;:10;;;;;:::i;:::-;;;7548:6;:19;7547:26;;7538:35;;7621:1;7610:6;7606:1;:10;;;;;:::i;:::-;;;7597:6;:19;7596:26;;7587:35;;7670:1;7659:6;7655:1;:10;;;;;:::i;:::-;;;7646:6;:19;7645:26;;7636:35;;7719:1;7708:6;7704:1;:10;;;;;:::i;:::-;;;7695:6;:19;7694:26;;7685:35;;7768:1;7757:6;7753:1;:10;;;;;:::i;:::-;;;7744:6;:19;7743:26;;7734:35;;7817:1;7806:6;7802:1;:10;;;;;:::i;:::-;;;7793:6;:19;7792:26;;7783:35;;7839:23;7843:6;7855;7851:1;:10;;;;;:::i;:::-;;;7839:3;:23::i;:::-;7832:30;;;6237:1642;;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;870:201:0:-;943:22;959:5;943:11;;:15;;:22;;;;:::i;:::-;929:11;:36;;;;992:24;1010:5;992:9;:13;1002:2;992:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;976:9;:13;986:2;976:13;;;;;;;;;;;;;;;:40;;;;1053:2;1032:31;;1049:1;1032:31;;;1057:5;1032:31;;;;;;:::i;:::-;;;;;;;;870:201;;:::o;7094:219::-;7180:14;7168:8;:26;;:56;;;;;7210:14;7198:8;:26;;7168:56;7160:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;7266:8;7254:9;:20;;;;7297:8;7285:9;:20;;;;7094:219;;:::o;1077:209::-;1156:26;1176:5;1156:9;:15;1166:4;1156:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1138:9;:15;1148:4;1138:15;;;;;;;;;;;;;;;:44;;;;1207:22;1223:5;1207:11;;:15;;:22;;;;:::i;:::-;1193:11;:36;;;;1268:1;1245:33;;1254:4;1245:33;;;1272:5;1245:33;;;;;;:::i;:::-;;;;;;;;1077:209;;:::o;2755:96:3:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;8340:983:2:-;8392:7;8411:14;8428:1;8411:18;;8482:1;8476:3;8467:5;:12;;:16;8463:99;;;8513:3;8503:13;;;;;8544:3;8534:13;;;;8463:99;8593:1;8588:2;8579:5;:11;;:15;8575:96;;;8624:2;8614:12;;;;;8654:2;8644:12;;;;8575:96;8702:1;8697:2;8688:5;:11;;:15;8684:96;;;8733:2;8723:12;;;;;8763:2;8753:12;;;;8684:96;8811:1;8806:2;8797:5;:11;;:15;8793:96;;;8842:2;8832:12;;;;;8872:2;8862:12;;;;8793:96;8919:1;8915;8906:5;:10;;:14;8902:93;;;8950:1;8940:11;;;;;8979:1;8969:11;;;;8902:93;9025:1;9021;9012:5;:10;;:14;9008:93;;;9056:1;9046:11;;;;;9085:1;9075:11;;;;9008:93;9131:1;9127;9118:5;:10;;:14;9114:93;;;9162:1;9152:11;;;;;9191:1;9181:11;;;;9114:93;9237:1;9233;9224:5;:10;;:14;9220:64;;;9268:1;9258:11;;;;9220:64;9310:6;9303:13;;;8340:983;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:474::-;992:6;1000;1049:2;1037:9;1028:7;1024:23;1020:32;1017:119;;;1055:79;;:::i;:::-;1017:119;1175:1;1200:53;1245:7;1236:6;1225:9;1221:22;1200:53;:::i;:::-;1190:63;;1146:117;1302:2;1328:53;1373:7;1364:6;1353:9;1349:22;1328:53;:::i;:::-;1318:63;;1273:118;924:474;;;;;:::o;1404:619::-;1481:6;1489;1497;1546:2;1534:9;1525:7;1521:23;1517:32;1514:119;;;1552:79;;:::i;:::-;1514:119;1672:1;1697:53;1742:7;1733:6;1722:9;1718:22;1697:53;:::i;:::-;1687:63;;1643:117;1799:2;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1770:118;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1404:619;;;;;:::o;2029:911::-;2124:6;2132;2140;2148;2156;2205:3;2193:9;2184:7;2180:23;2176:33;2173:120;;;2212:79;;:::i;:::-;2173:120;2332:1;2357:53;2402:7;2393:6;2382:9;2378:22;2357:53;:::i;:::-;2347:63;;2303:117;2459:2;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2430:118;2587:2;2613:53;2658:7;2649:6;2638:9;2634:22;2613:53;:::i;:::-;2603:63;;2558:118;2715:2;2741:53;2786:7;2777:6;2766:9;2762:22;2741:53;:::i;:::-;2731:63;;2686:118;2843:3;2870:53;2915:7;2906:6;2895:9;2891:22;2870:53;:::i;:::-;2860:63;;2814:119;2029:911;;;;;;;;:::o;2946:474::-;3014:6;3022;3071:2;3059:9;3050:7;3046:23;3042:32;3039:119;;;3077:79;;:::i;:::-;3039:119;3197:1;3222:53;3267:7;3258:6;3247:9;3243:22;3222:53;:::i;:::-;3212:63;;3168:117;3324:2;3350:53;3395:7;3386:6;3375:9;3371:22;3350:53;:::i;:::-;3340:63;;3295:118;2946:474;;;;;:::o;3426:345::-;3493:6;3542:2;3530:9;3521:7;3517:23;3513:32;3510:119;;;3548:79;;:::i;:::-;3510:119;3668:1;3693:61;3746:7;3737:6;3726:9;3722:22;3693:61;:::i;:::-;3683:71;;3639:125;3426:345;;;;:::o;3777:351::-;3847:6;3896:2;3884:9;3875:7;3871:23;3867:32;3864:119;;;3902:79;;:::i;:::-;3864:119;4022:1;4047:64;4103:7;4094:6;4083:9;4079:22;4047:64;:::i;:::-;4037:74;;3993:128;3777:351;;;;:::o;4134:118::-;4221:24;4239:5;4221:24;:::i;:::-;4216:3;4209:37;4134:118;;:::o;4258:109::-;4339:21;4354:5;4339:21;:::i;:::-;4334:3;4327:34;4258:109;;:::o;4373:366::-;4515:3;4536:67;4600:2;4595:3;4536:67;:::i;:::-;4529:74;;4612:93;4701:3;4612:93;:::i;:::-;4730:2;4725:3;4721:12;4714:19;;4373:366;;;:::o;4745:::-;4887:3;4908:67;4972:2;4967:3;4908:67;:::i;:::-;4901:74;;4984:93;5073:3;4984:93;:::i;:::-;5102:2;5097:3;5093:12;5086:19;;4745:366;;;:::o;5117:::-;5259:3;5280:67;5344:2;5339:3;5280:67;:::i;:::-;5273:74;;5356:93;5445:3;5356:93;:::i;:::-;5474:2;5469:3;5465:12;5458:19;;5117:366;;;:::o;5489:::-;5631:3;5652:67;5716:2;5711:3;5652:67;:::i;:::-;5645:74;;5728:93;5817:3;5728:93;:::i;:::-;5846:2;5841:3;5837:12;5830:19;;5489:366;;;:::o;5861:::-;6003:3;6024:67;6088:2;6083:3;6024:67;:::i;:::-;6017:74;;6100:93;6189:3;6100:93;:::i;:::-;6218:2;6213:3;6209:12;6202:19;;5861:366;;;:::o;6233:::-;6375:3;6396:67;6460:2;6455:3;6396:67;:::i;:::-;6389:74;;6472:93;6561:3;6472:93;:::i;:::-;6590:2;6585:3;6581:12;6574:19;;6233:366;;;:::o;6605:::-;6747:3;6768:67;6832:2;6827:3;6768:67;:::i;:::-;6761:74;;6844:93;6933:3;6844:93;:::i;:::-;6962:2;6957:3;6953:12;6946:19;;6605:366;;;:::o;6977:118::-;7064:24;7082:5;7064:24;:::i;:::-;7059:3;7052:37;6977:118;;:::o;7101:222::-;7194:4;7232:2;7221:9;7217:18;7209:26;;7245:71;7313:1;7302:9;7298:17;7289:6;7245:71;:::i;:::-;7101:222;;;;:::o;7329:332::-;7450:4;7488:2;7477:9;7473:18;7465:26;;7501:71;7569:1;7558:9;7554:17;7545:6;7501:71;:::i;:::-;7582:72;7650:2;7639:9;7635:18;7626:6;7582:72;:::i;:::-;7329:332;;;;;:::o;7667:210::-;7754:4;7792:2;7781:9;7777:18;7769:26;;7805:65;7867:1;7856:9;7852:17;7843:6;7805:65;:::i;:::-;7667:210;;;;:::o;7883:419::-;8049:4;8087:2;8076:9;8072:18;8064:26;;8136:9;8130:4;8126:20;8122:1;8111:9;8107:17;8100:47;8164:131;8290:4;8164:131;:::i;:::-;8156:139;;7883:419;;;:::o;8308:::-;8474:4;8512:2;8501:9;8497:18;8489:26;;8561:9;8555:4;8551:20;8547:1;8536:9;8532:17;8525:47;8589:131;8715:4;8589:131;:::i;:::-;8581:139;;8308:419;;;:::o;8733:::-;8899:4;8937:2;8926:9;8922:18;8914:26;;8986:9;8980:4;8976:20;8972:1;8961:9;8957:17;8950:47;9014:131;9140:4;9014:131;:::i;:::-;9006:139;;8733:419;;;:::o;9158:::-;9324:4;9362:2;9351:9;9347:18;9339:26;;9411:9;9405:4;9401:20;9397:1;9386:9;9382:17;9375:47;9439:131;9565:4;9439:131;:::i;:::-;9431:139;;9158:419;;;:::o;9583:::-;9749:4;9787:2;9776:9;9772:18;9764:26;;9836:9;9830:4;9826:20;9822:1;9811:9;9807:17;9800:47;9864:131;9990:4;9864:131;:::i;:::-;9856:139;;9583:419;;;:::o;10008:::-;10174:4;10212:2;10201:9;10197:18;10189:26;;10261:9;10255:4;10251:20;10247:1;10236:9;10232:17;10225:47;10289:131;10415:4;10289:131;:::i;:::-;10281:139;;10008:419;;;:::o;10433:::-;10599:4;10637:2;10626:9;10622:18;10614:26;;10686:9;10680:4;10676:20;10672:1;10661:9;10657:17;10650:47;10714:131;10840:4;10714:131;:::i;:::-;10706:139;;10433:419;;;:::o;10858:222::-;10951:4;10989:2;10978:9;10974:18;10966:26;;11002:71;11070:1;11059:9;11055:17;11046:6;11002:71;:::i;:::-;10858:222;;;;:::o;11086:332::-;11207:4;11245:2;11234:9;11230:18;11222:26;;11258:71;11326:1;11315:9;11311:17;11302:6;11258:71;:::i;:::-;11339:72;11407:2;11396:9;11392:18;11383:6;11339:72;:::i;:::-;11086:332;;;;;:::o;11424:553::-;11601:4;11639:3;11628:9;11624:19;11616:27;;11653:71;11721:1;11710:9;11706:17;11697:6;11653:71;:::i;:::-;11734:72;11802:2;11791:9;11787:18;11778:6;11734:72;:::i;:::-;11816;11884:2;11873:9;11869:18;11860:6;11816:72;:::i;:::-;11898;11966:2;11955:9;11951:18;11942:6;11898:72;:::i;:::-;11424:553;;;;;;;:::o;12064:169::-;12148:11;12182:6;12177:3;12170:19;12222:4;12217:3;12213:14;12198:29;;12064:169;;;;:::o;12239:305::-;12279:3;12298:20;12316:1;12298:20;:::i;:::-;12293:25;;12332:20;12350:1;12332:20;:::i;:::-;12327:25;;12486:1;12418:66;12414:74;12411:1;12408:81;12405:107;;;12492:18;;:::i;:::-;12405:107;12536:1;12533;12529:9;12522:16;;12239:305;;;;:::o;12550:185::-;12590:1;12607:20;12625:1;12607:20;:::i;:::-;12602:25;;12641:20;12659:1;12641:20;:::i;:::-;12636:25;;12680:1;12670:35;;12685:18;;:::i;:::-;12670:35;12727:1;12724;12720:9;12715:14;;12550:185;;;;:::o;12741:348::-;12781:7;12804:20;12822:1;12804:20;:::i;:::-;12799:25;;12838:20;12856:1;12838:20;:::i;:::-;12833:25;;13026:1;12958:66;12954:74;12951:1;12948:81;12943:1;12936:9;12929:17;12925:105;12922:131;;;13033:18;;:::i;:::-;12922:131;13081:1;13078;13074:9;13063:20;;12741:348;;;;:::o;13095:191::-;13135:4;13155:20;13173:1;13155:20;:::i;:::-;13150:25;;13189:20;13207:1;13189:20;:::i;:::-;13184:25;;13228:1;13225;13222:8;13219:34;;;13233:18;;:::i;:::-;13219:34;13278:1;13275;13271:9;13263:17;;13095:191;;;;:::o;13292:96::-;13329:7;13358:24;13376:5;13358:24;:::i;:::-;13347:35;;13292:96;;;:::o;13394:90::-;13428:7;13471:5;13464:13;13457:21;13446:32;;13394:90;;;:::o;13490:126::-;13527:7;13567:42;13560:5;13556:54;13545:65;;13490:126;;;:::o;13622:77::-;13659:7;13688:5;13677:16;;13622:77;;;:::o;13705:180::-;13753:77;13750:1;13743:88;13850:4;13847:1;13840:15;13874:4;13871:1;13864:15;13891:180;13939:77;13936:1;13929:88;14036:4;14033:1;14026:15;14060:4;14057:1;14050:15;14200:117;14309:1;14306;14299:12;14323:222;14463:34;14459:1;14451:6;14447:14;14440:58;14532:5;14527:2;14519:6;14515:15;14508:30;14323:222;:::o;14551:172::-;14691:24;14687:1;14679:6;14675:14;14668:48;14551:172;:::o;14729:169::-;14869:21;14865:1;14857:6;14853:14;14846:45;14729:169;:::o;14904:182::-;15044:34;15040:1;15032:6;15028:14;15021:58;14904:182;:::o;15092:222::-;15232:34;15228:1;15220:6;15216:14;15209:58;15301:5;15296:2;15288:6;15284:15;15277:30;15092:222;:::o;15320:164::-;15460:16;15456:1;15448:6;15444:14;15437:40;15320:164;:::o;15490:182::-;15630:34;15626:1;15618:6;15614:14;15607:58;15490:182;:::o;15678:122::-;15751:24;15769:5;15751:24;:::i;:::-;15744:5;15741:35;15731:63;;15790:1;15787;15780:12;15731:63;15678:122;:::o;15806:116::-;15876:21;15891:5;15876:21;:::i;:::-;15869:5;15866:32;15856:60;;15912:1;15909;15902:12;15856:60;15806:116;:::o;15928:122::-;16001:24;16019:5;16001:24;:::i;:::-;15994:5;15991:35;15981:63;;16040:1;16037;16030:12;15981:63;15928:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1831800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admin()": "2602",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2925",
								"burn(address)": "infinite",
								"factory()": "infinite",
								"getBalances()": "infinite",
								"getReserves()": "infinite",
								"mint(address)": "infinite",
								"router()": "2624",
								"setAdmin(address)": "26981",
								"setRouter(address)": "26959",
								"swap(address,address,uint256,uint256,address)": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2452",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_update(uint256,uint256)": "44301"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3089,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3084,
									"end": 3089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3084,
									"end": 3098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3119,
									"end": 3127,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3109,
									"end": 3127,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3147,
									"end": 3154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3144,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3138,
									"end": 3144,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3174,
									"end": 3181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3201,
									"end": 3208,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3192,
									"end": 3208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2976,
									"end": 3216,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 268,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 276,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 278,
									"end": 284,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 294,
									"end": 300,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 346,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 331,
									"end": 340,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 322,
									"end": 329,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 318,
									"end": 341,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 314,
									"end": 347,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 311,
									"end": 431,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 311,
									"end": 431,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 311,
									"end": 431,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 350,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 350,
									"end": 429,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 311,
									"end": 431,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 311,
									"end": 431,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 470,
									"end": 471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 551,
									"end": 558,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 542,
									"end": 548,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 531,
									"end": 540,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 527,
									"end": 549,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 495,
									"end": 559,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 495,
									"end": 559,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 485,
									"end": 559,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 485,
									"end": 559,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 441,
									"end": 569,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 608,
									"end": 610,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 690,
									"end": 697,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 670,
									"end": 679,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 666,
									"end": 688,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 634,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 634,
									"end": 698,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 624,
									"end": 698,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 624,
									"end": 698,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 579,
									"end": 708,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 747,
									"end": 749,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 829,
									"end": 836,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 820,
									"end": 826,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 818,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 805,
									"end": 827,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 773,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 837,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 763,
									"end": 837,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 763,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 718,
									"end": 847,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 886,
									"end": 888,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 968,
									"end": 975,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 959,
									"end": 965,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 948,
									"end": 957,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 944,
									"end": 966,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 912,
									"end": 976,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 912,
									"end": 976,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 902,
									"end": 976,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 902,
									"end": 976,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 857,
									"end": 986,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1025,
									"end": 1028,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1108,
									"end": 1115,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1105,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1088,
									"end": 1097,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1106,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1052,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1116,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1116,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1126,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 1133,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1257,
									"end": 1264,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1304,
									"end": 1309,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1286,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1275,
									"end": 1310,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1275,
									"end": 1310,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1316,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1399,
									"end": 1441,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1392,
									"end": 1397,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1388,
									"end": 1442,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1442,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1377,
									"end": 1442,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1448,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1577,
									"end": 1694,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1577,
									"end": 1694,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1686,
									"end": 1687,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1684,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1676,
									"end": 1688,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1791,
									"end": 1796,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1773,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1766,
									"end": 1771,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1763,
									"end": 1798,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1802,
									"end": 1814,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1753,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1822,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "277"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "275"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "271"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2369,
									"end": 7725,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fee28eb909f3aeeae673cf14df5075f80987c4ab804e68be4fc66b08a7fd297864736f6c63430008070033",
									".code": [
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "89AFCB44"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "D5BCB9B5"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "F887EA40"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "89AFCB44"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "C0D78655"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "6A627842"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "704B6C02"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "113E08"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "902F1AC"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 7725,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6941,
											"end": 6954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6978,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6978,
											"end": 7002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7011,
											"end": 7015,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6978,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6967,
											"end": 7017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6967,
											"end": 7017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7046,
											"end": 7052,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 7039,
											"end": 7063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7039,
											"end": 7063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7063,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7072,
											"end": 7076,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 7039,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 7086,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6774,
											"end": 6787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6815,
											"end": 6835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6857,
											"end": 6866,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6857,
											"end": 6866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6846,
											"end": 6866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6846,
											"end": 6866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6874,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2303,
											"end": 2313,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2322,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2574,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 1967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2016,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2108,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2078,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2179,
											"end": 2190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3409,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3391,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3566,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3591,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3623,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3623,
											"end": 3636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3636,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3623,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3590,
											"end": 3636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3675,
											"end": 3683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3670,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3662,
											"end": 3674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3662,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3723,
											"end": 3731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3718,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3710,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3853,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3863,
											"end": 3874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3863,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3853,
											"end": 3884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3853,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3853,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3884,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3929,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3965,
											"end": 3973,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3950,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3938,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3938,
											"end": 3973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3938,
											"end": 3973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3938,
											"end": 3973,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3938,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3987,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3975,
											"end": 3986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3975,
											"end": 4010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3975,
											"end": 4010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3975,
											"end": 4010,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3975,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3929,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3929,
											"end": 4011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 4011,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3929,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 4011,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 4011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3804,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4054,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4145,
											"end": 4147,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4158,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4139,
											"end": 4159,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4159,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4139,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4230,
											"end": 4238,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4240,
											"end": 4248,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4222,
											"end": 4249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4222,
											"end": 4249,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4222,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4280,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "PUSH",
											"source": 0,
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 4282,
											"end": 4289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4291,
											"end": 4298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4299,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7643,
											"end": 7653,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7643,
											"end": 7662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7635,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7700,
											"end": 7705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7722,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4513,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4523,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4495,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4627,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4627,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4627,
											"end": 4640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4627,
											"end": 4640,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4627,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4594,
											"end": 4640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4594,
											"end": 4640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4594,
											"end": 4640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4594,
											"end": 4640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4684,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4684,
											"end": 4697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 4697,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4684,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4844,
											"end": 4852,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4830,
											"end": 4843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4830,
											"end": 4867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4830,
											"end": 4867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4830,
											"end": 4867,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4830,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4867,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4902,
											"end": 4910,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4888,
											"end": 4901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4888,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4878,
											"end": 4925,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4878,
											"end": 4925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 4951,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4955,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4959,
											"end": 4970,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4936,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5076,
											"end": 5107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5107,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5076,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5125,
											"end": 5131,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5118,
											"end": 5141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5118,
											"end": 5141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5141,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5142,
											"end": 5144,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5146,
											"end": 5153,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 5165,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5188,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5200,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5165,
											"end": 5201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5285,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5285,
											"end": 5298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5285,
											"end": 5298,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5285,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5262,
											"end": 5298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5317,
											"end": 5325,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5327,
											"end": 5335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5309,
											"end": 5336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5309,
											"end": 5336,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5309,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5387,
											"end": 5389,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5367,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 5369,
											"end": 5376,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5385,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5352,
											"end": 5390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 5398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1818,
											"end": 1828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1839,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7452,
											"end": 7471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 7462,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 7471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7452,
											"end": 7471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 7471,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 7444,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7518,
											"end": 7525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7533,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2612,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5636,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5618,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5746,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5746,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5746,
											"end": 5759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5746,
											"end": 5759,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5746,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5713,
											"end": 5759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5817,
											"end": 5825,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5807,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5870,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5845,
											"end": 5846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5807,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 5904,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 5922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5890,
											"end": 5922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 5922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 5922,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 5922,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5890,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5882,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6002,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6034,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6034,
											"end": 6047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6034,
											"end": 6047,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6034,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6099,
											"end": 6109,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6094,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6086,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6075,
											"end": 6083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6075,
											"end": 6110,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6139,
											"end": 6149,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6134,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6126,
											"end": 6138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6126,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6113,
											"end": 6125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6113,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6075,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6207,
											"end": 6217,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6202,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6194,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6218,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6247,
											"end": 6257,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6242,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6234,
											"end": 6246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6234,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6229,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6221,
											"end": 6233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6221,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6183,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6295,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6282,
											"end": 6312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6299,
											"end": 6312,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6282,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 6274,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6404,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6394,
											"end": 6408,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6390,
											"end": 6449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6410,
											"end": 6433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6410,
											"end": 6433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6433,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 6434,
											"end": 6436,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6438,
											"end": 6448,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6410,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6390,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6474,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6464,
											"end": 6478,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6460,
											"end": 6519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6487,
											"end": 6493,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 6480,
											"end": 6503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6480,
											"end": 6503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6503,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 6504,
											"end": 6506,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6518,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6480,
											"end": 6519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6460,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6588,
											"end": 6596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6598,
											"end": 6606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6580,
											"end": 6607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6580,
											"end": 6607,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6580,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6686,
											"end": 6688,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6628,
											"end": 6638,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 6640,
											"end": 6649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6672,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6684,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6623,
											"end": 6689,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5444,
											"end": 6697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1614,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1673,
											"end": 1678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1386,
											"end": 1405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1382,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1498,
											"end": 1503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6308,
											"end": 6314,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6304,
											"end": 6349,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6304,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6304,
											"end": 6349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6330,
											"end": 6338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6330,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6330,
											"end": 6338,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6304,
											"end": 6349,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6304,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7028,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7051,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7056,
											"end": 7057,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7051,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 7051,
											"end": 7058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7051,
											"end": 7058,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7051,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7051,
											"end": 7063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7051,
											"end": 7063,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7045,
											"end": 7046,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7028,
											"end": 7064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7028,
											"end": 7064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7524,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7512,
											"end": 7518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7509,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7508,
											"end": 7518,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7499,
											"end": 7505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7499,
											"end": 7518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7489,
											"end": 7524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7489,
											"end": 7524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7561,
											"end": 7567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7558,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7567,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7548,
											"end": 7554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7548,
											"end": 7567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7573,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7597,
											"end": 7603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7597,
											"end": 7616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7596,
											"end": 7622,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7587,
											"end": 7622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7587,
											"end": 7622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7670,
											"end": 7671,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7655,
											"end": 7665,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7646,
											"end": 7652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7646,
											"end": 7665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7671,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7636,
											"end": 7671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7719,
											"end": 7720,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7705,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7695,
											"end": 7714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7694,
											"end": 7720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7694,
											"end": 7720,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7769,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7757,
											"end": 7763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7763,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 7769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 7769,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7734,
											"end": 7769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7734,
											"end": 7769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7806,
											"end": 7812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7802,
											"end": 7803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7802,
											"end": 7812,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7792,
											"end": 7818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7792,
											"end": 7818,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7783,
											"end": 7818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7783,
											"end": 7818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7855,
											"end": 7861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7852,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7839,
											"end": 7862,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7839,
											"end": 7862,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7839,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 7862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 7862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 7862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 7879,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 692,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 588,
											"end": 692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 646,
											"end": 653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 672,
											"end": 673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 672,
											"end": 677,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 684,
											"end": 685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 665,
											"end": 685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 588,
											"end": 692,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 870,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 959,
											"end": 964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 943,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 943,
											"end": 965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 943,
											"end": 965,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 943,
											"end": 965,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 943,
											"end": 965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 965,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 929,
											"end": 965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 992,
											"end": 1009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 992,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 988,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 989,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1016,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1057,
											"end": 1062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1063,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 870,
											"end": 1071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 1071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 1071,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7094,
											"end": 7313,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7094,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7194,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7168,
											"end": 7176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7194,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 7168,
											"end": 7224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7198,
											"end": 7206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7224,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7224,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 7168,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 7160,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7254,
											"end": 7274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7285,
											"end": 7305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7094,
											"end": 7313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1077,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1077,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1176,
											"end": 1181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1156,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1156,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1153,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1182,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1207,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1229,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1272,
											"end": 1277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8340,
											"end": 9323,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8340,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8482,
											"end": 8483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8479,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8467,
											"end": 8472,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8467,
											"end": 8479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8467,
											"end": 8479,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8467,
											"end": 8483,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8562,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 8463,
											"end": 8562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8516,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8503,
											"end": 8516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8516,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8516,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8503,
											"end": 8516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8544,
											"end": 8547,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8534,
											"end": 8547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8534,
											"end": 8547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8562,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 8463,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8593,
											"end": 8594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8579,
											"end": 8584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8579,
											"end": 8590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8579,
											"end": 8590,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8579,
											"end": 8594,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8575,
											"end": 8671,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8575,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 8575,
											"end": 8671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8624,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8614,
											"end": 8626,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8614,
											"end": 8626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8614,
											"end": 8626,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8614,
											"end": 8626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8614,
											"end": 8626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8654,
											"end": 8656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8644,
											"end": 8656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8644,
											"end": 8656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8644,
											"end": 8656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8644,
											"end": 8656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8575,
											"end": 8671,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 8575,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8688,
											"end": 8693,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8688,
											"end": 8699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8688,
											"end": 8699,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8688,
											"end": 8703,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8780,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8684,
											"end": 8780,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8735,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8723,
											"end": 8735,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8723,
											"end": 8735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8723,
											"end": 8735,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8723,
											"end": 8735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8723,
											"end": 8735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8763,
											"end": 8765,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8753,
											"end": 8765,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 8765,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 8765,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 8765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8780,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8684,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8811,
											"end": 8812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8808,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8797,
											"end": 8802,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8797,
											"end": 8808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8797,
											"end": 8808,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8797,
											"end": 8812,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8793,
											"end": 8889,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8793,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8793,
											"end": 8889,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8862,
											"end": 8874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8874,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8862,
											"end": 8874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8793,
											"end": 8889,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8793,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8919,
											"end": 8920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8906,
											"end": 8911,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8906,
											"end": 8916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8906,
											"end": 8916,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8906,
											"end": 8920,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8951,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8940,
											"end": 8951,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8940,
											"end": 8951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8940,
											"end": 8951,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 8940,
											"end": 8951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8940,
											"end": 8951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8979,
											"end": 8980,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 8969,
											"end": 8980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8969,
											"end": 8980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8969,
											"end": 8980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8969,
											"end": 8980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8902,
											"end": 8995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9012,
											"end": 9017,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9022,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 9012,
											"end": 9026,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9008,
											"end": 9101,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9008,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9008,
											"end": 9101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9056,
											"end": 9057,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9046,
											"end": 9057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9046,
											"end": 9057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9046,
											"end": 9057,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 9046,
											"end": 9057,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9046,
											"end": 9057,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9075,
											"end": 9086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9075,
											"end": 9086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9008,
											"end": 9101,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 9008,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9127,
											"end": 9128,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9118,
											"end": 9123,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9118,
											"end": 9128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9118,
											"end": 9128,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 9118,
											"end": 9132,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9162,
											"end": 9163,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9152,
											"end": 9163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9152,
											"end": 9163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9152,
											"end": 9163,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 9152,
											"end": 9163,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9152,
											"end": 9163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9181,
											"end": 9192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9181,
											"end": 9192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9181,
											"end": 9192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9181,
											"end": 9192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 9114,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9237,
											"end": 9238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9224,
											"end": 9229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9224,
											"end": 9234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9224,
											"end": 9234,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9220,
											"end": 9284,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9220,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 9220,
											"end": 9284,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9258,
											"end": 9269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9258,
											"end": 9269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9258,
											"end": 9269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9258,
											"end": 9269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9220,
											"end": 9284,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 9220,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9310,
											"end": 9316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9303,
											"end": 9316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9303,
											"end": 9316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9303,
											"end": 9316,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8340,
											"end": 9323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8340,
											"end": 9323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8340,
											"end": 9323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8340,
											"end": 9323,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 992,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1037,
											"end": 1046,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1020,
											"end": 1052,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1055,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 1017,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1245,
											"end": 1252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1234,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1200,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1253,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 1328,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1273,
											"end": 1391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1398,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1525,
											"end": 1532,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1549,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1633,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 1514,
											"end": 1633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1552,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1552,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 1552,
											"end": 1631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1631,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1552,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1633,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 1514,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1742,
											"end": 1749,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1731,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1697,
											"end": 1750,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1697,
											"end": 1750,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1697,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1750,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 2023,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2138,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2203,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2209,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2293,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 2173,
											"end": 2293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2212,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 2212,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 2212,
											"end": 2291,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2212,
											"end": 2291,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 2212,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 2173,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 2402,
											"end": 2409,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2357,
											"end": 2410,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2357,
											"end": 2410,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 2357,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 2410,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 2410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2430,
											"end": 2548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2589,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2647,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 2613,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2666,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2741,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 2786,
											"end": 2793,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2783,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2762,
											"end": 2784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 2741,
											"end": 2794,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2794,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 2741,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2794,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2686,
											"end": 2804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2870,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 2915,
											"end": 2922,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2870,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2870,
											"end": 2923,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2870,
											"end": 2923,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 2870,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2940,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3042,
											"end": 3074,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 3077,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 3039,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 3222,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3212,
											"end": 3275,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3212,
											"end": 3275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 3395,
											"end": 3402,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3393,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 3350,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3340,
											"end": 3403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3340,
											"end": 3403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3413,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 3420,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3426,
											"end": 3771,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3426,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3540,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3545,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3629,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 3510,
											"end": 3629,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 3548,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 3548,
											"end": 3627,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3548,
											"end": 3627,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 3548,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 3510,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 3746,
											"end": 3753,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3726,
											"end": 3735,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3744,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 3693,
											"end": 3754,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3693,
											"end": 3754,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 3693,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3754,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3754,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3639,
											"end": 3764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3771,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3771,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3777,
											"end": 4128,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3777,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3871,
											"end": 3894,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3899,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 4103,
											"end": 4110,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4101,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4047,
											"end": 4111,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4047,
											"end": 4111,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 4047,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 4121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 4128,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 4128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 4128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 4128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 4128,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4134,
											"end": 4252,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 4134,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4221,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4221,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 4221,
											"end": 4245,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4245,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 4221,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4252,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4258,
											"end": 4367,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 4258,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 4354,
											"end": 4359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4334,
											"end": 4337,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4367,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4373,
											"end": 4739,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 4373,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 4536,
											"end": 4603,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4536,
											"end": 4603,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 4536,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4603,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 4701,
											"end": 4704,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 4612,
											"end": 4705,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4705,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 4612,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4728,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4739,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4745,
											"end": 5111,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 4745,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4887,
											"end": 4890,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4967,
											"end": 4970,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 4908,
											"end": 4975,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 4975,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 4908,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 5073,
											"end": 5076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 4984,
											"end": 5077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4984,
											"end": 5077,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 4984,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 5111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 5111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 5111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 5111,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5117,
											"end": 5483,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 5117,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5339,
											"end": 5342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 5280,
											"end": 5347,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5280,
											"end": 5347,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 5280,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 5445,
											"end": 5448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 5356,
											"end": 5449,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5449,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 5356,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5474,
											"end": 5476,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5469,
											"end": 5472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5477,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5458,
											"end": 5477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5483,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5714,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 5817,
											"end": 5820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5846,
											"end": 5848,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5837,
											"end": 5849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5861,
											"end": 6227,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 5861,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6003,
											"end": 6006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 6083,
											"end": 6086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6091,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 6189,
											"end": 6192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 6100,
											"end": 6193,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6100,
											"end": 6193,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 6100,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6202,
											"end": 6221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6202,
											"end": 6221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5861,
											"end": 6227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5861,
											"end": 6227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5861,
											"end": 6227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5861,
											"end": 6227,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6233,
											"end": 6599,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 6233,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6375,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 6460,
											"end": 6462,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 6455,
											"end": 6458,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6396,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6396,
											"end": 6463,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6396,
											"end": 6463,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 6396,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6389,
											"end": 6463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 6561,
											"end": 6564,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 6472,
											"end": 6565,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6472,
											"end": 6565,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 6472,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6593,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6574,
											"end": 6593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6574,
											"end": 6593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6599,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6605,
											"end": 6971,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 6605,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 6832,
											"end": 6834,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6768,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6768,
											"end": 6835,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6835,
											"name": "tag",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 6768,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6761,
											"end": 6835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6761,
											"end": 6835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 6933,
											"end": 6936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 6844,
											"end": 6937,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6844,
											"end": 6937,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 6844,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6957,
											"end": 6960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6946,
											"end": 6965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6946,
											"end": 6965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6971,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6971,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6977,
											"end": 7095,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 6977,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 7082,
											"end": 7087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7062,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7052,
											"end": 7089,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 7095,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7101,
											"end": 7323,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7101,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7221,
											"end": 7230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7313,
											"end": 7314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7323,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7323,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7488,
											"end": 7490,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7477,
											"end": 7486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7569,
											"end": 7570,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7567,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7554,
											"end": 7571,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7551,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 7650,
											"end": 7652,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7639,
											"end": 7648,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 7582,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7661,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7667,
											"end": 7877,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 7667,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7754,
											"end": 7758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7794,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7781,
											"end": 7790,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7805,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7865,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 7869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7805,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 7805,
											"end": 7870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7805,
											"end": 7870,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7805,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7667,
											"end": 7877,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7667,
											"end": 7877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7667,
											"end": 7877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7667,
											"end": 7877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7667,
											"end": 7877,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7883,
											"end": 8302,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7883,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8049,
											"end": 8053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8089,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8085,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8072,
											"end": 8090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8136,
											"end": 8145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8126,
											"end": 8146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8122,
											"end": 8123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8111,
											"end": 8120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8107,
											"end": 8124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8100,
											"end": 8147,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 8164,
											"end": 8295,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8164,
											"end": 8295,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 8164,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8156,
											"end": 8295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8156,
											"end": 8295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 8302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 8302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 8302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 8302,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8474,
											"end": 8478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8555,
											"end": 8559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8551,
											"end": 8571,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8532,
											"end": 8549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8525,
											"end": 8572,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 8715,
											"end": 8719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8733,
											"end": 9152,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 8733,
											"end": 9152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8939,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8926,
											"end": 8935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8922,
											"end": 8940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 8940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 8940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8986,
											"end": 8995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 8996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8961,
											"end": 8970,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 8974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8950,
											"end": 8997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9014,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9014,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 9014,
											"end": 9145,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9014,
											"end": 9145,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 9014,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9006,
											"end": 9145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9006,
											"end": 9145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 9152,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 9152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 9152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 9152,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9158,
											"end": 9577,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9158,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9324,
											"end": 9328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9364,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9351,
											"end": 9360,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9339,
											"end": 9365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9411,
											"end": 9420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9405,
											"end": 9409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9401,
											"end": 9421,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9386,
											"end": 9395,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9382,
											"end": 9399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9375,
											"end": 9422,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 9565,
											"end": 9569,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 9439,
											"end": 9570,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9439,
											"end": 9570,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 9439,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9431,
											"end": 9570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9431,
											"end": 9570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9577,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9583,
											"end": 10002,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9583,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9749,
											"end": 9753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9787,
											"end": 9789,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9776,
											"end": 9785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9826,
											"end": 9846,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9822,
											"end": 9823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9811,
											"end": 9820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9807,
											"end": 9824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9800,
											"end": 9847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9864,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 9990,
											"end": 9994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9864,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 9864,
											"end": 9995,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9864,
											"end": 9995,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 9864,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9856,
											"end": 9995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9856,
											"end": 9995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9583,
											"end": 10002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9583,
											"end": 10002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9583,
											"end": 10002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9583,
											"end": 10002,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10008,
											"end": 10427,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 10008,
											"end": 10427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10174,
											"end": 10178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10214,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10201,
											"end": 10210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10197,
											"end": 10215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10261,
											"end": 10270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10255,
											"end": 10259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10245,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10232,
											"end": 10249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10225,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10289,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 10289,
											"end": 10420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10289,
											"end": 10420,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 10289,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10281,
											"end": 10420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10281,
											"end": 10420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10008,
											"end": 10427,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10639,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10626,
											"end": 10635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10614,
											"end": 10640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10614,
											"end": 10640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10680,
											"end": 10684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10670,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10657,
											"end": 10674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10650,
											"end": 10697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 10840,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 10714,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10706,
											"end": 10845,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10706,
											"end": 10845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10433,
											"end": 10852,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10858,
											"end": 11080,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 10858,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10951,
											"end": 10955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10989,
											"end": 10991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10978,
											"end": 10987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 10992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10966,
											"end": 10992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11002,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 11070,
											"end": 11071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11068,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11055,
											"end": 11072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11046,
											"end": 11052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11002,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11002,
											"end": 11073,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11002,
											"end": 11073,
											"name": "tag",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 11002,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 11080,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 11080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 11080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 11080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 11080,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11207,
											"end": 11211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11245,
											"end": 11247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11234,
											"end": 11243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11230,
											"end": 11248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11222,
											"end": 11248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11222,
											"end": 11248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 11326,
											"end": 11327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11324,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11328,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11302,
											"end": 11308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11258,
											"end": 11329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11329,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 11258,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 11407,
											"end": 11409,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11396,
											"end": 11405,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11392,
											"end": 11410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11383,
											"end": 11389,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11339,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11339,
											"end": 11411,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11339,
											"end": 11411,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 11339,
											"end": 11411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11086,
											"end": 11418,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11601,
											"end": 11605,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 11628,
											"end": 11637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11643,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 11721,
											"end": 11722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11706,
											"end": 11723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11703,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11653,
											"end": 11724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11653,
											"end": 11724,
											"name": "tag",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 11653,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 11802,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11778,
											"end": 11784,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 11734,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11816,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 11884,
											"end": 11886,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11873,
											"end": 11882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11860,
											"end": 11866,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11816,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11816,
											"end": 11888,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11816,
											"end": 11888,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 11816,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11898,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 11966,
											"end": 11968,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11955,
											"end": 11964,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11951,
											"end": 11969,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11942,
											"end": 11948,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11898,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11898,
											"end": 11970,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11898,
											"end": 11970,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 11898,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11977,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12064,
											"end": 12233,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 12064,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12148,
											"end": 12159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12177,
											"end": 12180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12170,
											"end": 12189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12222,
											"end": 12226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12217,
											"end": 12220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12213,
											"end": 12227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12198,
											"end": 12227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12064,
											"end": 12233,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12064,
											"end": 12233,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12064,
											"end": 12233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12064,
											"end": 12233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12064,
											"end": 12233,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12239,
											"end": 12544,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 12239,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12279,
											"end": 12282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 12316,
											"end": 12317,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12293,
											"end": 12318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12293,
											"end": 12318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12327,
											"end": 12352,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12327,
											"end": 12352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12486,
											"end": 12487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12418,
											"end": 12484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12414,
											"end": 12488,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12411,
											"end": 12412,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12408,
											"end": 12489,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12405,
											"end": 12512,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12405,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 12405,
											"end": 12512,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 12492,
											"end": 12510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12405,
											"end": 12512,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 12405,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12536,
											"end": 12537,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12533,
											"end": 12534,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12529,
											"end": 12538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12522,
											"end": 12538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12522,
											"end": 12538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12239,
											"end": 12544,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12239,
											"end": 12544,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12239,
											"end": 12544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12239,
											"end": 12544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12239,
											"end": 12544,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12550,
											"end": 12735,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 12550,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12590,
											"end": 12591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12607,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12607,
											"end": 12627,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12607,
											"end": 12627,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 12607,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12602,
											"end": 12627,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12602,
											"end": 12627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12641,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 12659,
											"end": 12660,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12641,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12641,
											"end": 12661,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12641,
											"end": 12661,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 12641,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12636,
											"end": 12661,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12636,
											"end": 12661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12680,
											"end": 12681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 12670,
											"end": 12705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12685,
											"end": 12703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 12685,
											"end": 12703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 12685,
											"end": 12703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12685,
											"end": 12703,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 12685,
											"end": 12703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12670,
											"end": 12705,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 12670,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12727,
											"end": 12728,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12724,
											"end": 12725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12715,
											"end": 12729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12715,
											"end": 12729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12550,
											"end": 12735,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12550,
											"end": 12735,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12550,
											"end": 12735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12550,
											"end": 12735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12550,
											"end": 12735,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12741,
											"end": 13089,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 12741,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12781,
											"end": 12788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12804,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 12822,
											"end": 12823,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12804,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12804,
											"end": 12824,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12804,
											"end": 12824,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 12804,
											"end": 12824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12833,
											"end": 12858,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12833,
											"end": 12858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13026,
											"end": 13027,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12958,
											"end": 13024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12954,
											"end": 13028,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12951,
											"end": 12952,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12948,
											"end": 13029,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12943,
											"end": 12944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12936,
											"end": 12945,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12929,
											"end": 12946,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12925,
											"end": 13030,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12922,
											"end": 13053,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12922,
											"end": 13053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 12922,
											"end": 13053,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13033,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 13033,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 13033,
											"end": 13051,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13033,
											"end": 13051,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 13033,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12922,
											"end": 13053,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 12922,
											"end": 13053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13081,
											"end": 13082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13078,
											"end": 13079,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13074,
											"end": 13083,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 13063,
											"end": 13083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13063,
											"end": 13083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12741,
											"end": 13089,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12741,
											"end": 13089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12741,
											"end": 13089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12741,
											"end": 13089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12741,
											"end": 13089,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13095,
											"end": 13286,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 13095,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13155,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 13173,
											"end": 13174,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13155,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 13155,
											"end": 13175,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13155,
											"end": 13175,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 13155,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13150,
											"end": 13175,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13150,
											"end": 13175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13189,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 13207,
											"end": 13208,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13189,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 13189,
											"end": 13209,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13189,
											"end": 13209,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 13189,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13184,
											"end": 13209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13184,
											"end": 13209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13228,
											"end": 13229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13225,
											"end": 13226,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13222,
											"end": 13230,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13219,
											"end": 13253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13219,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 13219,
											"end": 13253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13219,
											"end": 13253,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 13219,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13278,
											"end": 13279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13275,
											"end": 13276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13271,
											"end": 13280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13263,
											"end": 13280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13263,
											"end": 13280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13095,
											"end": 13286,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13095,
											"end": 13286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13095,
											"end": 13286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13095,
											"end": 13286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13095,
											"end": 13286,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13292,
											"end": 13388,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 13292,
											"end": 13388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13329,
											"end": 13336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13358,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 13376,
											"end": 13381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13358,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 13358,
											"end": 13382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13358,
											"end": 13382,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 13358,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13347,
											"end": 13382,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13347,
											"end": 13382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13388,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13394,
											"end": 13484,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 13394,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13428,
											"end": 13435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13471,
											"end": 13476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13464,
											"end": 13477,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13457,
											"end": 13478,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13446,
											"end": 13478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13446,
											"end": 13478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13394,
											"end": 13484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13394,
											"end": 13484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13394,
											"end": 13484,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13394,
											"end": 13484,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13490,
											"end": 13616,
											"name": "tag",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 13490,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13527,
											"end": 13534,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13567,
											"end": 13609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13560,
											"end": 13565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13556,
											"end": 13610,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13545,
											"end": 13610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13545,
											"end": 13610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13490,
											"end": 13616,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13490,
											"end": 13616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13490,
											"end": 13616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13490,
											"end": 13616,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13622,
											"end": 13699,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 13622,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13659,
											"end": 13666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13677,
											"end": 13693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13677,
											"end": 13693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13622,
											"end": 13699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13622,
											"end": 13699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13622,
											"end": 13699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13622,
											"end": 13699,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13705,
											"end": 13885,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 13705,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13753,
											"end": 13830,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13750,
											"end": 13751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13743,
											"end": 13831,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13850,
											"end": 13854,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 13847,
											"end": 13848,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13840,
											"end": 13855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13874,
											"end": 13878,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 13871,
											"end": 13872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13864,
											"end": 13879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13891,
											"end": 14071,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 13891,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13939,
											"end": 14016,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13936,
											"end": 13937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 14017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14036,
											"end": 14040,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 14033,
											"end": 14034,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14026,
											"end": 14041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14060,
											"end": 14064,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 14057,
											"end": 14058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14050,
											"end": 14065,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14200,
											"end": 14317,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 14200,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14309,
											"end": 14310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14306,
											"end": 14307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14323,
											"end": 14545,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 14323,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14463,
											"end": 14497,
											"name": "PUSH",
											"source": 4,
											"value": "504F4F4C3A20496E73756666696369656E74206C6971756964697479206D696E"
										},
										{
											"begin": 14459,
											"end": 14460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14451,
											"end": 14457,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14447,
											"end": 14461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14440,
											"end": 14498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14532,
											"end": 14537,
											"name": "PUSH",
											"source": 4,
											"value": "7465640000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14527,
											"end": 14529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14519,
											"end": 14525,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14515,
											"end": 14530,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14508,
											"end": 14538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14323,
											"end": 14545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14323,
											"end": 14545,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14551,
											"end": 14723,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 14551,
											"end": 14723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14691,
											"end": 14715,
											"name": "PUSH",
											"source": 4,
											"value": "464143544F52593A204163636573732064656E69656400000000000000000000"
										},
										{
											"begin": 14687,
											"end": 14688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14679,
											"end": 14685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14675,
											"end": 14689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14668,
											"end": 14716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14551,
											"end": 14723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14551,
											"end": 14723,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14729,
											"end": 14898,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 14729,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14869,
											"end": 14890,
											"name": "PUSH",
											"source": 4,
											"value": "504F4F4C3A204163636573732064656E69656400000000000000000000000000"
										},
										{
											"begin": 14865,
											"end": 14866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14857,
											"end": 14863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14853,
											"end": 14867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14846,
											"end": 14891,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14729,
											"end": 14898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14729,
											"end": 14898,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14904,
											"end": 15086,
											"name": "tag",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 14904,
											"end": 15086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15044,
											"end": 15078,
											"name": "PUSH",
											"source": 4,
											"value": "4552524F523A20696E73756666696369656E7420696E70757420616D6F756E74"
										},
										{
											"begin": 15040,
											"end": 15041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15032,
											"end": 15038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15028,
											"end": 15042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15021,
											"end": 15079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14904,
											"end": 15086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14904,
											"end": 15086,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15092,
											"end": 15314,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 15092,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15232,
											"end": 15266,
											"name": "PUSH",
											"source": 4,
											"value": "504F4F4C3A20496E73756666696369656E74206C697175696469747920627572"
										},
										{
											"begin": 15228,
											"end": 15229,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15220,
											"end": 15226,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15216,
											"end": 15230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15209,
											"end": 15267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15301,
											"end": 15306,
											"name": "PUSH",
											"source": 4,
											"value": "6E65640000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15296,
											"end": 15298,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15288,
											"end": 15294,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15284,
											"end": 15299,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15277,
											"end": 15307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15092,
											"end": 15314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15092,
											"end": 15314,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15320,
											"end": 15484,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 15320,
											"end": 15484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15460,
											"end": 15476,
											"name": "PUSH",
											"source": 4,
											"value": "504F4F4C3A204F766572666C6F77000000000000000000000000000000000000"
										},
										{
											"begin": 15456,
											"end": 15457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15448,
											"end": 15454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15444,
											"end": 15458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15437,
											"end": 15477,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15320,
											"end": 15484,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15320,
											"end": 15484,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15490,
											"end": 15672,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 15490,
											"end": 15672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15630,
											"end": 15664,
											"name": "PUSH",
											"source": 4,
											"value": "4552524F523A20496E737566666963656E74206F757470757420616D6F756E74"
										},
										{
											"begin": 15626,
											"end": 15627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15618,
											"end": 15624,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15614,
											"end": 15628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15607,
											"end": 15665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15490,
											"end": 15672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15490,
											"end": 15672,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15678,
											"end": 15800,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 15678,
											"end": 15800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 15769,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15751,
											"end": 15775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 15751,
											"end": 15775,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15751,
											"end": 15775,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 15751,
											"end": 15775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15744,
											"end": 15749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15741,
											"end": 15776,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15731,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 15731,
											"end": 15794,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15790,
											"end": 15791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15787,
											"end": 15788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15780,
											"end": 15792,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15731,
											"end": 15794,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 15731,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15678,
											"end": 15800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15678,
											"end": 15800,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15806,
											"end": 15922,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 15806,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15876,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 15891,
											"end": 15896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15876,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 15876,
											"end": 15897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15876,
											"end": 15897,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 15876,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15869,
											"end": 15874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15866,
											"end": 15898,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15856,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 15856,
											"end": 15916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15912,
											"end": 15913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15902,
											"end": 15914,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15856,
											"end": 15916,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 15856,
											"end": 15916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15806,
											"end": 15922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15806,
											"end": 15922,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15928,
											"end": 16050,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 15928,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16001,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 16019,
											"end": 16024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16001,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 16001,
											"end": 16025,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 16001,
											"end": 16025,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 16001,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15994,
											"end": 15999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15991,
											"end": 16026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15981,
											"end": 16044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 15981,
											"end": 16044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16040,
											"end": 16041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16038,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16030,
											"end": 16042,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15981,
											"end": 16044,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 15981,
											"end": 16044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15928,
											"end": 16050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15928,
											"end": 16050,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"factory()": "c45a0155",
							"getBalances()": "00113e08",
							"getReserves()": "0902f1ac",
							"mint(address)": "6a627842",
							"router()": "f887ea40",
							"setAdmin(address)": "704b6c02",
							"setRouter(address)": "c0d78655",
							"swap(address,address,uint256,uint256,address)": "d5bcb9b5",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoolContract.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PoolContract.sol\":{\"keccak256\":\"0xb98fd9e8dbd044870aca05908c6e92584c0ff2cd9d2cb0599bdae5855e360abe\",\"urls\":[\"bzz-raw://c73d36a3bf618a01be0632c0f0c2fe19b342a5e8730834d29b3b6e54c9193a17\",\"dweb:/ipfs/QmPBaYgKCvG5mgxCbMmUUFR2veeFbDR9MQUneL7H1YyXdu\"]},\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 21,
								"contract": "contracts/PoolContract.sol:LiquidityPool",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "contracts/PoolContract.sol:LiquidityPool",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 33,
								"contract": "contracts/PoolContract.sol:LiquidityPool",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 269,
								"contract": "contracts/PoolContract.sol:LiquidityPool",
								"label": "admin",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 273,
								"contract": "contracts/PoolContract.sol:LiquidityPool",
								"label": "router",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 279,
								"contract": "contracts/PoolContract.sol:LiquidityPool",
								"label": "_reserve0",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 281,
								"contract": "contracts/PoolContract.sol:LiquidityPool",
								"label": "_reserve1",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LiquidityToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"allowance": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"balanceOf": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PoolContract.sol\":417:2363  contract LiquidityToken is IERC20 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PoolContract.sol\":817:833  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/PoolContract.sol\":417:2363  contract LiquidityToken is IERC20 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PoolContract.sol\":417:2363  contract LiquidityToken is IERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PoolContract.sol\":2204:2360  function approve(address spender, uint value) override external returns (bool) {\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":640:672  uint override public totalSupply */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":1876:2198  function transferFrom(address from, address to, uint value) override external returns (bool) \r... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":679:729  mapping(address => uint) override public balanceOf */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":1722:1870  function transfer(address to, uint value) override external returns (bool) {\r... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":736:806  mapping(address => mapping(address => uint)) override public allowance */\n    tag_8:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoolContract.sol\":2204:2360  function approve(address spender, uint value) override external returns (bool) {\r... */\n    tag_12:\n        /* \"contracts/PoolContract.sol\":2277:2281  bool */\n      0x00\n        /* \"contracts/PoolContract.sol\":2294:2330  _approve(msg.sender, spender, value) */\n      tag_39\n        /* \"contracts/PoolContract.sol\":2303:2313  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":2315:2322  spender */\n      dup5\n        /* \"contracts/PoolContract.sol\":2324:2329  value */\n      dup5\n        /* \"contracts/PoolContract.sol\":2294:2302  _approve */\n      tag_40\n        /* \"contracts/PoolContract.sol\":2294:2330  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/PoolContract.sol\":2348:2352  true */\n      0x01\n        /* \"contracts/PoolContract.sol\":2341:2352  return true */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":2204:2360  function approve(address spender, uint value) override external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":640:672  uint override public totalSupply */\n    tag_16:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1876:2198  function transferFrom(address from, address to, uint value) override external returns (bool) \r... */\n    tag_22:\n        /* \"contracts/PoolContract.sol\":1963:1967  bool */\n      0x00\n        /* \"contracts/PoolContract.sol\":2021:2035  type(uint).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/PoolContract.sol\":1990:1999  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":1990:2005  allowance[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2000:2004  from */\n      dup7\n        /* \"contracts/PoolContract.sol\":1990:2005  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1990:2017  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2006:2016  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":1990:2017  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":1990:2035  allowance[from][msg.sender] != type(uint).max */\n      eq\n        /* \"contracts/PoolContract.sol\":1986:2132  if (allowance[from][msg.sender] != type(uint).max) {\r... */\n      tag_42\n      jumpi\n        /* \"contracts/PoolContract.sol\":2082:2120  allowance[from][msg.sender].sub(value) */\n      tag_43\n        /* \"contracts/PoolContract.sol\":2114:2119  value */\n      dup3\n        /* \"contracts/PoolContract.sol\":2082:2091  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":2082:2097  allowance[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2092:2096  from */\n      dup8\n        /* \"contracts/PoolContract.sol\":2082:2097  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":2082:2109  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2098:2108  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":2082:2109  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":2082:2113  allowance[from][msg.sender].sub */\n      tag_44\n      swap1\n        /* \"contracts/PoolContract.sol\":2082:2120  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"contracts/PoolContract.sol\":2052:2061  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":2052:2067  allowance[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2062:2066  from */\n      dup7\n        /* \"contracts/PoolContract.sol\":2052:2067  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":2052:2079  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":2068:2078  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":2052:2079  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":2052:2120  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1986:2132  if (allowance[from][msg.sender] != type(uint).max) {\r... */\n    tag_42:\n        /* \"contracts/PoolContract.sol\":2142:2168  _transfer(from, to, value) */\n      tag_45\n        /* \"contracts/PoolContract.sol\":2152:2156  from */\n      dup5\n        /* \"contracts/PoolContract.sol\":2158:2160  to */\n      dup5\n        /* \"contracts/PoolContract.sol\":2162:2167  value */\n      dup5\n        /* \"contracts/PoolContract.sol\":2142:2151  _transfer */\n      tag_46\n        /* \"contracts/PoolContract.sol\":2142:2168  _transfer(from, to, value) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/PoolContract.sol\":2186:2190  true */\n      0x01\n        /* \"contracts/PoolContract.sol\":2179:2190  return true */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":1876:2198  function transferFrom(address from, address to, uint value) override external returns (bool) \r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":679:729  mapping(address => uint) override public balanceOf */\n    tag_27:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1722:1870  function transfer(address to, uint value) override external returns (bool) {\r... */\n    tag_31:\n        /* \"contracts/PoolContract.sol\":1791:1795  bool */\n      0x00\n        /* \"contracts/PoolContract.sol\":1808:1840  _transfer(msg.sender, to, value) */\n      tag_48\n        /* \"contracts/PoolContract.sol\":1818:1828  msg.sender */\n      caller\n        /* \"contracts/PoolContract.sol\":1830:1832  to */\n      dup5\n        /* \"contracts/PoolContract.sol\":1834:1839  value */\n      dup5\n        /* \"contracts/PoolContract.sol\":1808:1817  _transfer */\n      tag_46\n        /* \"contracts/PoolContract.sol\":1808:1840  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_48:\n        /* \"contracts/PoolContract.sol\":1858:1862  true */\n      0x01\n        /* \"contracts/PoolContract.sol\":1851:1862  return true */\n      swap1\n      pop\n        /* \"contracts/PoolContract.sol\":1722:1870  function transfer(address to, uint value) override external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":736:806  mapping(address => mapping(address => uint)) override public allowance */\n    tag_36:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1518:1687  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_40:\n        /* \"contracts/PoolContract.sol\":1627:1632  value */\n      dup1\n        /* \"contracts/PoolContract.sol\":1599:1608  allowance */\n      0x02\n        /* \"contracts/PoolContract.sol\":1599:1615  allowance[owner] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1609:1614  owner */\n      dup6\n        /* \"contracts/PoolContract.sol\":1599:1615  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1599:1624  allowance[owner][spender] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1616:1623  spender */\n      dup5\n        /* \"contracts/PoolContract.sol\":1599:1624  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1599:1632  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1664:1671  spender */\n      dup2\n        /* \"contracts/PoolContract.sol\":1648:1679  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":1657:1662  owner */\n      dup4\n        /* \"contracts/PoolContract.sol\":1648:1679  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/PoolContract.sol\":1673:1678  value */\n      dup4\n        /* \"contracts/PoolContract.sol\":1648:1679  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":1518:1687  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoolContract.sol\":1292:1512  function _transfer(address from, address to, uint value) private {\r... */\n    tag_46:\n        /* \"contracts/PoolContract.sol\":1386:1412  balanceOf[from].sub(value) */\n      tag_55\n        /* \"contracts/PoolContract.sol\":1406:1411  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":1386:1395  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1386:1401  balanceOf[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1396:1400  from */\n      dup7\n        /* \"contracts/PoolContract.sol\":1386:1401  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":1386:1405  balanceOf[from].sub */\n      tag_44\n      swap1\n        /* \"contracts/PoolContract.sol\":1386:1412  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_55:\n        /* \"contracts/PoolContract.sol\":1368:1377  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1368:1383  balanceOf[from] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1378:1382  from */\n      dup6\n        /* \"contracts/PoolContract.sol\":1368:1383  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1368:1412  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1439:1463  balanceOf[to].add(value) */\n      tag_56\n        /* \"contracts/PoolContract.sol\":1457:1462  value */\n      dup2\n        /* \"contracts/PoolContract.sol\":1439:1448  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1439:1452  balanceOf[to] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1449:1451  to */\n      dup6\n        /* \"contracts/PoolContract.sol\":1439:1452  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoolContract.sol\":1439:1456  balanceOf[to].add */\n      tag_57\n      swap1\n        /* \"contracts/PoolContract.sol\":1439:1463  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"contracts/PoolContract.sol\":1423:1432  balanceOf */\n      0x01\n        /* \"contracts/PoolContract.sol\":1423:1436  balanceOf[to] */\n      0x00\n        /* \"contracts/PoolContract.sol\":1433:1435  to */\n      dup5\n        /* \"contracts/PoolContract.sol\":1423:1436  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoolContract.sol\":1423:1463  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoolContract.sol\":1494:1496  to */\n      dup2\n        /* \"contracts/PoolContract.sol\":1479:1504  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoolContract.sol\":1488:1492  from */\n      dup4\n        /* \"contracts/PoolContract.sol\":1479:1504  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PoolContract.sol\":1498:1503  value */\n      dup4\n        /* \"contracts/PoolContract.sol\":1479:1504  Transfer(from, to, value) */\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoolContract.sol\":1292:1512  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_63:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_65\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_67:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_69\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_26:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":373:492   */\n    tag_72:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_75\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_63\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_35:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_78\n      tag_74\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":725:844   */\n    tag_77:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_79\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_63\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_80\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_63\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_21:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_83\n      tag_74\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1222:1341   */\n    tag_82:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_84\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_63\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_85\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_63\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_86\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_67\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_11:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_89\n      tag_74\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1830:1949   */\n    tag_88:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_90\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_63\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_91\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_67\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_92:\n        /* \"#utility.yul\":2298:2319   */\n      tag_94\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2450   */\n    tag_96:\n        /* \"#utility.yul\":2419:2443   */\n      tag_98\n        /* \"#utility.yul\":2437:2442   */\n      dup2\n        /* \"#utility.yul\":2419:2443   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2414:2417   */\n      dup3\n        /* \"#utility.yul\":2407:2444   */\n      mstore\n        /* \"#utility.yul\":2332:2450   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2666   */\n    tag_14:\n        /* \"#utility.yul\":2543:2547   */\n      0x00\n        /* \"#utility.yul\":2581:2583   */\n      0x20\n        /* \"#utility.yul\":2570:2579   */\n      dup3\n        /* \"#utility.yul\":2566:2584   */\n      add\n        /* \"#utility.yul\":2558:2584   */\n      swap1\n      pop\n        /* \"#utility.yul\":2594:2659   */\n      tag_101\n        /* \"#utility.yul\":2656:2657   */\n      0x00\n        /* \"#utility.yul\":2645:2654   */\n      dup4\n        /* \"#utility.yul\":2641:2658   */\n      add\n        /* \"#utility.yul\":2632:2638   */\n      dup5\n        /* \"#utility.yul\":2594:2659   */\n      tag_92\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2456:2666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2672:2894   */\n    tag_18:\n        /* \"#utility.yul\":2765:2769   */\n      0x00\n        /* \"#utility.yul\":2803:2805   */\n      0x20\n        /* \"#utility.yul\":2792:2801   */\n      dup3\n        /* \"#utility.yul\":2788:2806   */\n      add\n        /* \"#utility.yul\":2780:2806   */\n      swap1\n      pop\n        /* \"#utility.yul\":2816:2887   */\n      tag_103\n        /* \"#utility.yul\":2884:2885   */\n      0x00\n        /* \"#utility.yul\":2873:2882   */\n      dup4\n        /* \"#utility.yul\":2869:2886   */\n      add\n        /* \"#utility.yul\":2860:2866   */\n      dup5\n        /* \"#utility.yul\":2816:2887   */\n      tag_96\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2672:2894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2981:3286   */\n    tag_61:\n        /* \"#utility.yul\":3021:3024   */\n      0x00\n        /* \"#utility.yul\":3040:3060   */\n      tag_107\n        /* \"#utility.yul\":3058:3059   */\n      dup3\n        /* \"#utility.yul\":3040:3060   */\n      tag_99\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3035:3060   */\n      swap2\n      pop\n        /* \"#utility.yul\":3074:3094   */\n      tag_108\n        /* \"#utility.yul\":3092:3093   */\n      dup4\n        /* \"#utility.yul\":3074:3094   */\n      tag_99\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3069:3094   */\n      swap3\n      pop\n        /* \"#utility.yul\":3228:3229   */\n      dup3\n        /* \"#utility.yul\":3160:3226   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3156:3230   */\n      sub\n        /* \"#utility.yul\":3153:3154   */\n      dup3\n        /* \"#utility.yul\":3150:3231   */\n      gt\n        /* \"#utility.yul\":3147:3254   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":3234:3252   */\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3147:3254   */\n    tag_109:\n        /* \"#utility.yul\":3278:3279   */\n      dup3\n        /* \"#utility.yul\":3275:3276   */\n      dup3\n        /* \"#utility.yul\":3271:3280   */\n      add\n        /* \"#utility.yul\":3264:3280   */\n      swap1\n      pop\n        /* \"#utility.yul\":2981:3286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3292:3483   */\n    tag_53:\n        /* \"#utility.yul\":3332:3336   */\n      0x00\n        /* \"#utility.yul\":3352:3372   */\n      tag_113\n        /* \"#utility.yul\":3370:3371   */\n      dup3\n        /* \"#utility.yul\":3352:3372   */\n      tag_99\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3347:3372   */\n      swap2\n      pop\n        /* \"#utility.yul\":3386:3406   */\n      tag_114\n        /* \"#utility.yul\":3404:3405   */\n      dup4\n        /* \"#utility.yul\":3386:3406   */\n      tag_99\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3381:3406   */\n      swap3\n      pop\n        /* \"#utility.yul\":3425:3426   */\n      dup3\n        /* \"#utility.yul\":3422:3423   */\n      dup3\n        /* \"#utility.yul\":3419:3427   */\n      lt\n        /* \"#utility.yul\":3416:3450   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":3430:3448   */\n      tag_116\n      tag_111\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3416:3450   */\n    tag_115:\n        /* \"#utility.yul\":3475:3476   */\n      dup3\n        /* \"#utility.yul\":3472:3473   */\n      dup3\n        /* \"#utility.yul\":3468:3477   */\n      sub\n        /* \"#utility.yul\":3460:3477   */\n      swap1\n      pop\n        /* \"#utility.yul\":3292:3483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3489:3585   */\n    tag_117:\n        /* \"#utility.yul\":3526:3533   */\n      0x00\n        /* \"#utility.yul\":3555:3579   */\n      tag_119\n        /* \"#utility.yul\":3573:3578   */\n      dup3\n        /* \"#utility.yul\":3555:3579   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3544:3579   */\n      swap1\n      pop\n        /* \"#utility.yul\":3489:3585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3591:3681   */\n    tag_95:\n        /* \"#utility.yul\":3625:3632   */\n      0x00\n        /* \"#utility.yul\":3668:3673   */\n      dup2\n        /* \"#utility.yul\":3661:3674   */\n      iszero\n        /* \"#utility.yul\":3654:3675   */\n      iszero\n        /* \"#utility.yul\":3643:3675   */\n      swap1\n      pop\n        /* \"#utility.yul\":3591:3681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3687:3813   */\n    tag_120:\n        /* \"#utility.yul\":3724:3731   */\n      0x00\n        /* \"#utility.yul\":3764:3806   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3757:3762   */\n      dup3\n        /* \"#utility.yul\":3753:3807   */\n      and\n        /* \"#utility.yul\":3742:3807   */\n      swap1\n      pop\n        /* \"#utility.yul\":3687:3813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3819:3896   */\n    tag_99:\n        /* \"#utility.yul\":3856:3863   */\n      0x00\n        /* \"#utility.yul\":3885:3890   */\n      dup2\n        /* \"#utility.yul\":3874:3890   */\n      swap1\n      pop\n        /* \"#utility.yul\":3819:3896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3902:4082   */\n    tag_111:\n        /* \"#utility.yul\":3950:4027   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3947:3948   */\n      0x00\n        /* \"#utility.yul\":3940:4028   */\n      mstore\n        /* \"#utility.yul\":4047:4051   */\n      0x11\n        /* \"#utility.yul\":4044:4045   */\n      0x04\n        /* \"#utility.yul\":4037:4052   */\n      mstore\n        /* \"#utility.yul\":4071:4075   */\n      0x24\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4061:4076   */\n      revert\n        /* \"#utility.yul\":4211:4328   */\n    tag_74:\n        /* \"#utility.yul\":4320:4321   */\n      0x00\n        /* \"#utility.yul\":4317:4318   */\n      dup1\n        /* \"#utility.yul\":4310:4322   */\n      revert\n        /* \"#utility.yul\":4334:4456   */\n    tag_66:\n        /* \"#utility.yul\":4407:4431   */\n      tag_129\n        /* \"#utility.yul\":4425:4430   */\n      dup2\n        /* \"#utility.yul\":4407:4431   */\n      tag_117\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4400:4405   */\n      dup2\n        /* \"#utility.yul\":4397:4432   */\n      eq\n        /* \"#utility.yul\":4387:4450   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":4446:4447   */\n      0x00\n        /* \"#utility.yul\":4443:4444   */\n      dup1\n        /* \"#utility.yul\":4436:4448   */\n      revert\n        /* \"#utility.yul\":4387:4450   */\n    tag_130:\n        /* \"#utility.yul\":4334:4456   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4462:4584   */\n    tag_70:\n        /* \"#utility.yul\":4535:4559   */\n      tag_132\n        /* \"#utility.yul\":4553:4558   */\n      dup2\n        /* \"#utility.yul\":4535:4559   */\n      tag_99\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4528:4533   */\n      dup2\n        /* \"#utility.yul\":4525:4560   */\n      eq\n        /* \"#utility.yul\":4515:4578   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":4574:4575   */\n      0x00\n        /* \"#utility.yul\":4571:4572   */\n      dup1\n        /* \"#utility.yul\":4564:4576   */\n      revert\n        /* \"#utility.yul\":4515:4578   */\n    tag_133:\n        /* \"#utility.yul\":4462:4584   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f77e2282dc221ed2a086861080b8f498620d9e2fd95634277e00f3086854463464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610944806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063095ea7b31461006757806318160ddd1461009757806323b872dd146100b557806370a08231146100e5578063a9059cbb14610115578063dd62ed3e14610145575b600080fd5b610081600480360381019061007c9190610746565b610175565b60405161008e91906107a4565b60405180910390f35b61009f61018c565b6040516100ac91906107bf565b60405180910390f35b6100cf60048036038101906100ca91906106f3565b610192565b6040516100dc91906107a4565b60405180910390f35b6100ff60048036038101906100fa9190610686565b61035d565b60405161010c91906107bf565b60405180910390f35b61012f600480360381019061012a9190610746565b610375565b60405161013c91906107a4565b60405180910390f35b61015f600480360381019061015a91906106b3565b61038c565b60405161016c91906107bf565b60405180910390f35b60006101823384846103b1565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610347576102c682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461049c90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6103528484846104b2565b600190509392505050565b60016020528060005260406000206000915090505481565b60006103823384846104b2565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161048f91906107bf565b60405180910390a3505050565b600081836104aa9190610830565b905092915050565b61050481600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461049c90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061059981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461064690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161063991906107bf565b60405180910390a3505050565b6000818361065491906107da565b905092915050565b60008135905061066b816108e0565b92915050565b600081359050610680816108f7565b92915050565b60006020828403121561069c5761069b6108db565b5b60006106aa8482850161065c565b91505092915050565b600080604083850312156106ca576106c96108db565b5b60006106d88582860161065c565b92505060206106e98582860161065c565b9150509250929050565b60008060006060848603121561070c5761070b6108db565b5b600061071a8682870161065c565b935050602061072b8682870161065c565b925050604061073c86828701610671565b9150509250925092565b6000806040838503121561075d5761075c6108db565b5b600061076b8582860161065c565b925050602061077c85828601610671565b9150509250929050565b61078f81610876565b82525050565b61079e816108a2565b82525050565b60006020820190506107b96000830184610786565b92915050565b60006020820190506107d46000830184610795565b92915050565b60006107e5826108a2565b91506107f0836108a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610825576108246108ac565b5b828201905092915050565b600061083b826108a2565b9150610846836108a2565b925082821015610859576108586108ac565b5b828203905092915050565b600061086f82610882565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6108e981610864565b81146108f457600080fd5b50565b610900816108a2565b811461090b57600080fd5b5056fea2646970667358221220f77e2282dc221ed2a086861080b8f498620d9e2fd95634277e00f3086854463464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x944 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x145 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x182 CALLER DUP5 DUP5 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x347 JUMPI PUSH2 0x2C6 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x49C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x352 DUP5 DUP5 DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 CALLER DUP5 DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x504 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x49C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x599 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66B DUP2 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69C JUMPI PUSH2 0x69B PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AA DUP5 DUP3 DUP6 ADD PUSH2 0x65C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D8 DUP6 DUP3 DUP7 ADD PUSH2 0x65C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6E9 DUP6 DUP3 DUP7 ADD PUSH2 0x65C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP7 DUP3 DUP8 ADD PUSH2 0x65C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x72B DUP7 DUP3 DUP8 ADD PUSH2 0x65C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x73C DUP7 DUP3 DUP8 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75D JUMPI PUSH2 0x75C PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76B DUP6 DUP3 DUP7 ADD PUSH2 0x65C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x77C DUP6 DUP3 DUP7 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x78F DUP2 PUSH2 0x876 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x79E DUP2 PUSH2 0x8A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x786 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 DUP3 PUSH2 0x8A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP4 PUSH2 0x8A2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x825 JUMPI PUSH2 0x824 PUSH2 0x8AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83B DUP3 PUSH2 0x8A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x846 DUP4 PUSH2 0x8A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x859 JUMPI PUSH2 0x858 PUSH2 0x8AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F DUP3 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x864 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x8A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH31 0x2282DC221ED2A086861080B8F498620D9E2FD95634277E00F3086854463464 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "417:1946:0:-:0;;;817:16;;;;;;;;;;417:1946;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_169": {
									"entryPoint": 945,
									"id": 169,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_145": {
									"entryPoint": 1202,
									"id": 145,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1957": {
									"entryPoint": 1606,
									"id": 1957,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_33": {
									"entryPoint": 908,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_261": {
									"entryPoint": 373,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_26": {
									"entryPoint": 861,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1972": {
									"entryPoint": 1180,
									"id": 1972,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_21": {
									"entryPoint": 396,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_241": {
									"entryPoint": 402,
									"id": 241,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_189": {
									"entryPoint": 885,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4587:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:4"
															},
															"nodeType": "YulIf",
															"src": "725:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:4",
														"type": ""
													}
												],
												"src": "632:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:4"
															},
															"nodeType": "YulIf",
															"src": "1222:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:4",
														"type": ""
													}
												],
												"src": "1112:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1737:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:4",
														"type": ""
													}
												],
												"src": "2217:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2397:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2414:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2437:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2419:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2419:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2407:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2407:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2407:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2385:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2392:3:4",
														"type": ""
													}
												],
												"src": "2332:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2558:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2570:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2581:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2632:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2656:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2594:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2594:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2520:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2532:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2543:4:4",
														"type": ""
													}
												],
												"src": "2456:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2780:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2792:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2803:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2788:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2788:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2780:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2860:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2873:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2884:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2869:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2869:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2816:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2816:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2742:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2765:4:4",
														"type": ""
													}
												],
												"src": "2672:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2940:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2950:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2966:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2960:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2933:6:4",
														"type": ""
													}
												],
												"src": "2900:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3025:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3035:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3058:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3040:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3035:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3069:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3092:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3074:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3069:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3232:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3234:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3234:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3234:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3153:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3160:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3228:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3156:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3156:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3150:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3150:81:4"
															},
															"nodeType": "YulIf",
															"src": "3147:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3264:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3275:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3278:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3264:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3012:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3015:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3021:3:4",
														"type": ""
													}
												],
												"src": "2981:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3337:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3347:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3370:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3352:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3347:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3381:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3404:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3386:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3381:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3428:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3430:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3430:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3430:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3422:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3425:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3419:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:8:4"
															},
															"nodeType": "YulIf",
															"src": "3416:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3460:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3472:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3475:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3468:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3460:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3323:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3326:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3332:4:4",
														"type": ""
													}
												],
												"src": "3292:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3534:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3544:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3573:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3555:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3544:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3516:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3526:7:4",
														"type": ""
													}
												],
												"src": "3489:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3633:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3643:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3668:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3661:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3661:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3643:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3615:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3625:7:4",
														"type": ""
													}
												],
												"src": "3591:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3732:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3742:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3757:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3742:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3714:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3724:7:4",
														"type": ""
													}
												],
												"src": "3687:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3864:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3874:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3885:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3874:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3846:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3856:7:4",
														"type": ""
													}
												],
												"src": "3819:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3930:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3947:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3940:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3940:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4047:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4037:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4037:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4061:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4061:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4061:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3902:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4187:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4088:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4310:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4377:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4434:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4443:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4446:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4436:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4436:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4436:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4400:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4425:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4407:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4407:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4397:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4397:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:43:4"
															},
															"nodeType": "YulIf",
															"src": "4387:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4370:5:4",
														"type": ""
													}
												],
												"src": "4334:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4505:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4562:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4571:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4574:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4564:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4564:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4564:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4528:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4553:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4535:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4535:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4525:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4525:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4518:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:43:4"
															},
															"nodeType": "YulIf",
															"src": "4515:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4498:5:4",
														"type": ""
													}
												],
												"src": "4462:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063095ea7b31461006757806318160ddd1461009757806323b872dd146100b557806370a08231146100e5578063a9059cbb14610115578063dd62ed3e14610145575b600080fd5b610081600480360381019061007c9190610746565b610175565b60405161008e91906107a4565b60405180910390f35b61009f61018c565b6040516100ac91906107bf565b60405180910390f35b6100cf60048036038101906100ca91906106f3565b610192565b6040516100dc91906107a4565b60405180910390f35b6100ff60048036038101906100fa9190610686565b61035d565b60405161010c91906107bf565b60405180910390f35b61012f600480360381019061012a9190610746565b610375565b60405161013c91906107a4565b60405180910390f35b61015f600480360381019061015a91906106b3565b61038c565b60405161016c91906107bf565b60405180910390f35b60006101823384846103b1565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610347576102c682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461049c90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6103528484846104b2565b600190509392505050565b60016020528060005260406000206000915090505481565b60006103823384846104b2565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161048f91906107bf565b60405180910390a3505050565b600081836104aa9190610830565b905092915050565b61050481600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461049c90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061059981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461064690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161063991906107bf565b60405180910390a3505050565b6000818361065491906107da565b905092915050565b60008135905061066b816108e0565b92915050565b600081359050610680816108f7565b92915050565b60006020828403121561069c5761069b6108db565b5b60006106aa8482850161065c565b91505092915050565b600080604083850312156106ca576106c96108db565b5b60006106d88582860161065c565b92505060206106e98582860161065c565b9150509250929050565b60008060006060848603121561070c5761070b6108db565b5b600061071a8682870161065c565b935050602061072b8682870161065c565b925050604061073c86828701610671565b9150509250925092565b6000806040838503121561075d5761075c6108db565b5b600061076b8582860161065c565b925050602061077c85828601610671565b9150509250929050565b61078f81610876565b82525050565b61079e816108a2565b82525050565b60006020820190506107b96000830184610786565b92915050565b60006020820190506107d46000830184610795565b92915050565b60006107e5826108a2565b91506107f0836108a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610825576108246108ac565b5b828201905092915050565b600061083b826108a2565b9150610846836108a2565b925082821015610859576108586108ac565b5b828203905092915050565b600061086f82610882565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6108e981610864565b81146108f457600080fd5b50565b610900816108a2565b811461090b57600080fd5b5056fea2646970667358221220f77e2282dc221ed2a086861080b8f498620d9e2fd95634277e00f3086854463464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x145 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x182 CALLER DUP5 DUP5 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x347 JUMPI PUSH2 0x2C6 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x49C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x352 DUP5 DUP5 DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 CALLER DUP5 DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x48F SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x830 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x504 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x49C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x599 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x646 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66B DUP2 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x680 DUP2 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69C JUMPI PUSH2 0x69B PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AA DUP5 DUP3 DUP6 ADD PUSH2 0x65C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CA JUMPI PUSH2 0x6C9 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D8 DUP6 DUP3 DUP7 ADD PUSH2 0x65C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6E9 DUP6 DUP3 DUP7 ADD PUSH2 0x65C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP7 DUP3 DUP8 ADD PUSH2 0x65C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x72B DUP7 DUP3 DUP8 ADD PUSH2 0x65C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x73C DUP7 DUP3 DUP8 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75D JUMPI PUSH2 0x75C PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76B DUP6 DUP3 DUP7 ADD PUSH2 0x65C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x77C DUP6 DUP3 DUP7 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x78F DUP2 PUSH2 0x876 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x79E DUP2 PUSH2 0x8A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x786 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 DUP3 PUSH2 0x8A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP4 PUSH2 0x8A2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x825 JUMPI PUSH2 0x824 PUSH2 0x8AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83B DUP3 PUSH2 0x8A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x846 DUP4 PUSH2 0x8A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x859 JUMPI PUSH2 0x858 PUSH2 0x8AC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86F DUP3 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x864 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x8A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH31 0x2282DC221ED2A086861080B8F498620D9E2FD95634277E00F3086854463464 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "417:1946:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;640:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1876:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;679:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1722:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;736:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2204:156;2277:4;2294:36;2303:10;2315:7;2324:5;2294:8;:36::i;:::-;2348:4;2341:11;;2204:156;;;;:::o;640:32::-;;;;:::o;1876:322::-;1963:4;2021:14;1990:9;:15;2000:4;1990:15;;;;;;;;;;;;;;;:27;2006:10;1990:27;;;;;;;;;;;;;;;;:45;1986:146;;2082:38;2114:5;2082:9;:15;2092:4;2082:15;;;;;;;;;;;;;;;:27;2098:10;2082:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2052:9;:15;2062:4;2052:15;;;;;;;;;;;;;;;:27;2068:10;2052:27;;;;;;;;;;;;;;;:68;;;;1986:146;2142:26;2152:4;2158:2;2162:5;2142:9;:26::i;:::-;2186:4;2179:11;;1876:322;;;;;:::o;679:50::-;;;;;;;;;;;;;;;;;:::o;1722:148::-;1791:4;1808:32;1818:10;1830:2;1834:5;1808:9;:32::i;:::-;1858:4;1851:11;;1722:148;;;;:::o;736:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1518:169::-;1627:5;1599:9;:16;1609:5;1599:16;;;;;;;;;;;;;;;:25;1616:7;1599:25;;;;;;;;;;;;;;;:33;;;;1664:7;1648:31;;1657:5;1648:31;;;1673:5;1648:31;;;;;;:::i;:::-;;;;;;;;1518:169;;;:::o;3122:96:3:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;1292:220:0:-;1386:26;1406:5;1386:9;:15;1396:4;1386:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1368:9;:15;1378:4;1368:15;;;;;;;;;;;;;;;:44;;;;1439:24;1457:5;1439:9;:13;1449:2;1439:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1423:9;:13;1433:2;1423:13;;;;;;;;;;;;;;;:40;;;;1494:2;1479:25;;1488:4;1479:25;;;1498:5;1479:25;;;;;;:::i;:::-;;;;;;;;1292:220;;;:::o;2755:96:3:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:118::-;2419:24;2437:5;2419:24;:::i;:::-;2414:3;2407:37;2332:118;;:::o;2456:210::-;2543:4;2581:2;2570:9;2566:18;2558:26;;2594:65;2656:1;2645:9;2641:17;2632:6;2594:65;:::i;:::-;2456:210;;;;:::o;2672:222::-;2765:4;2803:2;2792:9;2788:18;2780:26;;2816:71;2884:1;2873:9;2869:17;2860:6;2816:71;:::i;:::-;2672:222;;;;:::o;2981:305::-;3021:3;3040:20;3058:1;3040:20;:::i;:::-;3035:25;;3074:20;3092:1;3074:20;:::i;:::-;3069:25;;3228:1;3160:66;3156:74;3153:1;3150:81;3147:107;;;3234:18;;:::i;:::-;3147:107;3278:1;3275;3271:9;3264:16;;2981:305;;;;:::o;3292:191::-;3332:4;3352:20;3370:1;3352:20;:::i;:::-;3347:25;;3386:20;3404:1;3386:20;:::i;:::-;3381:25;;3425:1;3422;3419:8;3416:34;;;3430:18;;:::i;:::-;3416:34;3475:1;3472;3468:9;3460:17;;3292:191;;;;:::o;3489:96::-;3526:7;3555:24;3573:5;3555:24;:::i;:::-;3544:35;;3489:96;;;:::o;3591:90::-;3625:7;3668:5;3661:13;3654:21;3643:32;;3591:90;;;:::o;3687:126::-;3724:7;3764:42;3757:5;3753:54;3742:65;;3687:126;;;:::o;3819:77::-;3856:7;3885:5;3874:16;;3819:77;;;:::o;3902:180::-;3950:77;3947:1;3940:88;4047:4;4044:1;4037:15;4071:4;4068:1;4061:15;4211:117;4320:1;4317;4310:12;4334:122;4407:24;4425:5;4407:24;:::i;:::-;4400:5;4397:35;4387:63;;4446:1;4443;4436:12;4387:63;4334:122;:::o;4462:::-;4535:24;4553:5;4535:24;:::i;:::-;4528:5;4525:35;4515:63;;4574:1;4571;4564:12;4515:63;4462:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "474400",
								"executionCost": "511",
								"totalCost": "474911"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2858",
								"totalSupply()": "2429",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 417,
									"end": 2363,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 833,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 833,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 833,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 833,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 2363,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f77e2282dc221ed2a086861080b8f498620d9e2fd95634277e00f3086854463464736f6c63430008070033",
									".code": [
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 417,
											"end": 2363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2277,
											"end": 2281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2303,
											"end": 2313,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2322,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2341,
											"end": 2352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 1967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2005,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2016,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2097,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2108,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2082,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2082,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2078,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1986,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2142,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2179,
											"end": 2190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 2198,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1818,
											"end": 1828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1839,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 806,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1614,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1615,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1673,
											"end": 1678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1386,
											"end": 1405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1386,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1382,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1498,
											"end": 1503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2332,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2444,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2450,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2456,
											"end": 2666,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2456,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2594,
											"end": 2659,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2594,
											"end": 2659,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2594,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2666,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2666,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 2894,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2672,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2816,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 2882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2816,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2816,
											"end": 2887,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 2887,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2816,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2894,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2894,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2981,
											"end": 3286,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2981,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3040,
											"end": 3060,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3060,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3040,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3035,
											"end": 3060,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3035,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3150,
											"end": 3231,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3254,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3147,
											"end": 3254,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3254,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3147,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3264,
											"end": 3280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3264,
											"end": 3280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3286,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3286,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3292,
											"end": 3483,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3292,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3352,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3347,
											"end": 3372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3404,
											"end": 3405,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3386,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3427,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3450,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3416,
											"end": 3450,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3450,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3416,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3483,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3483,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3489,
											"end": 3585,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3489,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3533,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3555,
											"end": 3579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3555,
											"end": 3579,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3555,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3585,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3585,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3591,
											"end": 3681,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3591,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3661,
											"end": 3674,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3675,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3681,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3681,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3591,
											"end": 3681,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3687,
											"end": 3813,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3687,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3806,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3753,
											"end": 3807,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3742,
											"end": 3807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3742,
											"end": 3807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3813,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3819,
											"end": 3896,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3819,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3874,
											"end": 3890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3896,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3902,
											"end": 4082,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3902,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 4028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4051,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4037,
											"end": 4052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4076,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4211,
											"end": 4328,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4211,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4334,
											"end": 4456,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4334,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4425,
											"end": 4430,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4407,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4400,
											"end": 4405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4432,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4448,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4387,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4334,
											"end": 4456,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4334,
											"end": 4456,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4462,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4462,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4553,
											"end": 4558,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4535,
											"end": 4559,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4535,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4535,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4528,
											"end": 4533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4560,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4515,
											"end": 4578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4564,
											"end": 4576,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4515,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4584,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoolContract.sol\":\"LiquidityToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PoolContract.sol\":{\"keccak256\":\"0xb98fd9e8dbd044870aca05908c6e92584c0ff2cd9d2cb0599bdae5855e360abe\",\"urls\":[\"bzz-raw://c73d36a3bf618a01be0632c0f0c2fe19b342a5e8730834d29b3b6e54c9193a17\",\"dweb:/ipfs/QmPBaYgKCvG5mgxCbMmUUFR2veeFbDR9MQUneL7H1YyXdu\"]},\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 21,
								"contract": "contracts/PoolContract.sol:LiquidityToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "contracts/PoolContract.sol:LiquidityToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 33,
								"contract": "contracts/PoolContract.sol:LiquidityToken",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":202:12491  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":202:12491  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfae40f10796d024c4f390ae7cb914ec1df2291f01193bd76e59362d529d040164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfae40f10796d024c4f390ae7cb914ec1df2291f01193bd76e59362d529d040164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xAE BLOCKHASH CALL SMOD SWAP7 0xD0 0x24 0xC4 RETURN SWAP1 0xAE PUSH29 0xB914EC1DF2291F01193BD76E59362D529D040164736F6C634300080700 CALLER ",
							"sourceMap": "202:12289:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfae40f10796d024c4f390ae7cb914ec1df2291f01193bd76e59362d529d040164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xAE BLOCKHASH CALL SMOD SWAP7 0xD0 0x24 0xC4 RETURN SWAP1 0xAE PUSH29 0xB914EC1DF2291F01193BD76E59362D529D040164736F6C634300080700 CALLER ",
							"sourceMap": "202:12289:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 202,
									"end": 12491,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfae40f10796d024c4f390ae7cb914ec1df2291f01193bd76e59362d529d040164736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 12491,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203b18888ca699d124bac18517ba418ae95e8b5709f59f0bee73d2bad080c36c4364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b18888ca699d124bac18517ba418ae95e8b5709f59f0bee73d2bad080c36c4364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE XOR DUP9 DUP13 0xA6 SWAP10 0xD1 0x24 0xBA 0xC1 DUP6 OR 0xBA COINBASE DUP11 0xE9 0x5E DUP12 JUMPI MULMOD CREATE2 SWAP16 SIGNEXTEND 0xEE PUSH20 0xD2BAD080C36C4364736F6C634300080700330000 ",
							"sourceMap": "482:6210:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b18888ca699d124bac18517ba418ae95e8b5709f59f0bee73d2bad080c36c4364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE XOR DUP9 DUP13 0xA6 SWAP10 0xD1 0x24 0xBA 0xC1 DUP6 OR 0xBA COINBASE DUP11 0xE9 0x5E DUP12 JUMPI MULMOD CREATE2 SWAP16 SIGNEXTEND 0xEE PUSH20 0xD2BAD080C36C4364736F6C634300080700330000 ",
							"sourceMap": "482:6210:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b18888ca699d124bac18517ba418ae95e8b5709f59f0bee73d2bad080c36c4364736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/PoolContract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/PoolContract.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/PoolContract.sol:119:10:\n    |\n119 |         (uint reserve0, uint reserve1) = getReserves();\n    |          ^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4665,
					"file": "contracts/PoolContract.sol",
					"start": 4652
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/PoolContract.sol:119:25:\n    |\n119 |         (uint reserve0, uint reserve1) = getReserves();\n    |                         ^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4680,
					"file": "contracts/PoolContract.sol",
					"start": 4667
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/PoolContract.sol:136:19:\n    |\n136 |     function swap(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) external {\n    |                   ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5473,
					"file": "contracts/PoolContract.sol",
					"start": 5458
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/PoolContract.sol:136:54:\n    |\n136 |     function swap(address tokenIn, address tokenOut, uint amountIn, uint amountOut, address to) external {\n    |                                                      ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5506,
					"file": "contracts/PoolContract.sol",
					"start": 5493
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/PoolContract.sol": {
				"ast": {
					"absolutePath": "contracts/PoolContract.sol",
					"exportedSymbols": {
						"IERC20": [
							915
						],
						"LiquidityPool": [
							837
						],
						"LiquidityToken": [
							262
						],
						"Math": [
							1781
						],
						"SafeMath": [
							2093
						]
					},
					"id": 838,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 838,
							"sourceUnit": 916,
							"src": "27:96:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 838,
							"sourceUnit": 2094,
							"src": "125:97:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 838,
							"sourceUnit": 1782,
							"src": "224:93:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 915,
										"src": "444:6:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "444:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 262,
							"linearizedBaseContracts": [
								262,
								915
							],
							"name": "LiquidityToken",
							"nameLocation": "426:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 9,
									"libraryName": {
										"id": 7,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2093,
										"src": "464:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "458:24:0",
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "477:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "_name",
									"nameLocation": "514:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 262,
									"src": "490:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 10,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "490:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "555a48204c6971756964747920506f6f6c",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "522:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9299c42b91652c3fb423a5a303553cf523198e589eac2f43652a3bb723a5bb60",
											"typeString": "literal_string \"UZH Liquidty Pool\""
										},
										"value": "UZH Liquidty Pool"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 15,
									"mutability": "constant",
									"name": "_symbol",
									"nameLocation": "572:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 262,
									"src": "548:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 13,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "548:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "555a482d4c50",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "582:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_3b9be237b14e4d4253a89b923d7153a597ecd4d2c619b8ae27c35e336174aa59",
											"typeString": "literal_string \"UZH-LP\""
										},
										"value": "UZH-LP"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 18,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "620:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 262,
									"src": "597:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 16,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "597:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "631:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										864
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 21,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "661:11:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 20,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "645:8:0"
									},
									"scope": 262,
									"src": "640:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "640:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										872
									],
									"constant": false,
									"functionSelector": "70a08231",
									"id": 26,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "720:9:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 25,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "704:8:0"
									},
									"scope": 262,
									"src": "679:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "687:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "679:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 23,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "698:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										892
									],
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 33,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "797:9:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 32,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "781:8:0"
									},
									"scope": 262,
									"src": "736:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "744:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "736:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 30,
											"keyType": {
												"id": 28,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "763:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "755:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 29,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "774:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "831:2:0",
										"statements": []
									},
									"id": 37,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:0:0"
									},
									"scope": 262,
									"src": "817:16:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "918:153:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 44,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "929:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 47,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "959:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 45,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "943:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "943:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "943:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "929:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "929:36:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 51,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "976:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 53,
														"indexExpression": {
															"id": 52,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "986:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "976:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 58,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "1010:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 54,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "992:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 56,
																"indexExpression": {
																	"id": 55,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1002:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "992:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "992:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "992:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "976:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "976:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1049:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1041:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 63,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1041:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1041:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 67,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "1053:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 68,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1057:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 62,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "1032:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1032:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "EmitStatement",
												"src": "1027:36:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "879:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "893:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "885:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "902:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "897:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "897:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:24:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:0"
									},
									"scope": 262,
									"src": "870:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1127:159:0",
										"statements": [
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 79,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1138:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 81,
														"indexExpression": {
															"id": 80,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1148:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1138:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 86,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "1176:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 82,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1156:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 84,
																"indexExpression": {
																	"id": 83,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "1166:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1156:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "1156:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1156:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1138:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1138:44:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1193:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 93,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "1223:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 91,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "1207:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "1207:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1207:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1193:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1193:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1254:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1268:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1260:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 99,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1260:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1260:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1272:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 97,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "1245:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1245:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "EmitStatement",
												"src": "1240:38:0"
											}
										]
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1086:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:26:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:0"
									},
									"scope": 262,
									"src": "1077:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1357:155:0",
										"statements": [
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 116,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1368:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 118,
														"indexExpression": {
															"id": 117,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1368:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 123,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1406:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 119,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1386:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 121,
																"indexExpression": {
																	"id": 120,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "1396:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1386:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "1386:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1386:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1368:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1368:44:0"
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 127,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1423:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 129,
														"indexExpression": {
															"id": 128,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1433:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1423:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 134,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1457:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 130,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1439:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 132,
																"indexExpression": {
																	"id": 131,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1449:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1439:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "1439:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1439:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1423:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1423:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 139,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1488:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1494:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1498:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 138,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "1479:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "EmitStatement",
												"src": "1474:30:0"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "1301:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1333:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1325:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1342:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1337:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1337:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:38:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1357:0:0"
									},
									"scope": 262,
									"src": "1292:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1588:99:0",
										"statements": [
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 154,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "1599:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 157,
															"indexExpression": {
																"id": 155,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "1609:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1599:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 156,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1616:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1599:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "1627:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1599:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1599:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 163,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 164,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1673:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 162,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1648:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1648:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "EmitStatement",
												"src": "1643:36:0"
											}
										]
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "1527:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1544:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1536:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1559:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1551:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1573:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1568:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:44:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1588:0:0"
									},
									"scope": 262,
									"src": "1518:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										882
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1797:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 180,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1818:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1830:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1834:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 179,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1808:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "1808:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 187,
												"nodeType": "Return",
												"src": "1851:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1731:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1764:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1748:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1740:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1757:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1752:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:24:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1791:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:6:0"
									},
									"scope": 262,
									"src": "1722:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										914
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1975:223:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 201,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "1990:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 203,
															"indexExpression": {
																"id": 202,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2000:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1990:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 206,
														"indexExpression": {
															"expression": {
																"id": 204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2006:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2006:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1990:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2026:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 208,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2026:4:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 207,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2021:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2021:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2021:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1990:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "IfStatement",
												"src": "1986:146:0",
												"trueBody": {
													"id": 230,
													"nodeType": "Block",
													"src": "2037:95:0",
													"statements": [
														{
															"expression": {
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 213,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 33,
																			"src": "2052:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 217,
																		"indexExpression": {
																			"id": 214,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "2062:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2052:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 218,
																	"indexExpression": {
																		"expression": {
																			"id": 215,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2068:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2068:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2052:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 226,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "2114:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 219,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 33,
																					"src": "2082:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 221,
																				"indexExpression": {
																					"id": 220,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "2092:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2082:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 224,
																			"indexExpression": {
																				"expression": {
																					"id": 222,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2098:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2098:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2082:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1972,
																		"src": "2082:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2082:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2052:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 229,
															"nodeType": "ExpressionStatement",
															"src": "2052:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2158:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "2162:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2142:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2142:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 200,
												"id": 239,
												"nodeType": "Return",
												"src": "2179:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1885:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1936:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1920:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1912:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1929:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1924:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:38:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1963:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:6:0"
									},
									"scope": 262,
									"src": "1876:322:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "2283:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 252,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2303:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2303:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2324:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2294:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2294:36:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2348:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 250,
												"id": 259,
												"nodeType": "Return",
												"src": "2341:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2213:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 247,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2250:8:0"
									},
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2229:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2243:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2238:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:29:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2277:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2277:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2276:6:0"
									},
									"scope": 262,
									"src": "2204:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 838,
							"src": "417:1946:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 263,
										"name": "LiquidityToken",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 262,
										"src": "2395:14:0"
									},
									"id": 264,
									"nodeType": "InheritanceSpecifier",
									"src": "2395:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 837,
							"linearizedBaseContracts": [
								837,
								262,
								915
							],
							"name": "LiquidityPool",
							"nameLocation": "2378:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 267,
									"libraryName": {
										"id": 265,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2093,
										"src": "2423:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "2417:24:0",
									"typeName": {
										"id": 266,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2436:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 269,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "2462:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "2447:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2447:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 271,
									"mutability": "immutable",
									"name": "factory",
									"nameLocation": "2501:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "2476:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2476:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f887ea40",
									"id": 273,
									"mutability": "mutable",
									"name": "router",
									"nameLocation": "2530:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "2515:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2515:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 275,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "2568:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "2543:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 274,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2543:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 277,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "2606:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "2581:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 276,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2581:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_reserve0",
									"nameLocation": "2634:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "2621:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2621:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "_reserve1",
									"nameLocation": "2663:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 837,
									"src": "2650:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 280,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2650:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 289,
									"name": "Mint",
									"nameLocation": "2689:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2710:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2694:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2723:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2718:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2732:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2732:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:52:0"
									},
									"src": "2683:63:0"
								},
								{
									"anonymous": false,
									"id": 299,
									"name": "Burn",
									"nameLocation": "2758:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2763:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2787:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2806:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2801:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2801:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2831:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2815:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2762:72:0"
									},
									"src": "2752:83:0"
								},
								{
									"anonymous": false,
									"id": 313,
									"name": "Swap",
									"nameLocation": "2847:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2852:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "2881:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2876:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "2897:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2892:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2913:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2930:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2925:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2958:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2942:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2851:110:0"
									},
									"src": "2841:121:0"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3073:143:0",
										"statements": [
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "3084:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 327,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3084:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "3084:14:0"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 330,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 331,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "3119:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3109:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "3109:18:0"
											},
											{
												"expression": {
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 334,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3138:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 335,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3138:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3138:16:0"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "3165:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 339,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "3174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3165:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "3165:16:0"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "3192:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 343,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "3201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3192:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "3192:16:0"
											}
										]
									},
									"id": 347,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "2996:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "3012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "3030:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3022:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "3047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "3064:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:85:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3073:0:0"
									},
									"scope": 837,
									"src": "2976:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "3318:989:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 355,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3399:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3399:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 357,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "3413:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3399:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "504f4f4c3a204163636573732064656e696564",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3421:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
																"typeString": "literal_string \"POOL: Access denied\""
															},
															"value": "POOL: Access denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
																"typeString": "literal_string \"POOL: Access denied\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3391:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "3391:52:0"
											},
											{
												"assignments": [
													363,
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "3539:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "3534:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 362,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "3554:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "3549:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3549:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 366,
														"name": "getBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "3566:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3566:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3533:46:0"
											},
											{
												"assignments": [
													370,
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "3596:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "3591:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 369,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3591:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "3611:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "3606:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 371,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 373,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "3623:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3590:46:0"
											},
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "amount0",
														"nameLocation": "3652:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "3647:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 376,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3647:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [
														{
															"id": 380,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3675:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 378,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3662:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1972,
														"src": "3662:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3647:37:0"
											},
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "amount1",
														"nameLocation": "3700:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "3695:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 383,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"id": 387,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3723:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 385,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3710:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1972,
														"src": "3710:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3710:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "3808:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3808:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "3902:121:0",
													"statements": [
														{
															"expression": {
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 404,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3917:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 409,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 21,
																						"src": "3950:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 407,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 377,
																						"src": "3938:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1987,
																					"src": "3938:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3938:24:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 411,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "3965:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3938:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 415,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 21,
																						"src": "3987:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 413,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 384,
																						"src": "3975:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1987,
																					"src": "3975:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3975:24:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 417,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "4002:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3975:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 405,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "3929:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1781_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 958,
																		"src": "3929:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3929:82:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3917:94:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "3917:94:0"
														}
													]
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "3804:219:0",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "3826:70:0",
													"statements": [
														{
															"expression": {
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 393,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3841:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 398,
																					"name": "amount1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "3875:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 396,
																					"name": "amount0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 377,
																					"src": "3863:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1987,
																				"src": "3863:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3863:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 394,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "3853:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1781_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sqrt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1285,
																		"src": "3853:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3853:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3841:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 402,
															"nodeType": "ExpressionStatement",
															"src": "3841:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "4041:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4053:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4041:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "504f4f4c3a20496e73756666696369656e74206c6971756964697479206d696e746564",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4056:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1",
																"typeString": "literal_string \"POOL: Insufficient liquidity minted\""
															},
															"value": "POOL: Insufficient liquidity minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0189fd9165a7b254080d76b68b9d5968f745b26ca3db333f3816e41ce738ffc1",
																"typeString": "literal_string \"POOL: Insufficient liquidity minted\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4033:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "4033:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "4145:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4149:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 431,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "4139:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4139:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4139:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 437,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "4230:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 438,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4240:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4222:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4222:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "4222:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 442,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4270:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4270:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4282:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "4291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "4265:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4265:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "4260:39:0"
											}
										]
									},
									"functionSelector": "6a627842",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "3267:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3280:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3272:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3271:12:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3307:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "3302:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:16:0"
									},
									"scope": 837,
									"src": "3258:1049:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "4422:976:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 459,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4503:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4503:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 461,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "4517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4503:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "504f4f4c3a204163636573732064656e696564",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4525:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
																"typeString": "literal_string \"POOL: Access denied\""
															},
															"value": "POOL: Access denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
																"typeString": "literal_string \"POOL: Access denied\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4495:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "4495:52:0"
											},
											{
												"assignments": [
													467,
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "4600:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "4595:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4595:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "4615:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "4610:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 468,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4610:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 470,
														"name": "getBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "4627:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4594:46:0"
											},
											{
												"assignments": [
													474,
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "4657:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "4652:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 473,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4652:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "4672:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "4667:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 475,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4667:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 477,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "4684:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4684:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4651:46:0"
											},
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "4713:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "4708:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 480,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"baseExpression": {
														"id": 482,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "4725:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 487,
													"indexExpression": {
														"arguments": [
															{
																"id": 485,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4743:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LiquidityPool_$837",
																	"typeString": "contract LiquidityPool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_LiquidityPool_$837",
																	"typeString": "contract LiquidityPool"
																}
															],
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 483,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4735:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4735:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4725:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4708:41:0"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 489,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "4820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 492,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "4844:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 490,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "4830:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1987,
																"src": "4830:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4830:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 494,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4856:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4830:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4820:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "4820:47:0"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 498,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "4878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 501,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4902:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 499,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "4888:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1987,
																"src": "4888:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4888:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 503,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4914:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4888:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4878:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "4878:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 508,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "4944:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4954:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4944:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 511,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "4959:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4969:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4959:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4944:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "504f4f4c3a20496e73756666696369656e74206c6971756964697479206275726e6564",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4972:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06",
																"typeString": "literal_string \"POOL: Insufficient liquidity burned\""
															},
															"value": "POOL: Insufficient liquidity burned"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8820400d841ae90ae805d0fa9f39bb36a5ccd8ef235f1f722f117c47e86daf06",
																"typeString": "literal_string \"POOL: Insufficient liquidity burned\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4936:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "4936:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 521,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5090:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$837",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$837",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5082:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 519,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5082:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5082:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "5097:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "5076:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5076:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "5076:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5142:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 527,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "5125:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 526,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "5118:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$915_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "5118:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5118:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "5118:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 538,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5189:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5172:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 534,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "5165:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$915_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5165:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "5165:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5165:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "5165:36:0"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 542,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "5263:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 543,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "5273:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 544,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5262:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 545,
															"name": "getBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5285:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function () view returns (uint256,uint256)"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5285:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "5262:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5262:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "5317:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 551,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "5327:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5309:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "5309:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 555,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5357:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5357:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5369:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 558,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5387:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "5352:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "EmitStatement",
												"src": "5347:43:0"
											}
										]
									},
									"functionSelector": "89afcb44",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4359:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4372:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4364:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4363:12:0"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4394:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4393:28:0"
									},
									"scope": 837,
									"src": "4350:1048:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "5545:1152:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 577,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5626:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 579,
																"name": "router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "5640:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5626:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "504f4f4c3a204163636573732064656e696564",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5648:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
																"typeString": "literal_string \"POOL: Access denied\""
															},
															"value": "POOL: Access denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41fbd5f6951bd47f3187d61658d601ed63ced88cc866eb3b518104bbd21046af",
																"typeString": "literal_string \"POOL: Access denied\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5618:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5618:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "5618:52:0"
											},
											{
												"assignments": [
													585,
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "5719:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "5714:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5714:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "5734:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "5729:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 586,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 588,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "5746:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5713:46:0"
											},
											{
												"assignments": [
													592,
													594
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "amount0Out",
														"nameLocation": "5776:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "5771:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 591,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5771:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 594,
														"mutability": "mutable",
														"name": "amount1Out",
														"nameLocation": "5793:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "5788:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 593,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5788:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 595,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "5807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 596,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "5817:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5807:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5857:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5852:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 604,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5852:4:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5852:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 608,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "5861:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 609,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5851:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5807:64:0",
													"trueExpression": {
														"components": [
															{
																"id": 598,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "5829:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5840:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 599,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5840:4:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5840:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 603,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5828:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5770:101:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 613,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "5890:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5903:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5890:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 616,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "5908:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5921:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5908:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5890:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20496e737566666963656e74206f757470757420616d6f756e74",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5924:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3",
																"typeString": "literal_string \"ERROR: Insufficent output amount\""
															},
															"value": "ERROR: Insufficent output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4dfa24cc653318b35f75720e06ef5cd36baa9a1bc327c2cb97463cefb3c60d3",
																"typeString": "literal_string \"ERROR: Insufficent output amount\""
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5882:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "5882:77:0"
											},
											{
												"assignments": [
													624,
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "6007:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "6002:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 623,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6002:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "6022:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "6017:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "getBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6034:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6034:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6001:46:0"
											},
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "amount0In",
														"nameLocation": "6063:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "6058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 630,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6058:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 632,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "6075:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [
																{
																	"id": 635,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "6099:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 633,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "6086:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1972,
																"src": "6086:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6086:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6075:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6154:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6075:80:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 642,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "6139:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 640,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "6126:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1972,
																	"src": "6126:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6126:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 638,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "6113:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "6113:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6113:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6058:97:0"
											},
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "amount1In",
														"nameLocation": "6171:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "6166:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 648,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6166:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 650,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "6183:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [
																{
																	"id": 653,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "6207:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 651,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6194:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1972,
																"src": "6194:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6194:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6183:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6183:80:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 660,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "6247:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 658,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "6234:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1972,
																	"src": "6234:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 656,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6221:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1972,
															"src": "6221:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6221:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6166:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 667,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "6282:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6294:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6282:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 670,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "6299:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6311:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6299:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6282:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552524f523a20696e73756666696369656e7420696e70757420616d6f756e74",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6314:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970",
																"typeString": "literal_string \"ERROR: insufficient input amount\""
															},
															"value": "ERROR: insufficient input amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49e36b9aa9b557bcaf7ecfe23bb081c28b2047abdd39d10503c3b74c5cc79970",
																"typeString": "literal_string \"ERROR: insufficient input amount\""
															}
														],
														"id": 666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6274:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "6274:75:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "amount0Out",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "6394:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6394:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "6390:59:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 684,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6434:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 685,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "6438:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 681,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "6417:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6410:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$915_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6410:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$915",
																	"typeString": "contract IERC20"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 882,
															"src": "6410:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6410:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 687,
													"nodeType": "ExpressionStatement",
													"src": "6410:39:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "amount1Out",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "6464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6464:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 700,
												"nodeType": "IfStatement",
												"src": "6460:59:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 696,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6504:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 697,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "6508:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "6487:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 692,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6480:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$915_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6480:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$915",
																	"typeString": "contract IERC20"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "transfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 882,
															"src": "6480:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6480:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 699,
													"nodeType": "ExpressionStatement",
													"src": "6480:39:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 702,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "6588:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 703,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "6598:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 701,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6580:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "6580:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 707,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6628:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6628:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "6640:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 710,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6651:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 711,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "6662:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 712,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "6674:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 713,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6686:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 706,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "6623:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6623:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "EmitStatement",
												"src": "6618:71:0"
											}
										]
									},
									"functionSelector": "d5bcb9b5",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "5453:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "5466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5458:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "5483:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5475:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5493:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "5513:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5508:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5532:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "5524:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5457:78:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5545:0:0"
									},
									"scope": 837,
									"src": "5444:1253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "6804:70:0",
										"statements": [
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 724,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "6815:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 725,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "6826:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6815:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "6815:20:0"
											},
											{
												"expression": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 728,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "6846:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 729,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "6857:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6846:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "6846:20:0"
											}
										]
									},
									"functionSelector": "0902f1ac",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6750:2:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "6779:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "6774:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6774:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "6794:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "6789:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6773:30:0"
									},
									"scope": 837,
									"src": "6730:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "6956:130:0",
										"statements": [
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 740,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "6967:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 747,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7011:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LiquidityPool_$837",
																			"typeString": "contract LiquidityPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LiquidityPool_$837",
																			"typeString": "contract LiquidityPool"
																		}
																	],
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7003:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 745,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7003:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7003:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "6985:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 741,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6978:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$915_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6978:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$915",
																	"typeString": "contract IERC20"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 872,
															"src": "6978:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6978:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6967:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "6967:50:0"
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 752,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "7028:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 759,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7072:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LiquidityPool_$837",
																			"typeString": "contract LiquidityPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LiquidityPool_$837",
																			"typeString": "contract LiquidityPool"
																		}
																	],
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7064:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 757,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7064:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7064:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 754,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "7046:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 753,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "7039:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$915_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7039:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$915",
																	"typeString": "contract IERC20"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 872,
															"src": "7039:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7039:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7028:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "7028:50:0"
											}
										]
									},
									"functionSelector": "00113e08",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalances",
									"nameLocation": "6891:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6902:2:0"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "balance0",
												"nameLocation": "6931:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "6926:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6926:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "balance1",
												"nameLocation": "6946:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "6941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6925:30:0"
									},
									"scope": 837,
									"src": "6882:204:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "7149:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "7168:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7185:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 775,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "7185:4:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 774,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7180:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7180:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7180:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7168:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 780,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "7198:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7215:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 782,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "7215:4:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 781,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "7210:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7210:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "7210:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7198:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7168:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "504f4f4c3a204f766572666c6f77",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7226:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490",
																"typeString": "literal_string \"POOL: Overflow\""
															},
															"value": "POOL: Overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96d81f16ad22bc7559d58f06bb913efb04aad3a6845f869947f79d29cc37f490",
																"typeString": "literal_string \"POOL: Overflow\""
															}
														],
														"id": 772,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7160:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7160:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "7160:83:0"
											},
											{
												"expression": {
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 791,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "7254:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 792,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "7266:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7254:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "7254:20:0"
											},
											{
												"expression": {
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 795,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "7285:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 796,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "7297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7285:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "7285:20:0"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7103:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "balance0",
												"nameLocation": "7116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7111:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "balance1",
												"nameLocation": "7131:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7126:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:30:0"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7149:0:0"
									},
									"scope": 837,
									"src": "7094:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "7392:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 806,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7452:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7452:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 808,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7466:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7452:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "464143544f52593a204163636573732064656e696564",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7473:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83",
																"typeString": "literal_string \"FACTORY: Access denied\""
															},
															"value": "FACTORY: Access denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83",
																"typeString": "literal_string \"FACTORY: Access denied\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7444:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7444:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "7444:54:0"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "7509:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "_router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "7518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "7509:16:0"
											}
										]
									},
									"functionSelector": "c0d78655",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRouter",
									"nameLocation": "7356:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "7374:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "7366:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7365:17:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7392:0:0"
									},
									"scope": 837,
									"src": "7347:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "7584:138:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 824,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7643:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7643:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 826,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7657:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7643:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "464143544f52593a204163636573732064656e696564",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7664:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83",
																"typeString": "literal_string \"FACTORY: Access denied\""
															},
															"value": "FACTORY: Access denied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1628ca5d543995008d740406e06fae0cabf0c6b8354953d5a5d7c406bf333c83",
																"typeString": "literal_string \"FACTORY: Access denied\""
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7635:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7635:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "7635:54:0"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 831,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "7700:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 832,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "7708:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7700:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "7700:14:0"
											}
										]
									},
									"functionSelector": "704b6c02",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAdmin",
									"nameLocation": "7550:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "7567:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "7559:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:16:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7584:0:0"
									},
									"scope": 837,
									"src": "7541:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 838,
							"src": "2369:5356:0",
							"usedErrors": []
						}
					],
					"src": "0:7725:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							915
						]
					},
					"id": 916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 840,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 915,
							"linearizedBaseContracts": [
								915
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 849,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 858,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 915,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 915,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 915,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 915,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 915,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 915,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 916,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1781
						]
					},
					"id": 1782,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:2",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1781,
							"linearizedBaseContracts": [
								1781
							],
							"name": "Math",
							"nameLocation": "210:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 922,
									"members": [
										{
											"id": 919,
											"name": "Down",
											"nameLocation": "245:4:2",
											"nodeType": "EnumValue",
											"src": "245:4:2"
										},
										{
											"id": 920,
											"name": "Up",
											"nameLocation": "287:2:2",
											"nodeType": "EnumValue",
											"src": "287:2:2"
										},
										{
											"id": 921,
											"name": "Zero",
											"nameLocation": "318:4:2",
											"nodeType": "EnumValue",
											"src": "318:4:2"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:2",
									"nodeType": "EnumDefinition",
									"src": "221:122:2"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "480:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 932,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 933,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "501:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 936,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "509:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:2",
													"trueExpression": {
														"id": 935,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "505:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 938,
												"nodeType": "Return",
												"src": "490:20:2"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:2",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "426:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "437:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:2"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:2"
									},
									"scope": 1781,
									"src": "413:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "655:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 950,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "672:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 951,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "676:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 954,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "684:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:2",
													"trueExpression": {
														"id": 953,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "680:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 956,
												"nodeType": "Return",
												"src": "665:20:2"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:2",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "601:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "612:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:2"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "646:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:2"
									},
									"scope": 1781,
									"src": "588:104:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "876:82:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 968,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "931:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 969,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "935:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 972,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "941:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 973,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "945:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 975,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 967,
												"id": 979,
												"nodeType": "Return",
												"src": "923:28:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:2",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "822:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:2"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "867:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:2"
									},
									"scope": 1781,
									"src": "805:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "1228:123:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 991,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "1316:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 995,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "1330:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 999,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "1339:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:2",
													"trueExpression": {
														"hexValue": "30",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 990,
												"id": 1004,
												"nodeType": "Return",
												"src": "1309:35:2"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:2",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1174:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1185:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:2"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "1219:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:2"
									},
									"scope": 1781,
									"src": "1157:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "1765:3822:2",
										"statements": [
											{
												"id": 1127,
												"nodeType": "UncheckedBlock",
												"src": "1775:3806:2",
												"statements": [
													{
														"assignments": [
															1019
														],
														"declarations": [
															{
																"constant": false,
																"id": 1019,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 1127,
																"src": "2096:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1020,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:2"
													},
													{
														"assignments": [
															1022
														],
														"declarations": [
															{
																"constant": false,
																"id": 1022,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:2",
																"nodeType": "VariableDeclaration",
																"scope": 1127,
																"src": "2168:13:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1021,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1023,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:2"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:2"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:2"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1022,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1009,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:2",
																"valueSize": 1
															},
															{
																"declaration": 1009,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:2",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:2",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:2",
																"valueSize": 1
															}
														],
														"id": 1024,
														"nodeType": "InlineAssembly",
														"src": "2239:166:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "2486:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1033,
														"nodeType": "IfStatement",
														"src": "2482:75:2",
														"trueBody": {
															"id": 1032,
															"nodeType": "Block",
															"src": "2498:59:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1028,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "2523:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1029,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "2531:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2523:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1017,
																	"id": 1031,
																	"nodeType": "Return",
																	"src": "2516:26:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1035,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "2667:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1036,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "2681:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2667:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2688:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1034,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2659:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2659:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "2659:53:2"
													},
													{
														"assignments": [
															1042
														],
														"declarations": [
															{
																"constant": false,
																"id": 1042,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2976:9:2",
																"nodeType": "VariableDeclaration",
																"scope": 1127,
																"src": "2968:17:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1041,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2968:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1043,
														"nodeType": "VariableDeclarationStatement",
														"src": "2968:17:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3008:291:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3077:38:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3097:1:2"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3100:1:2"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3103:11:2"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3090:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3090:25:2"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3077:9:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3197:41:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3210:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3220:9:2"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3231:5:2"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3217:20:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:32:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3197:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3255:30:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3268:5:2"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3264:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3264:21:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3255:5:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1013,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:11:2",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "3231:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "3255:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "3268:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1022,
																"isOffset": false,
																"isSlot": false,
																"src": "3197:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1022,
																"isOffset": false,
																"isSlot": false,
																"src": "3210:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1042,
																"isOffset": false,
																"isSlot": false,
																"src": "3077:9:2",
																"valueSize": 1
															},
															{
																"declaration": 1042,
																"isOffset": false,
																"isSlot": false,
																"src": "3220:9:2",
																"valueSize": 1
															},
															{
																"declaration": 1042,
																"isOffset": false,
																"isSlot": false,
																"src": "3275:9:2",
																"valueSize": 1
															},
															{
																"declaration": 1009,
																"isOffset": false,
																"isSlot": false,
																"src": "3097:1:2",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "3100:1:2",
																"valueSize": 1
															}
														],
														"id": 1044,
														"nodeType": "InlineAssembly",
														"src": "2999:300:2"
													},
													{
														"assignments": [
															1046
														],
														"declarations": [
															{
																"constant": false,
																"id": 1046,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3614:4:2",
																"nodeType": "VariableDeclaration",
																"scope": 1127,
																"src": "3606:12:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1045,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3606:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1054,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "3621:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3636:12:2",
																			"subExpression": {
																				"id": 1048,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1013,
																				"src": "3637:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3651:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3636:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3635:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3621:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3606:47:2"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3676:362:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3741:37:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3760:11:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3773:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3756:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3756:22:2"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3741:11:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3845:25:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3858:5:2"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3865:4:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3854:16:2"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3845:5:2"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3985:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4005:1:2",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4008:4:2"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4001:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4001:12:2"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4015:4:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:23:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4022:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3993:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3993:31:2"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3985:4:2"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1013,
																"isOffset": false,
																"isSlot": false,
																"src": "3741:11:2",
																"valueSize": 1
															},
															{
																"declaration": 1013,
																"isOffset": false,
																"isSlot": false,
																"src": "3760:11:2",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "3845:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "3858:5:2",
																"valueSize": 1
															},
															{
																"declaration": 1046,
																"isOffset": false,
																"isSlot": false,
																"src": "3773:4:2",
																"valueSize": 1
															},
															{
																"declaration": 1046,
																"isOffset": false,
																"isSlot": false,
																"src": "3865:4:2",
																"valueSize": 1
															},
															{
																"declaration": 1046,
																"isOffset": false,
																"isSlot": false,
																"src": "3985:4:2",
																"valueSize": 1
															},
															{
																"declaration": 1046,
																"isOffset": false,
																"isSlot": false,
																"src": "4008:4:2",
																"valueSize": 1
															},
															{
																"declaration": 1046,
																"isOffset": false,
																"isSlot": false,
																"src": "4015:4:2",
																"valueSize": 1
															}
														],
														"id": 1055,
														"nodeType": "InlineAssembly",
														"src": "3667:371:2"
													},
													{
														"expression": {
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1056,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "4104:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1057,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "4113:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1058,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "4121:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4113:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4104:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1061,
														"nodeType": "ExpressionStatement",
														"src": "4104:21:2"
													},
													{
														"assignments": [
															1063
														],
														"declarations": [
															{
																"constant": false,
																"id": 1063,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4451:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 1127,
																"src": "4443:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1062,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4443:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1070,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4462:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1065,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "4466:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4462:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1067,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4461:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4481:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4461:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4443:39:2"
													},
													{
														"expression": {
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1071,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "4699:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4710:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1073,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "4714:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1074,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "4728:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4714:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4710:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4699:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1078,
														"nodeType": "ExpressionStatement",
														"src": "4699:36:2"
													},
													{
														"expression": {
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1079,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "4768:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4779:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1081,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "4783:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1082,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "4797:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4783:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4779:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4768:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1086,
														"nodeType": "ExpressionStatement",
														"src": "4768:36:2"
													},
													{
														"expression": {
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1087,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "4838:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4849:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1089,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "4853:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1090,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "4867:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4853:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4849:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4838:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1094,
														"nodeType": "ExpressionStatement",
														"src": "4838:36:2"
													},
													{
														"expression": {
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1095,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "4908:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4919:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1097,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "4923:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1098,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "4937:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4923:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4919:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4908:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1102,
														"nodeType": "ExpressionStatement",
														"src": "4908:36:2"
													},
													{
														"expression": {
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1103,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "4978:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4989:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1105,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "4993:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1106,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "5007:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4993:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4989:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4978:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1110,
														"nodeType": "ExpressionStatement",
														"src": "4978:36:2"
													},
													{
														"expression": {
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1111,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "5049:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5060:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1113,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "5064:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1114,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "5078:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5064:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5060:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5049:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1118,
														"nodeType": "ExpressionStatement",
														"src": "5049:36:2"
													},
													{
														"expression": {
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1119,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "5519:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1120,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "5528:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1121,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "5536:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5528:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5519:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1124,
														"nodeType": "ExpressionStatement",
														"src": "5519:24:2"
													},
													{
														"expression": {
															"id": 1125,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "5564:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1017,
														"id": 1126,
														"nodeType": "Return",
														"src": "5557:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:2",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1683:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1694:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1705:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:2"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1749:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:2"
									},
									"scope": 1781,
									"src": "1667:3920:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "5829:189:2",
										"statements": [
											{
												"assignments": [
													1145
												],
												"declarations": [
													{
														"constant": false,
														"id": 1145,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5847:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "5839:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5839:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"arguments": [
														{
															"id": 1147,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "5863:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1148,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "5866:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1149,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "5869:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1146,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1129,
															1173
														],
														"referencedDeclaration": 1129,
														"src": "5856:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5839:42:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$922",
															"typeString": "enum Math.Rounding"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "5895:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$922",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1153,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "5907:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$922_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 920,
															"src": "5907:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$922",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5895:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1157,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "5929:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1158,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "5932:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1159,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "5935:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1156,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5922:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5922:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5950:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5922:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5895:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1169,
												"nodeType": "IfStatement",
												"src": "5891:98:2",
												"trueBody": {
													"id": 1168,
													"nodeType": "Block",
													"src": "5953:36:2",
													"statements": [
														{
															"expression": {
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1164,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "5967:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5977:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5967:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1167,
															"nodeType": "ExpressionStatement",
															"src": "5967:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1170,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "6005:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1171,
												"nodeType": "Return",
												"src": "5998:13:2"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "5593:121:2",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5728:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5743:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "5735:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5754:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "5746:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5765:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "5757:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5787:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "5778:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$922",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1137,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 922,
														"src": "5778:8:2"
													},
													"referencedDeclaration": 922,
													"src": "5778:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$922",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5734:62:2"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "5820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5819:9:2"
									},
									"scope": 1781,
									"src": "5719:299:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "6294:1585:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "6308:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6313:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6308:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "IfStatement",
												"src": "6304:45:2",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "6316:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6337:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1180,
															"id": 1185,
															"nodeType": "Return",
															"src": "6330:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7036:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1284,
														"src": "7028:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7045:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1192,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1176,
																			"src": "7056:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1191,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1453,
																			1489
																		],
																		"referencedDeclaration": 1453,
																		"src": "7051:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7051:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7062:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7051:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7050:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7045:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7028:36:2"
											},
											{
												"id": 1283,
												"nodeType": "UncheckedBlock",
												"src": "7465:408:2",
												"statements": [
													{
														"expression": {
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1199,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "7489:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1200,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "7499:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1201,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "7508:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1202,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "7512:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7508:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7499:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1205,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7498:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7523:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7498:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7489:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1209,
														"nodeType": "ExpressionStatement",
														"src": "7489:35:2"
													},
													{
														"expression": {
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1210,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "7538:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1211,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "7548:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1212,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "7557:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1213,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "7561:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7557:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7548:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1216,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7547:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7572:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7547:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7538:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1220,
														"nodeType": "ExpressionStatement",
														"src": "7538:35:2"
													},
													{
														"expression": {
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1221,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "7587:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1222,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "7597:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1223,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "7606:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1224,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "7610:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7606:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7597:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1227,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7596:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7596:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7587:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1231,
														"nodeType": "ExpressionStatement",
														"src": "7587:35:2"
													},
													{
														"expression": {
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1232,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "7636:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1233,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "7646:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1234,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "7655:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1235,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "7659:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7655:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7646:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1238,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7645:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7670:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7645:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7636:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1242,
														"nodeType": "ExpressionStatement",
														"src": "7636:35:2"
													},
													{
														"expression": {
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1243,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "7685:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1244,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "7695:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1245,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "7704:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1246,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "7708:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7704:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7695:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1249,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7694:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7719:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7694:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7685:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1253,
														"nodeType": "ExpressionStatement",
														"src": "7685:35:2"
													},
													{
														"expression": {
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1254,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "7734:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1255,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "7744:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1256,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "7753:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1257,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "7757:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7753:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7744:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7768:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7743:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7734:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1264,
														"nodeType": "ExpressionStatement",
														"src": "7734:35:2"
													},
													{
														"expression": {
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1265,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "7783:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1266,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "7793:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1267,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "7802:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1268,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "7806:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7802:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7793:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1271,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7792:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7817:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7792:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7783:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1275,
														"nodeType": "ExpressionStatement",
														"src": "7783:35:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1277,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "7843:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1278,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "7851:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1279,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "7855:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7851:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1276,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "7839:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7839:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1180,
														"id": 1282,
														"nodeType": "Return",
														"src": "7832:30:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "6024:208:2",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6246:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6259:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "6251:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6250:11:2"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "6285:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6284:9:2"
									},
									"scope": 1781,
									"src": "6237:1642:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "8055:161:2",
										"statements": [
											{
												"id": 1319,
												"nodeType": "UncheckedBlock",
												"src": "8065:145:2",
												"statements": [
													{
														"assignments": [
															1297
														],
														"declarations": [
															{
																"constant": false,
																"id": 1297,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8097:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1319,
																"src": "8089:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1296,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8089:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1301,
														"initialValue": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "8111:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1298,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1285,
																	1321
																],
																"referencedDeclaration": 1285,
																"src": "8106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8106:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8089:24:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1302,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "8134:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$922",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1303,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1291,
																					"src": "8144:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1304,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 922,
																						"src": "8156:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$922_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 920,
																					"src": "8156:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8144:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1307,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1297,
																						"src": "8171:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1308,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1297,
																						"src": "8180:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8171:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1310,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "8189:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8171:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8144:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8197:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8144:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8193:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8143:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8134:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1295,
														"id": 1318,
														"nodeType": "Return",
														"src": "8127:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "7885:89:2",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "7988:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8001:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "7993:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8013:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8004:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$922",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1289,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 922,
														"src": "8004:8:2"
													},
													"referencedDeclaration": 922,
													"src": "8004:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$922",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7992:30:2"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "8046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8045:9:2"
									},
									"scope": 1781,
									"src": "7979:237:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "8401:922:2",
										"statements": [
											{
												"assignments": [
													1330
												],
												"declarations": [
													{
														"constant": false,
														"id": 1330,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8419:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1452,
														"src": "8411:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8411:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"initialValue": {
													"hexValue": "30",
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8428:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8411:18:2"
											},
											{
												"id": 1449,
												"nodeType": "UncheckedBlock",
												"src": "8439:855:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "8467:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8476:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8467:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8482:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8467:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1347,
														"nodeType": "IfStatement",
														"src": "8463:99:2",
														"trueBody": {
															"id": 1346,
															"nodeType": "Block",
															"src": "8485:77:2",
															"statements": [
																{
																	"expression": {
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1338,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "8503:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8513:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8503:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1341,
																	"nodeType": "ExpressionStatement",
																	"src": "8503:13:2"
																},
																{
																	"expression": {
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1342,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "8534:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8544:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8534:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1345,
																	"nodeType": "ExpressionStatement",
																	"src": "8534:13:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1348,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "8579:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8588:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8579:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8593:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8579:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1362,
														"nodeType": "IfStatement",
														"src": "8575:96:2",
														"trueBody": {
															"id": 1361,
															"nodeType": "Block",
															"src": "8596:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "8614:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8624:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8614:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "8614:12:2"
																},
																{
																	"expression": {
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1357,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "8644:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8654:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8644:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1360,
																	"nodeType": "ExpressionStatement",
																	"src": "8644:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1363,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "8688:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8697:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8688:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8702:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8688:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1377,
														"nodeType": "IfStatement",
														"src": "8684:96:2",
														"trueBody": {
															"id": 1376,
															"nodeType": "Block",
															"src": "8705:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1368,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "8723:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8733:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8723:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1371,
																	"nodeType": "ExpressionStatement",
																	"src": "8723:12:2"
																},
																{
																	"expression": {
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1372,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "8753:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8763:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8753:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1375,
																	"nodeType": "ExpressionStatement",
																	"src": "8753:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1378,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "8797:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8806:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8797:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8797:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1392,
														"nodeType": "IfStatement",
														"src": "8793:96:2",
														"trueBody": {
															"id": 1391,
															"nodeType": "Block",
															"src": "8814:75:2",
															"statements": [
																{
																	"expression": {
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "8832:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8842:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8832:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1386,
																	"nodeType": "ExpressionStatement",
																	"src": "8832:12:2"
																},
																{
																	"expression": {
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1387,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "8862:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8872:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8862:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1390,
																	"nodeType": "ExpressionStatement",
																	"src": "8862:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "8906:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8906:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8919:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8906:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1407,
														"nodeType": "IfStatement",
														"src": "8902:93:2",
														"trueBody": {
															"id": 1406,
															"nodeType": "Block",
															"src": "8922:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "8940:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8950:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8940:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1401,
																	"nodeType": "ExpressionStatement",
																	"src": "8940:11:2"
																},
																{
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1402,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "8969:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8979:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8969:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1405,
																	"nodeType": "ExpressionStatement",
																	"src": "8969:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1408,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "9012:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9021:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9012:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9025:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9012:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1422,
														"nodeType": "IfStatement",
														"src": "9008:93:2",
														"trueBody": {
															"id": 1421,
															"nodeType": "Block",
															"src": "9028:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1413,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "9046:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9046:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1416,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:11:2"
																},
																{
																	"expression": {
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1417,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "9075:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9085:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9075:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1420,
																	"nodeType": "ExpressionStatement",
																	"src": "9075:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "9118:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9127:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9118:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9118:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1437,
														"nodeType": "IfStatement",
														"src": "9114:93:2",
														"trueBody": {
															"id": 1436,
															"nodeType": "Block",
															"src": "9134:73:2",
															"statements": [
																{
																	"expression": {
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1428,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "9152:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9162:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9152:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1431,
																	"nodeType": "ExpressionStatement",
																	"src": "9152:11:2"
																},
																{
																	"expression": {
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1432,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "9181:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9191:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9181:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1435,
																	"nodeType": "ExpressionStatement",
																	"src": "9181:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "9224:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9233:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9224:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9237:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9224:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1448,
														"nodeType": "IfStatement",
														"src": "9220:64:2",
														"trueBody": {
															"id": 1447,
															"nodeType": "Block",
															"src": "9240:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1443,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "9258:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9268:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9258:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1446,
																	"nodeType": "ExpressionStatement",
																	"src": "9258:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1450,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1330,
													"src": "9310:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1328,
												"id": 1451,
												"nodeType": "Return",
												"src": "9303:13:2"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "8222:113:2",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8349:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8362:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "8354:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8354:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8353:15:2"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "8392:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8392:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8391:9:2"
									},
									"scope": 1781,
									"src": "8340:983:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "9556:165:2",
										"statements": [
											{
												"id": 1487,
												"nodeType": "UncheckedBlock",
												"src": "9566:149:2",
												"statements": [
													{
														"assignments": [
															1465
														],
														"declarations": [
															{
																"constant": false,
																"id": 1465,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9598:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1487,
																"src": "9590:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1464,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9590:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1469,
														"initialValue": {
															"arguments": [
																{
																	"id": 1467,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "9612:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1466,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1453,
																	1489
																],
																"referencedDeclaration": 1453,
																"src": "9607:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9607:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9590:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1470,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "9639:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$922",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1471,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1459,
																					"src": "9649:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1472,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 922,
																						"src": "9661:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$922_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 920,
																					"src": "9661:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9649:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1477,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1475,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9676:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1476,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1465,
																						"src": "9681:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9676:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1478,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1456,
																					"src": "9690:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9676:19:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9649:46:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9702:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9649:54:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9698:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9648:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9639:65:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1463,
														"id": 1486,
														"nodeType": "Return",
														"src": "9632:72:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "9329:142:2",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9485:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9514:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9505:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$922",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1458,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1457,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 922,
														"src": "9505:8:2"
													},
													"referencedDeclaration": 922,
													"src": "9505:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$922",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9489:34:2"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9547:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9546:9:2"
									},
									"scope": 1781,
									"src": "9476:245:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "9908:854:2",
										"statements": [
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9926:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "9918:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9918:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1500,
												"initialValue": {
													"hexValue": "30",
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9935:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9918:18:2"
											},
											{
												"id": 1614,
												"nodeType": "UncheckedBlock",
												"src": "9946:787:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1501,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "9974:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9983:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9989:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "9983:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "9974:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1517,
														"nodeType": "IfStatement",
														"src": "9970:103:2",
														"trueBody": {
															"id": 1516,
															"nodeType": "Block",
															"src": "9993:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1506,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "10011:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10020:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10026:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10020:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10011:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1511,
																	"nodeType": "ExpressionStatement",
																	"src": "10011:17:2"
																},
																{
																	"expression": {
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "10046:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10056:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10046:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1515,
																	"nodeType": "ExpressionStatement",
																	"src": "10046:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "10090:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10105:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10099:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10090:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1534,
														"nodeType": "IfStatement",
														"src": "10086:103:2",
														"trueBody": {
															"id": 1533,
															"nodeType": "Block",
															"src": "10109:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "10127:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10136:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10142:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10136:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10127:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1528,
																	"nodeType": "ExpressionStatement",
																	"src": "10127:17:2"
																},
																{
																	"expression": {
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1529,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "10162:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10172:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10162:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1532,
																	"nodeType": "ExpressionStatement",
																	"src": "10162:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "10206:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10221:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10215:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10206:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1551,
														"nodeType": "IfStatement",
														"src": "10202:103:2",
														"trueBody": {
															"id": 1550,
															"nodeType": "Block",
															"src": "10225:80:2",
															"statements": [
																{
																	"expression": {
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1540,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "10243:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10252:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10258:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10252:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10243:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1545,
																	"nodeType": "ExpressionStatement",
																	"src": "10243:17:2"
																},
																{
																	"expression": {
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "10278:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10288:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10278:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1549,
																	"nodeType": "ExpressionStatement",
																	"src": "10278:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "10322:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10331:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10337:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10331:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10322:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1568,
														"nodeType": "IfStatement",
														"src": "10318:100:2",
														"trueBody": {
															"id": 1567,
															"nodeType": "Block",
															"src": "10340:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "10358:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10367:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10373:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10358:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1562,
																	"nodeType": "ExpressionStatement",
																	"src": "10358:16:2"
																},
																{
																	"expression": {
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1563,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "10392:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10402:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10392:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1566,
																	"nodeType": "ExpressionStatement",
																	"src": "10392:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "10435:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10444:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10450:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10444:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10435:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1585,
														"nodeType": "IfStatement",
														"src": "10431:100:2",
														"trueBody": {
															"id": 1584,
															"nodeType": "Block",
															"src": "10453:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "10471:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10480:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10486:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10480:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10471:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1579,
																	"nodeType": "ExpressionStatement",
																	"src": "10471:16:2"
																},
																{
																	"expression": {
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1580,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "10505:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10515:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10505:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1583,
																	"nodeType": "ExpressionStatement",
																	"src": "10505:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1586,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "10548:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10557:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10563:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10557:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10548:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1602,
														"nodeType": "IfStatement",
														"src": "10544:100:2",
														"trueBody": {
															"id": 1601,
															"nodeType": "Block",
															"src": "10566:78:2",
															"statements": [
																{
																	"expression": {
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1492,
																			"src": "10584:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10593:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10599:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10584:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1596,
																	"nodeType": "ExpressionStatement",
																	"src": "10584:16:2"
																},
																{
																	"expression": {
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1597,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "10618:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10628:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10618:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1600,
																	"nodeType": "ExpressionStatement",
																	"src": "10618:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "10661:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10670:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10676:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10670:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10661:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1613,
														"nodeType": "IfStatement",
														"src": "10657:66:2",
														"trueBody": {
															"id": 1612,
															"nodeType": "Block",
															"src": "10679:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1608,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "10697:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10707:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10697:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1611,
																	"nodeType": "ExpressionStatement",
																	"src": "10697:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1615,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1498,
													"src": "10749:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1496,
												"id": 1616,
												"nodeType": "Return",
												"src": "10742:13:2"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "9727:114:2",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9855:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "9861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9860:15:2"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "9899:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9899:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9898:9:2"
									},
									"scope": 1781,
									"src": "9846:916:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "10997:167:2",
										"statements": [
											{
												"id": 1652,
												"nodeType": "UncheckedBlock",
												"src": "11007:151:2",
												"statements": [
													{
														"assignments": [
															1630
														],
														"declarations": [
															{
																"constant": false,
																"id": 1630,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11039:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "11031:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1629,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11031:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1634,
														"initialValue": {
															"arguments": [
																{
																	"id": 1632,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "11054:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1631,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1618,
																	1654
																],
																"referencedDeclaration": 1618,
																"src": "11048:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11048:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11031:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1635,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "11081:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$922",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1636,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1624,
																					"src": "11091:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1637,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 922,
																						"src": "11103:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$922_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 920,
																					"src": "11103:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11091:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1640,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11118:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1641,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1630,
																						"src": "11124:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11118:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1643,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "11133:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11118:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11091:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11145:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11091:55:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11141:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11090:57:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11081:66:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1628,
														"id": 1651,
														"nodeType": "Return",
														"src": "11074:73:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "10768:143:2",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10925:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10939:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "10931:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10931:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10955:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "10946:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$922",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1623,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1622,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 922,
														"src": "10946:8:2"
													},
													"referencedDeclaration": 922,
													"src": "10946:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$922",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10930:34:2"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "10988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10987:9:2"
									},
									"scope": 1781,
									"src": "10916:248:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "11478:600:2",
										"statements": [
											{
												"assignments": [
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11496:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "11488:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11488:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"hexValue": "30",
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11505:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11488:18:2"
											},
											{
												"id": 1737,
												"nodeType": "UncheckedBlock",
												"src": "11516:533:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "11544:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11544:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11559:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11544:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1680,
														"nodeType": "IfStatement",
														"src": "11540:98:2",
														"trueBody": {
															"id": 1679,
															"nodeType": "Block",
															"src": "11562:76:2",
															"statements": [
																{
																	"expression": {
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "11580:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11590:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11580:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1674,
																	"nodeType": "ExpressionStatement",
																	"src": "11580:13:2"
																},
																{
																	"expression": {
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "11611:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11621:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11611:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1678,
																	"nodeType": "ExpressionStatement",
																	"src": "11611:12:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "11655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11664:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11655:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11669:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11655:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1695,
														"nodeType": "IfStatement",
														"src": "11651:95:2",
														"trueBody": {
															"id": 1694,
															"nodeType": "Block",
															"src": "11672:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "11690:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11700:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11690:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1689,
																	"nodeType": "ExpressionStatement",
																	"src": "11690:12:2"
																},
																{
																	"expression": {
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "11720:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11730:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11720:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1693,
																	"nodeType": "ExpressionStatement",
																	"src": "11720:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "11763:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11763:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11777:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11763:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1710,
														"nodeType": "IfStatement",
														"src": "11759:95:2",
														"trueBody": {
															"id": 1709,
															"nodeType": "Block",
															"src": "11780:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "11798:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11808:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11798:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1704,
																	"nodeType": "ExpressionStatement",
																	"src": "11798:12:2"
																},
																{
																	"expression": {
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1705,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "11828:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11838:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11828:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1708,
																	"nodeType": "ExpressionStatement",
																	"src": "11828:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "11871:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11880:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11871:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11885:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11871:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1725,
														"nodeType": "IfStatement",
														"src": "11867:95:2",
														"trueBody": {
															"id": 1724,
															"nodeType": "Block",
															"src": "11888:74:2",
															"statements": [
																{
																	"expression": {
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1716,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "11906:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11916:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11906:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1719,
																	"nodeType": "ExpressionStatement",
																	"src": "11906:12:2"
																},
																{
																	"expression": {
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1720,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "11936:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11946:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11936:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1723,
																	"nodeType": "ExpressionStatement",
																	"src": "11936:11:2"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "11979:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11988:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11979:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11992:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11979:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1736,
														"nodeType": "IfStatement",
														"src": "11975:64:2",
														"trueBody": {
															"id": 1735,
															"nodeType": "Block",
															"src": "11995:44:2",
															"statements": [
																{
																	"expression": {
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1663,
																			"src": "12013:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12013:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1734,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:2"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1738,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1663,
													"src": "12065:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1739,
												"nodeType": "Return",
												"src": "12058:13:2"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "11170:240:2",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11424:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11439:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "11431:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11430:15:2"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "11469:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11468:9:2"
									},
									"scope": 1781,
									"src": "11415:663:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "12315:174:2",
										"statements": [
											{
												"id": 1778,
												"nodeType": "UncheckedBlock",
												"src": "12325:158:2",
												"statements": [
													{
														"assignments": [
															1753
														],
														"declarations": [
															{
																"constant": false,
																"id": 1753,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12357:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 1778,
																"src": "12349:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1752,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12349:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1757,
														"initialValue": {
															"arguments": [
																{
																	"id": 1755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "12373:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1754,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1741,
																	1780
																],
																"referencedDeclaration": 1741,
																"src": "12366:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12366:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12349:30:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1758,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "12400:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$922",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1759,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1747,
																					"src": "12410:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1760,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 922,
																						"src": "12422:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$922_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 920,
																					"src": "12422:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$922",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12410:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1768,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1763,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12437:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1766,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1764,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1753,
																									"src": "12443:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1765,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12453:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12443:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1767,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12442:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12437:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1769,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "12458:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12437:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12410:53:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12470:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12410:61:2",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12466:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1775,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12409:63:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12400:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1751,
														"id": 1777,
														"nodeType": "Return",
														"src": "12393:79:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "12084:144:2",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12242:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12257:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "12249:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12273:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "12264:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$922",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1745,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 922,
														"src": "12264:8:2"
													},
													"referencedDeclaration": 922,
													"src": "12264:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$922",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12248:34:2"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "12306:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12306:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12305:9:2"
									},
									"scope": 1781,
									"src": "12233:256:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1782,
							"src": "202:12289:2",
							"usedErrors": []
						}
					],
					"src": "103:12389:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2093
						]
					},
					"id": 2094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1783,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1784,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2093,
							"linearizedBaseContracts": [
								2093
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 1814,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															1797
														],
														"declarations": [
															{
																"constant": false,
																"id": 1797,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 1814,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1796,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1801,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1798,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1799,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1802,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1803,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1809,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1795,
															"id": 1808,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1811,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1812,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1795,
														"id": 1813,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 2093,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 1842,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1828,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1829,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1835,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1833,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1827,
															"id": 1834,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1837,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1838,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1840,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1827,
														"id": 1841,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 2093,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 1884,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1856,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1863,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1861,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1862,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															1865
														],
														"declarations": [
															{
																"constant": false,
																"id": 1865,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 1884,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1864,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1869,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1866,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1867,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1871,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1873,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1879,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1878,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1881,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1882,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1855,
														"id": 1883,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 2093,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1898,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1905,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1903,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1904,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1907,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1908,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1910,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1911,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 2093,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 1940,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1926,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1933,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1925,
															"id": 1932,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1935,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1936,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1938,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1925,
														"id": 1939,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 2093,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1952,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1953,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1951,
												"id": 1955,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 2093,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1967,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1968,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1966,
												"id": 1970,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 2093,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1982,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1983,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1981,
												"id": 1985,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 2093,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1997,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1998,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1996,
												"id": 2000,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 2093,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2012,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2013,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2015,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 2093,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "5054:106:3",
										"statements": [
											{
												"id": 2040,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2030,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "5096:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2031,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2020,
																		"src": "5101:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2033,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "5104:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2029,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2035,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2036,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "5138:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2037,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "5142:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2028,
														"id": 2039,
														"nodeType": "Return",
														"src": "5131:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "4972:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "4983:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "4994:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:3"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "5045:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:3"
									},
									"scope": 2093,
									"src": "4959:201:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "5739:105:3",
										"statements": [
											{
												"id": 2065,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2055,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2047,
																		"src": "5781:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2058,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2049,
																	"src": "5788:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2054,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2060,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2061,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "5822:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2062,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "5826:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2053,
														"id": 2064,
														"nodeType": "Return",
														"src": "5815:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "5657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "5668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "5679:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:3"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "5730:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:3"
									},
									"scope": 2093,
									"src": "5644:200:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "6585:105:3",
										"statements": [
											{
												"id": 2090,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2080,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2072,
																		"src": "6627:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2083,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "6634:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2079,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2085,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2086,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "6668:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2087,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "6672:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2078,
														"id": 2089,
														"nodeType": "Return",
														"src": "6661:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2068,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "6503:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "6514:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "6525:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:3"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "6576:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:3"
									},
									"scope": 2093,
									"src": "6490:200:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2094,
							"src": "482:6210:3",
							"usedErrors": []
						}
					],
					"src": "107:6586:3"
				},
				"id": 3
			}
		}
	}
}