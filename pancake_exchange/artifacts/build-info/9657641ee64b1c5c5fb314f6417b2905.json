{
	"id": "9657641ee64b1c5c5fb314f6417b2905",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"PancakePair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport './IPancakePair.sol';\nimport './PancakeERC20.sol';\nimport './Math.sol';\nimport './UQ112x112.sol';\nimport './IERC20.sol';\nimport './IPancakeFactory.sol';\nimport './IPancakeCallee.sol';\n\ncontract PancakePair is IPancakePair, PancakeERC20 {\n    using SafeMath  for uint;\n    using UQ112x112 for uint224;\n\n    uint public constant MINIMUM_LIQUIDITY = 10**3;\n    bytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\n\n    address public factory;\n    address public token0;\n    address public token1;\n\n    uint112 private reserve0;           // uses single storage slot, accessible via getReserves\n    uint112 private reserve1;           // uses single storage slot, accessible via getReserves\n    uint32  private blockTimestampLast; // uses single storage slot, accessible via getReserves\n\n    uint public price0CumulativeLast;\n    uint public price1CumulativeLast;\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n\n    uint private unlocked = 1;\n    modifier lock() {\n        require(unlocked == 1, 'Pancake: LOCKED');\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n\n    function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'Pancake: TRANSFER_FAILED');\n    }\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    constructor() public {\n        factory = msg.sender;\n    }\n\n    // called once by the factory at time of deployment\n    function initialize(address _token0, address _token1) external {\n        require(msg.sender == factory, 'Pancake: FORBIDDEN'); // sufficient check\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    // update reserves and, on the first call per block, price accumulators\n    function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {\n        require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'Pancake: OVERFLOW');\n        uint32 blockTimestamp = uint32(block.timestamp % 2**32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            // * never overflows, and + overflow is desired\n            price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed;\n            price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed;\n        }\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    // if fee is on, mint liquidity equivalent to 8/25 of the growth in sqrt(k)\n    function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {\n        address feeTo = IPancakeFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint _kLast = kLast; // gas savings\n        if (feeOn) {\n            if (_kLast != 0) {\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                uint rootKLast = Math.sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(8);\n                    uint denominator = rootK.mul(17).add(rootKLast.mul(8));\n                    uint liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function mint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n           _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1);\n        }\n        require(liquidity > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_MINTED');\n        _mint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function burn(address to) external lock returns (uint amount0, uint amount1) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        address _token0 = token0;                                // gas savings\n        address _token1 = token1;                                // gas savings\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\n        uint liquidity = balanceOf[address(this)];\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        require(amount0 > 0 && amount1 > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_BURNED');\n        _burn(address(this), liquidity);\n        _safeTransfer(_token0, to, amount0);\n        _safeTransfer(_token1, to, amount1);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {\n        require(amount0Out > 0 || amount1Out > 0, 'Pancake: INSUFFICIENT_OUTPUT_AMOUNT');\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        require(amount0Out < _reserve0 && amount1Out < _reserve1, 'Pancake: INSUFFICIENT_LIQUIDITY');\n\n        uint balance0;\n        uint balance1;\n        { // scope for _token{0,1}, avoids stack too deep errors\n        address _token0 = token0;\n        address _token1 = token1;\n        require(to != _token0 && to != _token1, 'Pancake: INVALID_TO');\n        if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n        if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n        if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0;\n        require(amount0In > 0 || amount1In > 0, 'Pancake: INSUFFICIENT_INPUT_AMOUNT');\n        { // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n        uint balance0Adjusted = (balance0.mul(10000).sub(amount0In.mul(25)));\n        uint balance1Adjusted = (balance1.mul(10000).sub(amount1In.mul(25)));\n        require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2), 'Pancake: K');\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    // force balances to match reserves\n    function skim(address to) external lock {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0));\n        _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1));\n    }\n\n    // force reserves to match balances\n    function sync() external lock {\n        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);\n    }\n}"
			},
			"IPancakeCallee.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeCallee {\n    function pancakeCall(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n}"
			},
			"IPancakeFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeFactory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n\n    function allPairs(uint256) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\n}"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}"
			},
			"UQ112x112.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2**112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}"
			},
			"Math.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}"
			},
			"PancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"IPancakeERC20.sol\";\nimport \"SafeMath.sol\";\n\ncontract PancakeERC20 is IPancakeERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"Pancake LPs\";\n    string public constant symbol = \"Cake-LP\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint256) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor() public {\n        uint256 chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint256(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"Pancake: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\");\n        _approve(owner, spender, value);\n    }\n}"
			},
			"IPancakePair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakePair {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(address indexed sender, uint256 amount0, uint256 amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n        external\n        view\n        returns (\n            uint112 reserve0,\n            uint112 reserve1,\n            uint32 blockTimestampLast\n        );\n\n    function price0CumulativeLast() external view returns (uint256);\n\n    function price1CumulativeLast() external view returns (uint256);\n\n    function kLast() external view returns (uint256);\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function burn(address to) external returns (uint256 amount0, uint256 amount1);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}"
			},
			"IPancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x6612e2fccf8d31da3401a0cd5c7f5018781a176fc7b2f8a64adec6727221ad5c\",\"urls\":[\"bzz-raw://0c127eadc7ad16f752878e1e87238907934bd94cd4907d76afeacf398ea0fd28\",\"dweb:/ipfs/QmVz4GzPGwcNbzK5NM1BCz2uDrPUoRvAKQk5w6Y6cHRqRC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IPancakeCallee.sol": {
				"IPancakeCallee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "pancakeCall",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pancakeCall(address,uint256,uint256,bytes)": "84800812"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pancakeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IPancakeCallee.sol\":\"IPancakeCallee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IPancakeCallee.sol\":{\"keccak256\":\"0xb7f88a49487d00e5c5fb4c70e59e5414c73e5ddbbc1d4eb9a4eb5a7210b0ec4b\",\"urls\":[\"bzz-raw://f4034676e4c16407bf6c44f1cd3a3983847778d4b944bf38c1daf815fb720f1f\",\"dweb:/ipfs/QmXLta9jJzi81AjejPs2VgMKmXhJavPQW5LJiNb8KbEkcm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IPancakeERC20.sol": {
				"IPancakeERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IPancakeERC20.sol\":\"IPancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IPancakeERC20.sol\":{\"keccak256\":\"0x8f7a6ef0761584fa011d9e5f5160f35993fde3a08a64ea921d1ac4553255bc47\",\"urls\":[\"bzz-raw://8b60a23f5c9e440bdc2ade2fc5ce28a62c23bc7c1b37ab61ea5c5f4cef8d8005\",\"dweb:/ipfs/QmTUhKMtXKSE9V4MVswkC7deV4cyE9WUGo8ZKvopypHkgo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IPancakeFactory.sol": {
				"IPancakeFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_CODE_PAIR_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"INIT_CODE_PAIR_HASH()": "5855a25a",
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IPancakeFactory.sol\":\"IPancakeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IPancakeFactory.sol\":{\"keccak256\":\"0xfe7bdc735687e2e3d4207fe77661b90679038ec5b3f77e4bd2c2520a273d2209\",\"urls\":[\"bzz-raw://bfa09ce828c2564b52e59f964bdb40c8d5a08b4b35f8e91b504bb173733498ba\",\"dweb:/ipfs/QmYZjeefob32YQfwcg5TTySJyCfSViZSyuo1UkQFMw36cX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IPancakePair.sol": {
				"IPancakePair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IPancakePair.sol\":\"IPancakePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IPancakePair.sol\":{\"keccak256\":\"0xf684b8cfc256cc9d983eef4705257029d13724f8e5a73f85664fc617d70fd2ab\",\"urls\":[\"bzz-raw://6673f9e15d58e0f138f9b5dd24b777cf58e20fa6557ee72e01ecdede016c8bb3\",\"dweb:/ipfs/QmNQSnPC4xdzX4DScnnVdHqnkPH6ri1tSV79RmrbidbvVk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Math.sol\":115:655  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Math.sol\":115:655  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158205cb16e1336fef0a7c79e2b71285ce0c58a06f812d0f8b9e9d3cf84404949329c64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205cb16e1336fef0a7c79e2b71285ce0c58a06f812d0f8b9e9d3cf84404949329c64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5C 0xB1 PUSH15 0x1336FEF0A7C79E2B71285CE0C58A06 0xF8 SLT 0xD0 0xF8 0xB9 0xE9 0xD3 0xCF DUP5 BLOCKHASH 0x49 0x49 ORIGIN SWAP13 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "115:540:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205cb16e1336fef0a7c79e2b71285ce0c58a06f812d0f8b9e9d3cf84404949329c64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5C 0xB1 PUSH15 0x1336FEF0A7C79E2B71285CE0C58A06 0xF8 SLT 0xD0 0xF8 0xB9 0xE9 0xD3 0xCF DUP5 BLOCKHASH 0x49 0x49 ORIGIN SWAP13 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "115:540:5:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205cb16e1336fef0a7c79e2b71285ce0c58a06f812d0f8b9e9d3cf84404949329c64736f6c63430005100032",
									".code": [
										{
											"begin": 115,
											"end": 655,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "ADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "EQ"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Math.sol\":{\"keccak256\":\"0x9decb78800ca00b383f257c9d0f9bb93d4db5efbff54af28ba4cd9e5fa4442df\",\"urls\":[\"bzz-raw://cd9d8049b9f2e645e7fb5c3fa1a308284bea9e38f236f2de917bdba2e4b715ad\",\"dweb:/ipfs/QmT2Vg93JnnNrATyRh5N19XPPZU7NdcJcoTUjsXW6mSjWh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"PancakeERC20.sol": {
				"PancakeERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PancakeERC20.sol\":114:3642  contract PancakeERC20 is IPancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"PancakeERC20.sol\":946:1393  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"PancakeERC20.sol\":946:1393  constructor() public {... */\n  pop\n    /* \"PancakeERC20.sol\":977:992  uint256 chainId */\n  0x00\n    /* \"PancakeERC20.sol\":1036:1043  chainid */\n  chainid\n    /* \"PancakeERC20.sol\":1025:1043  chainId := chainid */\n  swap1\n  pop\n    /* \"PancakeERC20.sol\":1132:1227  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"PancakeERC20.sol\":1261:1265  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x50616e63616b65204c5073000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PancakeERC20.sol\":1245:1267  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1295:1305  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PancakeERC20.sol\":1285:1306  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1324:1331  chainId */\n  dup4\n    /* \"PancakeERC20.sol\":1357:1361  this */\n  address\n    /* \"PancakeERC20.sol\":1104:1376  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"PancakeERC20.sol\":1104:1376  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"PancakeERC20.sol\":1081:1386  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1062:1078  DOMAIN_SEPARATOR */\n  0x03\n    /* \"PancakeERC20.sol\":1062:1386  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PancakeERC20.sol\":946:1393  constructor() public {... */\n  pop\n    /* \"PancakeERC20.sol\":114:3642  contract PancakeERC20 is IPancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"PancakeERC20.sol\":114:3642  contract PancakeERC20 is IPancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"PancakeERC20.sol\":114:3642  contract PancakeERC20 is IPancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PancakeERC20.sol\":192:235  string public constant name = \"Pancake LPs\" */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":192:235  string public constant name = \"Pancake LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":329:355  uint256 public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":288:323  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":482:513  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":361:405  mapping(address => uint256) public balanceOf */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"PancakeERC20.sol\":361:405  mapping(address => uint256) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":737:778  mapping(address => uint256) public nonces */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"PancakeERC20.sol\":737:778  mapping(address => uint256) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":241:282  string public constant symbol = \"Cake-LP\" */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_46:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_46)\n    tag_48:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":241:282  string public constant symbol = \"Cake-LP\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_49:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"PancakeERC20.sol\":411:475  mapping(address => mapping(address => uint256)) public allowance */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"PancakeERC20.sol\":411:475  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":192:235  string public constant name = \"Pancake LPs\" */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x50616e63616b65204c5073000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_26:\n        /* \"PancakeERC20.sol\":2346:2350  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2362:2398  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"PancakeERC20.sol\":2371:2381  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2383:2390  spender */\n      dup5\n        /* \"PancakeERC20.sol\":2392:2397  value */\n      dup5\n        /* \"PancakeERC20.sol\":2362:2370  _approve */\n      tag_61\n        /* \"PancakeERC20.sol\":2362:2398  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n        /* \"PancakeERC20.sol\":2415:2419  true */\n      0x01\n        /* \"PancakeERC20.sol\":2408:2419  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":329:355  uint256 public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n    tag_31:\n        /* \"PancakeERC20.sol\":2688:2692  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2747:2749  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"PancakeERC20.sol\":2708:2717  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2708:2723  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2718:2722  from */\n      dup7\n        /* \"PancakeERC20.sol\":2708:2723  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2708:2735  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2724:2734  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2708:2735  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2708:2750  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"PancakeERC20.sol\":2704:2845  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_63\n      jumpi\n        /* \"PancakeERC20.sol\":2796:2834  allowance[from][msg.sender].sub(value) */\n      tag_64\n        /* \"PancakeERC20.sol\":2828:2833  value */\n      dup3\n        /* \"PancakeERC20.sol\":2796:2805  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2796:2811  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2806:2810  from */\n      dup8\n        /* \"PancakeERC20.sol\":2796:2811  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2796:2823  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2812:2822  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2796:2823  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2796:2827  allowance[from][msg.sender].sub */\n      tag_65\n      swap1\n        /* \"PancakeERC20.sol\":2796:2834  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"PancakeERC20.sol\":2766:2775  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2766:2781  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2776:2780  from */\n      dup7\n        /* \"PancakeERC20.sol\":2766:2781  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2766:2793  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2782:2792  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2766:2793  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2766:2834  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2704:2845  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_63:\n        /* \"PancakeERC20.sol\":2854:2880  _transfer(from, to, value) */\n      tag_66\n        /* \"PancakeERC20.sol\":2864:2868  from */\n      dup5\n        /* \"PancakeERC20.sol\":2870:2872  to */\n      dup5\n        /* \"PancakeERC20.sol\":2874:2879  value */\n      dup5\n        /* \"PancakeERC20.sol\":2854:2863  _transfer */\n      tag_67\n        /* \"PancakeERC20.sol\":2854:2880  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n        /* \"PancakeERC20.sol\":2897:2901  true */\n      0x01\n        /* \"PancakeERC20.sol\":2890:2901  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"PancakeERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":288:323  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"PancakeERC20.sol\":321:323  18 */\n      0x12\n        /* \"PancakeERC20.sol\":288:323  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":482:513  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":361:405  mapping(address => uint256) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":737:778  mapping(address => uint256) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":241:282  string public constant symbol = \"Cake-LP\" */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x43616b652d4c5000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_52:\n        /* \"PancakeERC20.sol\":2495:2499  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2511:2543  _transfer(msg.sender, to, value) */\n      tag_69\n        /* \"PancakeERC20.sol\":2521:2531  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2533:2535  to */\n      dup5\n        /* \"PancakeERC20.sol\":2537:2542  value */\n      dup5\n        /* \"PancakeERC20.sol\":2511:2520  _transfer */\n      tag_67\n        /* \"PancakeERC20.sol\":2511:2543  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_69:\n        /* \"PancakeERC20.sol\":2560:2564  true */\n      0x01\n        /* \"PancakeERC20.sol\":2553:2564  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n    tag_55:\n        /* \"PancakeERC20.sol\":3127:3142  block.timestamp */\n      timestamp\n        /* \"PancakeERC20.sol\":3115:3123  deadline */\n      dup5\n        /* \"PancakeERC20.sol\":3115:3142  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"PancakeERC20.sol\":3107:3163  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204558504952454400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"PancakeERC20.sol\":3173:3187  bytes32 digest */\n      0x00\n        /* \"PancakeERC20.sol\":3275:3291  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"PancakeERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":3330:3345  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"PancakeERC20.sol\":3347:3352  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3354:3361  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3363:3368  value */\n      dup10\n        /* \"PancakeERC20.sol\":3370:3376  nonces */\n      0x04\n        /* \"PancakeERC20.sol\":3370:3383  nonces[owner] */\n      0x00\n        /* \"PancakeERC20.sol\":3377:3382  owner */\n      dup15\n        /* \"PancakeERC20.sol\":3370:3383  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PancakeERC20.sol\":3370:3385  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"PancakeERC20.sol\":3387:3395  deadline */\n      dup11\n        /* \"PancakeERC20.sol\":3319:3396  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PancakeERC20.sol\":3319:3396  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"PancakeERC20.sol\":3309:3397  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PancakeERC20.sol\":3213:3411  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PancakeERC20.sol\":3213:3411  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"PancakeERC20.sol\":3190:3421  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PancakeERC20.sol\":3173:3421  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":3431:3455  address recoveredAddress */\n      0x00\n        /* \"PancakeERC20.sol\":3458:3484  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"PancakeERC20.sol\":3468:3474  digest */\n      dup3\n        /* \"PancakeERC20.sol\":3476:3477  v */\n      dup7\n        /* \"PancakeERC20.sol\":3479:3480  r */\n      dup7\n        /* \"PancakeERC20.sol\":3482:3483  s */\n      dup7\n        /* \"PancakeERC20.sol\":3458:3484  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"PancakeERC20.sol\":3458:3484  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"PancakeERC20.sol\":3431:3484  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":3530:3531  0 */\n      0x00\n        /* \"PancakeERC20.sol\":3502:3532  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":3502:3518  recoveredAddress */\n      dup2\n        /* \"PancakeERC20.sol\":3502:3532  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakeERC20.sol\":3502:3561  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"PancakeERC20.sol\":3556:3561  owner */\n      dup9\n        /* \"PancakeERC20.sol\":3536:3561  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":3536:3552  recoveredAddress */\n      dup2\n        /* \"PancakeERC20.sol\":3536:3561  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PancakeERC20.sol\":3502:3561  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"PancakeERC20.sol\":3494:3592  require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"PancakeERC20.sol\":3602:3633  _approve(owner, spender, value) */\n      tag_75\n        /* \"PancakeERC20.sol\":3611:3616  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3618:3625  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3627:3632  value */\n      dup10\n        /* \"PancakeERC20.sol\":3602:3610  _approve */\n      tag_61\n        /* \"PancakeERC20.sol\":3602:3633  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":411:475  mapping(address => mapping(address => uint256)) public allowance */\n    tag_58:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":1819:2018  function _approve(... */\n    tag_61:\n        /* \"PancakeERC20.sol\":1960:1965  value */\n      dup1\n        /* \"PancakeERC20.sol\":1932:1941  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":1932:1948  allowance[owner] */\n      0x00\n        /* \"PancakeERC20.sol\":1942:1947  owner */\n      dup6\n        /* \"PancakeERC20.sol\":1932:1948  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1932:1957  allowance[owner][spender] */\n      0x00\n        /* \"PancakeERC20.sol\":1949:1956  spender */\n      dup5\n        /* \"PancakeERC20.sol\":1932:1957  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1932:1965  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":1996:2003  spender */\n      dup2\n        /* \"PancakeERC20.sol\":1980:2011  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":1989:1994  owner */\n      dup4\n        /* \"PancakeERC20.sol\":1980:2011  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PancakeERC20.sol\":2005:2010  value */\n      dup4\n        /* \"PancakeERC20.sol\":1980:2011  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1819:2018  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_65:\n        /* \"SafeMath.sol\":397:406  uint256 z */\n      0x00\n        /* \"SafeMath.sol\":441:442  x */\n      dup3\n        /* \"SafeMath.sol\":435:436  y */\n      dup3\n        /* \"SafeMath.sol\":431:432  x */\n      dup5\n        /* \"SafeMath.sol\":431:436  x - y */\n      sub\n        /* \"SafeMath.sol\":427:436  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"SafeMath.sol\":426:442  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":2024:2273  function _transfer(... */\n    tag_67:\n        /* \"PancakeERC20.sol\":2150:2176  balanceOf[from].sub(value) */\n      tag_80\n        /* \"PancakeERC20.sol\":2170:2175  value */\n      dup2\n        /* \"PancakeERC20.sol\":2150:2159  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2150:2165  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2160:2164  from */\n      dup7\n        /* \"PancakeERC20.sol\":2150:2165  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2150:2169  balanceOf[from].sub */\n      tag_65\n      swap1\n        /* \"PancakeERC20.sol\":2150:2176  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"PancakeERC20.sol\":2132:2141  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2132:2147  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2142:2146  from */\n      dup6\n        /* \"PancakeERC20.sol\":2132:2147  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2132:2176  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2202:2226  balanceOf[to].add(value) */\n      tag_81\n        /* \"PancakeERC20.sol\":2220:2225  value */\n      dup2\n        /* \"PancakeERC20.sol\":2202:2211  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2202:2215  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":2212:2214  to */\n      dup6\n        /* \"PancakeERC20.sol\":2202:2215  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2202:2219  balanceOf[to].add */\n      tag_82\n      swap1\n        /* \"PancakeERC20.sol\":2202:2226  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"PancakeERC20.sol\":2186:2195  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2186:2199  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":2196:2198  to */\n      dup5\n        /* \"PancakeERC20.sol\":2186:2199  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2186:2226  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2256:2258  to */\n      dup2\n        /* \"PancakeERC20.sol\":2241:2266  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":2250:2254  from */\n      dup4\n        /* \"PancakeERC20.sol\":2241:2266  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PancakeERC20.sol\":2260:2265  value */\n      dup4\n        /* \"PancakeERC20.sol\":2241:2266  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":2024:2273  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_82:\n        /* \"SafeMath.sol\":256:265  uint256 z */\n      0x00\n        /* \"SafeMath.sol\":300:301  x */\n      dup3\n        /* \"SafeMath.sol\":294:295  y */\n      dup3\n        /* \"SafeMath.sol\":290:291  x */\n      dup5\n        /* \"SafeMath.sol\":290:295  x + y */\n      add\n        /* \"SafeMath.sol\":286:295  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"SafeMath.sol\":285:301  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158203f1949f5776b422988dae90e90e421f777b95e25dc382e5d0adde6814e44f50864736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000469050604051808061109060529139605201905060405180910390206040518060400160405280600b81526020017f50616e63616b65204c5073000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012060038190555050610f618061012f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600b81526020017f50616e63616b65204c507300000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600781526020017f43616b652d4c500000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a723158203f1949f5776b422988dae90e90e421f777b95e25dc382e5d0adde6814e44f50864736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x1090 PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50616E63616B65204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0xF61 DUP1 PUSH2 0x12F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50616E63616B65204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616B652D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 EXTCODEHASH NOT 0x49 CREATE2 PUSH24 0x6B422988DAE90E90E421F777B95E25DC382E5D0ADDE6814E DIFFICULTY CREATE2 ADDMOD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "114:3528:6:-;;;946:447;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:447:6;977:15;1036:7;1025:18;;1132:95;;;;;;;;;;;;;;;;;;;1261:4;;;;;;;;;;;;;;;;;1245:22;;;;;;1295:10;;;;;;;;;;;;;;;;;1285:21;;;;;;1324:7;1357:4;1104:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1104:272:6;;;1081:305;;;;;;1062:16;:324;;;;946:447;114:3528;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a4565b604051808215151515815260200191505060405180910390f35b6101c56105bb565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105c1565b604051808215151515815260200191505060405180910390f35b61026961078c565b6040518082815260200191505060405180910390f35b6102876107b3565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6107b8565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107be565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d6565b6040518082815260200191505060405180910390f35b6103796107ee565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff169060200190929190803590602001909291908035906020019092919050505061083e565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b82565b6040518082815260200191505060405180910390f35b6040518060400160405280600b81526020017f50616e63616b65204c507300000000000000000000000000000000000000000081525081565b60006105b1338484610ba7565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610776576106f582600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610781848484610d15565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b60016020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b6040518060400160405280600781526020017f43616b652d4c500000000000000000000000000000000000000000000000000081525081565b6000610834338484610d15565b6001905092915050565b428410156108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610afa57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b610b77898989610ba7565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000828284039150811115610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b610d6781600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c9290919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dfc81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610f26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a723158203f1949f5776b422988dae90e90e421f777b95e25dc382e5d0adde6814e44f50864736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F3 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x319 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x101 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x149 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x555 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50616E63616B65204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B1 CALLER DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x776 JUMPI PUSH2 0x6F5 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616B652D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB77 DUP10 DUP10 DUP10 PUSH2 0xBA7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC92 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDFC DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 EXTCODEHASH NOT 0x49 CREATE2 PUSH24 0x6B422988DAE90E90E421F777B95E25DC382E5D0ADDE6814E DIFFICULTY CREATE2 ADDMOD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "114:3528:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;114:3528:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;192:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;192:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2279:147:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;329:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2577:331;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2577:331:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;623:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;288:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;482:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;361:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;361:44:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;737:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;737:41:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;241;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;241:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2432:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2432:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2914:726;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2914:726:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;411:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;411:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;192:43;;;;;;;;;;;;;;;;;;;:::o;2279:147::-;2346:4;2362:36;2371:10;2383:7;2392:5;2362:8;:36::i;:::-;2415:4;2408:11;;2279:147;;;;:::o;329:26::-;;;;:::o;2577:331::-;2688:4;2747:2;2708:9;:15;2718:4;2708:15;;;;;;;;;;;;;;;:27;2724:10;2708:27;;;;;;;;;;;;;;;;:42;2704:141;;2796:38;2828:5;2796:9;:15;2806:4;2796:15;;;;;;;;;;;;;;;:27;2812:10;2796:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2766:9;:15;2776:4;2766:15;;;;;;;;;;;;;;;:27;2782:10;2766:27;;;;;;;;;;;;;;;:68;;;;2704:141;2854:26;2864:4;2870:2;2874:5;2854:9;:26::i;:::-;2897:4;2890:11;;2577:331;;;;;:::o;623:108::-;665:66;623:108;;;:::o;288:35::-;321:2;288:35;:::o;482:31::-;;;;:::o;361:44::-;;;;;;;;;;;;;;;;;:::o;737:41::-;;;;;;;;;;;;;;;;;:::o;241:::-;;;;;;;;;;;;;;;;;;;:::o;2432:139::-;2495:4;2511:32;2521:10;2533:2;2537:5;2511:9;:32::i;:::-;2560:4;2553:11;;2432:139;;;;:::o;2914:726::-;3127:15;3115:8;:27;;3107:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3173:14;3275:16;;665:66;3330:15;;3347:5;3354:7;3363:5;3370:6;:13;3377:5;3370:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3387:8;3319:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3319:77:6;;;3309:88;;;;;;3213:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3213:198:6;;;3190:231;;;;;;3173:248;;3431:24;3458:26;3468:6;3476:1;3479;3482;3458:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3458:26:6;;;;;;;;3431:53;;3530:1;3502:30;;:16;:30;;;;:59;;;;;3556:5;3536:25;;:16;:25;;;3502:59;3494:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3602:31;3611:5;3618:7;3627:5;3602:8;:31::i;:::-;2914:726;;;;;;;;;:::o;411:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:199::-;1960:5;1932:9;:16;1942:5;1932:16;;;;;;;;;;;;;;;:25;1949:7;1932:25;;;;;;;;;;;;;;;:33;;;;1996:7;1980:31;;1989:5;1980:31;;;2005:5;1980:31;;;;;;;;;;;;;;;;;;1819:199;;;:::o;339:136:8:-;397:9;441:1;435;431;:5;427:9;;;426:16;;418:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:136;;;;:::o;2024:249:6:-;2150:26;2170:5;2150:9;:15;2160:4;2150:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2132:9;:15;2142:4;2132:15;;;;;;;;;;;;;;;:44;;;;2202:24;2220:5;2202:9;:13;2212:2;2202:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2186:9;:13;2196:2;2186:13;;;;;;;;;;;;;;;:40;;;;2256:2;2241:25;;2250:4;2241:25;;;2260:5;2241:25;;;;;;;;;;;;;;;;;;2024:249;;;:::o;198:135:8:-;256:9;300:1;294;290;:5;286:9;;;285:16;;277:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:135;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "787400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1028",
								"PERMIT_TYPEHASH()": "300",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1214",
								"decimals()": "328",
								"name()": "infinite",
								"nonces(address)": "1236",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 3642,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "MSTORE"
								},
								{
									"begin": 946,
									"end": 1393,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 946,
									"end": 1393,
									"name": "POP"
								},
								{
									"begin": 977,
									"end": 992,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1036,
									"end": 1043,
									"name": "CHAINID"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "SWAP1"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "MLOAD"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP2"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "CODECOPY"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "MLOAD"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP2"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SUB"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "KECCAK256"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MLOAD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP1"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP1"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP2"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "50616E63616B65204C5073000000000000000000000000000000000000000000"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP2"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "POP"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "DUP1"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "MLOAD"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "SWAP1"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "ADD"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "KECCAK256"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MLOAD"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP1"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "ADD"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MSTORE"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP1"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP2"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MSTORE"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "ADD"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP2"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MSTORE"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "POP"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "DUP1"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "MLOAD"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "SWAP1"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "ADD"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "KECCAK256"
								},
								{
									"begin": 1324,
									"end": 1331,
									"name": "DUP4"
								},
								{
									"begin": 1357,
									"end": 1361,
									"name": "ADDRESS"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP7"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP6"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP5"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP4"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP3"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "AND"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "AND"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "SWAP6"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "DUP1"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "MLOAD"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "SWAP1"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "ADD"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "KECCAK256"
								},
								{
									"begin": 1062,
									"end": 1078,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "DUP2"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "SWAP1"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "SSTORE"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "POP"
								},
								{
									"begin": 946,
									"end": 1393,
									"name": "POP"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "DUP1"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "CODECOPY"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 114,
									"end": 3642,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203f1949f5776b422988dae90e90e421f777b95e25dc382e5d0adde6814e44f50864736f6c63430005100032",
									".code": [
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "MSTORE"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "POP"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "LT"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "SHR"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "GT"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "GT"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMP"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPDEST"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMP"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPDEST"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "EQ"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPI"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "JUMPDEST"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "DUP1"
										},
										{
											"begin": 114,
											"end": 3642,
											"name": "REVERT"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ISZERO"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPI"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "EXP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "NOT"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "RETURN"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "MLOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "MLOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SUB"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "RETURN"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP3"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "MSTORE"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "ADD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SUB"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "RETURN"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "AND"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "AND"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "MLOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "MSTORE"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "MLOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SUB"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "RETURN"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "MLOAD"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP3"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SWAP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "MLOAD"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SWAP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SUB"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "RETURN"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP3"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MSTORE"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SUB"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "RETURN"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP3"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SUB"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "RETURN"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "AND"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP3"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MLOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP3"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MLOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SUB"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "RETURN"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP3"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP3"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "RETURN"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "AND"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ISZERO"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "EXP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "NOT"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "AND"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "RETURN"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "AND"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "MLOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "MSTORE"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "MLOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SUB"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "RETURN"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "AND"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "AND"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "AND"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "STOP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "AND"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "AND"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MLOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP3"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MLOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SUB"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "RETURN"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "50616E63616B65204C5073000000000000000000000000000000000000000000"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2346,
											"end": 2350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2371,
											"end": 2381,
											"name": "CALLER"
										},
										{
											"begin": 2383,
											"end": 2390,
											"name": "DUP5"
										},
										{
											"begin": 2392,
											"end": 2397,
											"name": "DUP5"
										},
										{
											"begin": 2362,
											"end": 2370,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "JUMPDEST"
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "SWAP1"
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SLOAD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2722,
											"name": "DUP7"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "KECCAK256"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2734,
											"name": "CALLER"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "KECCAK256"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "SLOAD"
										},
										{
											"begin": 2708,
											"end": 2750,
											"name": "EQ"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "DUP8"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "KECCAK256"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2822,
											"name": "CALLER"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "KECCAK256"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "JUMPDEST"
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "DUP7"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "SWAP1"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "KECCAK256"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2792,
											"name": "CALLER"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "SWAP1"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "KECCAK256"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "SWAP1"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "SSTORE"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "POP"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "JUMPDEST"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2864,
											"end": 2868,
											"name": "DUP5"
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "DUP5"
										},
										{
											"begin": 2874,
											"end": 2879,
											"name": "DUP5"
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "JUMPDEST"
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "SWAP1"
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP4"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SHL"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SLOAD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "KECCAK256"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SLOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "KECCAK256"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SLOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "43616B652D4C5000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2521,
											"end": 2531,
											"name": "CALLER"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "DUP5"
										},
										{
											"begin": 2537,
											"end": 2542,
											"name": "DUP5"
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "JUMPDEST"
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2564,
											"name": "SWAP1"
										},
										{
											"begin": 2553,
											"end": 2564,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMPDEST"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3115,
											"end": 3123,
											"name": "DUP5"
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "LT"
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "JUMPI"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP3"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SUB"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP3"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "50616E63616B653A204558504952454400000000000000000000000000000000"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SUB"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "REVERT"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3173,
											"end": 3187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3291,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3275,
											"end": 3291,
											"name": "SLOAD"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SHL"
										},
										{
											"begin": 3347,
											"end": 3352,
											"name": "DUP10"
										},
										{
											"begin": 3354,
											"end": 3361,
											"name": "DUP10"
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP10"
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP15"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "KECCAK256"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SLOAD"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "DUP1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP3"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP2"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP2"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "POP"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SSTORE"
										},
										{
											"begin": 3387,
											"end": 3395,
											"name": "DUP11"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MLOAD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP1"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP8"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP7"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP6"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP5"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP4"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP3"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "SWAP7"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "DUP1"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "MLOAD"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "SWAP1"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "ADD"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "KECCAK256"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP4"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP3"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "DUP1"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "MLOAD"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "KECCAK256"
										},
										{
											"begin": 3173,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3421,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3468,
											"end": 3474,
											"name": "DUP3"
										},
										{
											"begin": 3476,
											"end": 3477,
											"name": "DUP7"
										},
										{
											"begin": 3479,
											"end": 3480,
											"name": "DUP7"
										},
										{
											"begin": 3482,
											"end": 3483,
											"name": "DUP7"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP6"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP5"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "AND"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "AND"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP4"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP3"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SWAP5"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP5"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP6"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "GAS"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "STATICCALL"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "AND"
										},
										{
											"begin": 3502,
											"end": 3518,
											"name": "DUP2"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "AND"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "ISZERO"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "ISZERO"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "POP"
										},
										{
											"begin": 3556,
											"end": 3561,
											"name": "DUP9"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "AND"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "AND"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "JUMPDEST"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "JUMPI"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MLOAD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP3"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SUB"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP3"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SWAP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MLOAD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SWAP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SUB"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SWAP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "REVERT"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "JUMPDEST"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP10"
										},
										{
											"begin": 3618,
											"end": 3625,
											"name": "DUP10"
										},
										{
											"begin": 3627,
											"end": 3632,
											"name": "DUP10"
										},
										{
											"begin": 3602,
											"end": 3610,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "KECCAK256"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "KECCAK256"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SLOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "JUMPDEST"
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "DUP1"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1947,
											"name": "DUP6"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "KECCAK256"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP5"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "KECCAK256"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SSTORE"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "POP"
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "DUP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 1994,
											"name": "DUP4"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "AND"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP4"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "MLOAD"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP1"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP3"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "MSTORE"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "ADD"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SWAP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "POP"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "POP"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "MLOAD"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP1"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SWAP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SUB"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SWAP1"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "LOG3"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "JUMPDEST"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "DUP7"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "KECCAK256"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "SLOAD"
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "SWAP2"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "JUMPDEST"
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP6"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "ADD"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "SWAP1"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "ADD"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "KECCAK256"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "SWAP1"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "SSTORE"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "POP"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "DUP6"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "KECCAK256"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "SLOAD"
										},
										{
											"begin": 2202,
											"end": 2219,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2202,
											"end": 2219,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "SWAP2"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST"
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "DUP5"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "AND"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "AND"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "DUP2"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "MSTORE"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "ADD"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "SWAP1"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "DUP2"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "MSTORE"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "ADD"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "KECCAK256"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "SSTORE"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2256,
											"end": 2258,
											"name": "DUP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "AND"
										},
										{
											"begin": 2250,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "AND"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2260,
											"end": 2265,
											"name": "DUP4"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "MLOAD"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP1"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP3"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "MSTORE"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "ADD"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "POP"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "POP"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "MLOAD"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP1"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SUB"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP1"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "LOG3"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP5"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP3"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PancakeERC20.sol\":\"PancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IPancakeERC20.sol\":{\"keccak256\":\"0x8f7a6ef0761584fa011d9e5f5160f35993fde3a08a64ea921d1ac4553255bc47\",\"urls\":[\"bzz-raw://8b60a23f5c9e440bdc2ade2fc5ce28a62c23bc7c1b37ab61ea5c5f4cef8d8005\",\"dweb:/ipfs/QmTUhKMtXKSE9V4MVswkC7deV4cyE9WUGo8ZKvopypHkgo\"]},\"PancakeERC20.sol\":{\"keccak256\":\"0x51a5303c0c986c866deb1309ed4010d42a4a2c1c5d0577455c055d1aebdabd40\",\"urls\":[\"bzz-raw://f530e85a553de8cf9593289d288633180fda37fa5e0d1cf957b584139c5b8527\",\"dweb:/ipfs/QmdYoedWfvxJsS87Zy4r9PeusQ5j5E15vaocAc3ttoDcmu\"]},\"SafeMath.sol\":{\"keccak256\":\"0xc182f29fa8b894424cf4fc5d582c22e20e9f42cca618e4342d6ddede14f3ccea\",\"urls\":[\"bzz-raw://e868b4e385f1b6ef00ffcf663c03cb3783423177e079dceda7705fd4b148b9f7\",\"dweb:/ipfs/QmPfqwJYb6dzWCiigagK5Eb2XFohyxGWPD13wEaU4jSfNn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 621,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 625,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 631,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 633,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 640,
								"contract": "PancakeERC20.sol:PancakeERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"PancakePair.sol": {
				"PancakePair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PancakePair.sol\":254:9740  contract PancakePair is IPancakePair, PancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"PancakePair.sol\":1098:1099  1 */\n  0x01\n    /* \"PancakePair.sol\":1074:1099  uint private unlocked = 1 */\n  0x0c\n  sstore\n    /* \"PancakePair.sol\":2150:2208  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"PancakePair.sol\":2150:2208  constructor() public {... */\n  pop\n    /* \"PancakeERC20.sol\":977:992  uint256 chainId */\n  0x00\n    /* \"PancakeERC20.sol\":1036:1043  chainid */\n  chainid\n    /* \"PancakeERC20.sol\":1025:1043  chainId := chainid */\n  swap1\n  pop\n    /* \"PancakeERC20.sol\":1132:1227  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  mload(0x40)\n  dup1\n  dup1\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  0x52\n  swap2\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"PancakeERC20.sol\":1261:1265  name */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x50616e63616b65204c5073000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PancakeERC20.sol\":1245:1267  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1295:1305  bytes(\"1\") */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"PancakeERC20.sol\":1285:1306  keccak256(bytes(\"1\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1324:1331  chainId */\n  dup4\n    /* \"PancakeERC20.sol\":1357:1361  this */\n  address\n    /* \"PancakeERC20.sol\":1104:1376  abi.encode(... */\n  add(0x20, mload(0x40))\n  dup1\n  dup7\n  dup2\n  mstore\n  0x20\n  add\n  dup6\n  dup2\n  mstore\n  0x20\n  add\n  dup5\n  dup2\n  mstore\n  0x20\n  add\n  dup4\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"PancakeERC20.sol\":1104:1376  abi.encode(... */\n  swap1\n  0x40\n  mstore\n    /* \"PancakeERC20.sol\":1081:1386  keccak256(... */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"PancakeERC20.sol\":1062:1078  DOMAIN_SEPARATOR */\n  0x03\n    /* \"PancakeERC20.sol\":1062:1386  DOMAIN_SEPARATOR = keccak256(... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PancakeERC20.sol\":946:1393  constructor() public {... */\n  pop\n    /* \"PancakePair.sol\":2191:2201  msg.sender */\n  caller\n    /* \"PancakePair.sol\":2181:2188  factory */\n  0x05\n  0x00\n    /* \"PancakePair.sol\":2181:2201  factory = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PancakePair.sol\":254:9740  contract PancakePair is IPancakePair, PancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"PancakePair.sol\":254:9740  contract PancakePair is IPancakePair, PancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"PancakePair.sol\":254:9740  contract PancakePair is IPancakePair, PancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a627842\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xba9a7a56\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd21220a7\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xba9a7a56\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbc25cf77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x7ecebe00\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x6a627842\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x23b872dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x3644e515\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5909c0d5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5a3d5493\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PancakePair.sol\":7305:9161  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"PancakePair.sol\":7305:9161  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"PancakePair.sol\":7305:9161  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"PancakePair.sol\":7305:9161  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_40:\n        /* \"PancakePair.sol\":7305:9161  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_36:\n      stop\n        /* \"PancakeERC20.sol\":192:235  string public constant name = \"Pancake LPs\" */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_44:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_44)\n    tag_46:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":192:235  string public constant name = \"Pancake LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_47:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":1240:1467  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":550:571  address public token0 */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":329:355  uint256 public totalSupply */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_10:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":288:323  uint8 public constant decimals = 18 */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":482:513  bytes32 public DOMAIN_SEPARATOR */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":2270:2474  function initialize(address _token0, address _token1) external {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n        /* \"PancakePair.sol\":2270:2474  function initialize(address _token0, address _token1) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"PancakePair.sol\":894:926  uint public price0CumulativeLast */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":932:964  uint public price1CumulativeLast */\n    tag_15:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":4428:5645  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"PancakePair.sol\":4428:5645  function mint(address to) external lock returns (uint liquidity) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":361:405  mapping(address => uint256) public balanceOf */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"PancakeERC20.sol\":361:405  mapping(address => uint256) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":970:987  uint public kLast */\n    tag_18:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":737:778  mapping(address => uint256) public nonces */\n    tag_19:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n        /* \"PancakeERC20.sol\":737:778  mapping(address => uint256) public nonces */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":5754:7196  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n        /* \"PancakePair.sol\":5754:7196  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":241:282  string public constant symbol = \"Cake-LP\" */\n    tag_21:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_89:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_89)\n    tag_91:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"PancakeERC20.sol\":241:282  string public constant symbol = \"Cake-LP\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_92:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_22:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_94:\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":375:421  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_23:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":9207:9536  function skim(address to) external lock {... */\n    tag_24:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_99:\n        /* \"PancakePair.sol\":9207:9536  function skim(address to) external lock {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"PancakePair.sol\":522:544  address public factory */\n    tag_25:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":577:598  address public token1 */\n    tag_26:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n    tag_27:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"PancakeERC20.sol\":411:475  mapping(address => mapping(address => uint256)) public allowance */\n    tag_28:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n        /* \"PancakeERC20.sol\":411:475  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PancakePair.sol\":9582:9738  function sync() external lock {... */\n    tag_29:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      stop\n        /* \"PancakePair.sol\":7305:9161  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n    tag_41:\n        /* \"PancakePair.sol\":1151:1152  1 */\n      0x01\n        /* \"PancakePair.sol\":1139:1147  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1139:1152  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1131:1172  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"PancakePair.sol\":1193:1194  0 */\n      0x00\n        /* \"PancakePair.sol\":1182:1190  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1182:1194  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":7431:7432  0 */\n      0x00\n        /* \"PancakePair.sol\":7418:7428  amount0Out */\n      dup6\n        /* \"PancakePair.sol\":7418:7432  amount0Out > 0 */\n      gt\n        /* \"PancakePair.sol\":7418:7450  amount0Out > 0 || amount1Out > 0 */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \"PancakePair.sol\":7449:7450  0 */\n      0x00\n        /* \"PancakePair.sol\":7436:7446  amount1Out */\n      dup5\n        /* \"PancakePair.sol\":7436:7450  amount1Out > 0 */\n      gt\n        /* \"PancakePair.sol\":7418:7450  amount0Out > 0 || amount1Out > 0 */\n    tag_116:\n        /* \"PancakePair.sol\":7410:7490  require(amount0Out > 0 || amount1Out > 0, 'Pancake: INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"PancakePair.sol\":7501:7518  uint112 _reserve0 */\n      0x00\n        /* \"PancakePair.sol\":7520:7537  uint112 _reserve1 */\n      dup1\n        /* \"PancakePair.sol\":7542:7555  getReserves() */\n      tag_118\n        /* \"PancakePair.sol\":7542:7553  getReserves */\n      tag_49\n        /* \"PancakePair.sol\":7542:7555  getReserves() */\n      jump\t// in\n    tag_118:\n        /* \"PancakePair.sol\":7500:7555  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"PancakePair.sol\":7601:7610  _reserve0 */\n      dup2\n        /* \"PancakePair.sol\":7588:7610  amount0Out < _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7588:7598  amount0Out */\n      dup8\n        /* \"PancakePair.sol\":7588:7610  amount0Out < _reserve0 */\n      lt\n        /* \"PancakePair.sol\":7588:7636  amount0Out < _reserve0 && amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"PancakePair.sol\":7627:7636  _reserve1 */\n      dup1\n        /* \"PancakePair.sol\":7614:7636  amount1Out < _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7614:7624  amount1Out */\n      dup7\n        /* \"PancakePair.sol\":7614:7636  amount1Out < _reserve1 */\n      lt\n        /* \"PancakePair.sol\":7588:7636  amount0Out < _reserve0 && amount1Out < _reserve1 */\n    tag_119:\n        /* \"PancakePair.sol\":7580:7672  require(amount0Out < _reserve0 && amount1Out < _reserve1, 'Pancake: INSUFFICIENT_LIQUIDITY') */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e53554646494349454e545f4c495155494449545900\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"PancakePair.sol\":7683:7696  uint balance0 */\n      0x00\n        /* \"PancakePair.sol\":7706:7719  uint balance1 */\n      dup1\n        /* \"PancakePair.sol\":7794:7809  address _token0 */\n      0x00\n        /* \"PancakePair.sol\":7812:7818  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7794:7818  address _token0 = token0 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":7828:7843  address _token1 */\n      0x00\n        /* \"PancakePair.sol\":7846:7852  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7828:7852  address _token1 = token1 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":7876:7883  _token0 */\n      dup2\n        /* \"PancakePair.sol\":7870:7883  to != _token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7870:7872  to */\n      dup10\n        /* \"PancakePair.sol\":7870:7883  to != _token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakePair.sol\":7870:7900  to != _token0 && to != _token1 */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"PancakePair.sol\":7893:7900  _token1 */\n      dup1\n        /* \"PancakePair.sol\":7887:7900  to != _token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7887:7889  to */\n      dup10\n        /* \"PancakePair.sol\":7887:7900  to != _token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakePair.sol\":7870:7900  to != _token0 && to != _token1 */\n    tag_121:\n        /* \"PancakePair.sol\":7862:7924  require(to != _token0 && to != _token1, 'Pancake: INVALID_TO') */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e56414c49445f544f00000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"PancakePair.sol\":7951:7952  0 */\n      0x00\n        /* \"PancakePair.sol\":7938:7948  amount0Out */\n      dup12\n        /* \"PancakePair.sol\":7938:7952  amount0Out > 0 */\n      gt\n        /* \"PancakePair.sol\":7934:7992  if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out) */\n      iszero\n      tag_123\n      jumpi\n        /* \"PancakePair.sol\":7954:7992  _safeTransfer(_token0, to, amount0Out) */\n      tag_124\n        /* \"PancakePair.sol\":7968:7975  _token0 */\n      dup3\n        /* \"PancakePair.sol\":7977:7979  to */\n      dup11\n        /* \"PancakePair.sol\":7981:7991  amount0Out */\n      dup14\n        /* \"PancakePair.sol\":7954:7967  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":7954:7992  _safeTransfer(_token0, to, amount0Out) */\n      jump\t// in\n    tag_124:\n        /* \"PancakePair.sol\":7934:7992  if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out) */\n    tag_123:\n        /* \"PancakePair.sol\":8053:8054  0 */\n      0x00\n        /* \"PancakePair.sol\":8040:8050  amount1Out */\n      dup11\n        /* \"PancakePair.sol\":8040:8054  amount1Out > 0 */\n      gt\n        /* \"PancakePair.sol\":8036:8094  if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out) */\n      iszero\n      tag_126\n      jumpi\n        /* \"PancakePair.sol\":8056:8094  _safeTransfer(_token1, to, amount1Out) */\n      tag_127\n        /* \"PancakePair.sol\":8070:8077  _token1 */\n      dup2\n        /* \"PancakePair.sol\":8079:8081  to */\n      dup11\n        /* \"PancakePair.sol\":8083:8093  amount1Out */\n      dup13\n        /* \"PancakePair.sol\":8056:8069  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":8056:8094  _safeTransfer(_token1, to, amount1Out) */\n      jump\t// in\n    tag_127:\n        /* \"PancakePair.sol\":8036:8094  if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out) */\n    tag_126:\n        /* \"PancakePair.sol\":8156:8157  0 */\n      0x00\n        /* \"PancakePair.sol\":8142:8146  data */\n      dup9\n      dup9\n        /* \"PancakePair.sol\":8142:8153  data.length */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8142:8157  data.length > 0 */\n      gt\n        /* \"PancakePair.sol\":8138:8231  if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      iszero\n      tag_128\n      jumpi\n        /* \"PancakePair.sol\":8174:8176  to */\n      dup9\n        /* \"PancakePair.sol\":8159:8189  IPancakeCallee(to).pancakeCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x84800812\n        /* \"PancakePair.sol\":8190:8200  msg.sender */\n      caller\n        /* \"PancakePair.sol\":8202:8212  amount0Out */\n      dup14\n        /* \"PancakePair.sol\":8214:8224  amount1Out */\n      dup14\n        /* \"PancakePair.sol\":8226:8230  data */\n      dup13\n      dup13\n        /* \"PancakePair.sol\":8159:8231  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"PancakePair.sol\":8159:8231  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_129:\n        /* \"PancakePair.sol\":8159:8231  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_130:\n        /* \"PancakePair.sol\":8159:8231  IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n      pop\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":8138:8231  if (data.length > 0) IPancakeCallee(to).pancakeCall(msg.sender, amount0Out, amount1Out, data) */\n    tag_128:\n        /* \"PancakePair.sol\":8259:8266  _token0 */\n      dup2\n        /* \"PancakePair.sol\":8252:8277  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":8286:8290  this */\n      address\n        /* \"PancakePair.sol\":8252:8292  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_131:\n        /* \"PancakePair.sol\":8252:8292  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_132:\n        /* \"PancakePair.sol\":8252:8292  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_133:\n        /* \"PancakePair.sol\":8252:8292  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":8241:8292  balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap4\n      pop\n        /* \"PancakePair.sol\":8320:8327  _token1 */\n      dup1\n        /* \"PancakePair.sol\":8313:8338  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":8347:8351  this */\n      address\n        /* \"PancakePair.sol\":8313:8353  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_134:\n        /* \"PancakePair.sol\":8313:8353  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n        /* \"PancakePair.sol\":8313:8353  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_136\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_136:\n        /* \"PancakePair.sol\":8313:8353  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":8302:8353  balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap3\n      pop\n        /* \"PancakePair.sol\":1204:1205  _ */\n      pop\n      pop\n        /* \"PancakePair.sol\":8373:8387  uint amount0In */\n      0x00\n        /* \"PancakePair.sol\":8413:8423  amount0Out */\n      dup10\n        /* \"PancakePair.sol\":8401:8410  _reserve0 */\n      dup6\n        /* \"PancakePair.sol\":8401:8423  _reserve0 - amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PancakePair.sol\":8390:8398  balance0 */\n      dup4\n        /* \"PancakePair.sol\":8390:8423  balance0 > _reserve0 - amount0Out */\n      gt\n        /* \"PancakePair.sol\":8390:8465  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      tag_137\n      jumpi\n        /* \"PancakePair.sol\":8464:8465  0 */\n      0x00\n        /* \"PancakePair.sol\":8390:8465  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      jump(tag_138)\n    tag_137:\n        /* \"PancakePair.sol\":8450:8460  amount0Out */\n      dup10\n        /* \"PancakePair.sol\":8438:8447  _reserve0 */\n      dup6\n        /* \"PancakePair.sol\":8438:8460  _reserve0 - amount0Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PancakePair.sol\":8426:8434  balance0 */\n      dup4\n        /* \"PancakePair.sol\":8426:8461  balance0 - (_reserve0 - amount0Out) */\n      sub\n        /* \"PancakePair.sol\":8390:8465  balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n    tag_138:\n        /* \"PancakePair.sol\":8373:8465  uint amount0In = balance0 > _reserve0 - amount0Out ? balance0 - (_reserve0 - amount0Out) : 0 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8475:8489  uint amount1In */\n      0x00\n        /* \"PancakePair.sol\":8515:8525  amount1Out */\n      dup10\n        /* \"PancakePair.sol\":8503:8512  _reserve1 */\n      dup6\n        /* \"PancakePair.sol\":8503:8525  _reserve1 - amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PancakePair.sol\":8492:8500  balance1 */\n      dup4\n        /* \"PancakePair.sol\":8492:8525  balance1 > _reserve1 - amount1Out */\n      gt\n        /* \"PancakePair.sol\":8492:8567  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      tag_139\n      jumpi\n        /* \"PancakePair.sol\":8566:8567  0 */\n      0x00\n        /* \"PancakePair.sol\":8492:8567  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      jump(tag_140)\n    tag_139:\n        /* \"PancakePair.sol\":8552:8562  amount1Out */\n      dup10\n        /* \"PancakePair.sol\":8540:8549  _reserve1 */\n      dup6\n        /* \"PancakePair.sol\":8540:8562  _reserve1 - amount1Out */\n      0xffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PancakePair.sol\":8528:8536  balance1 */\n      dup4\n        /* \"PancakePair.sol\":8528:8563  balance1 - (_reserve1 - amount1Out) */\n      sub\n        /* \"PancakePair.sol\":8492:8567  balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n    tag_140:\n        /* \"PancakePair.sol\":8475:8567  uint amount1In = balance1 > _reserve1 - amount1Out ? balance1 - (_reserve1 - amount1Out) : 0 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8597:8598  0 */\n      0x00\n        /* \"PancakePair.sol\":8585:8594  amount0In */\n      dup3\n        /* \"PancakePair.sol\":8585:8598  amount0In > 0 */\n      gt\n        /* \"PancakePair.sol\":8585:8615  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"PancakePair.sol\":8614:8615  0 */\n      0x00\n        /* \"PancakePair.sol\":8602:8611  amount1In */\n      dup2\n        /* \"PancakePair.sol\":8602:8615  amount1In > 0 */\n      gt\n        /* \"PancakePair.sol\":8585:8615  amount0In > 0 || amount1In > 0 */\n    tag_141:\n        /* \"PancakePair.sol\":8577:8654  require(amount0In > 0 || amount1In > 0, 'Pancake: INSUFFICIENT_INPUT_AMOUNT') */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"PancakePair.sol\":8738:8759  uint balance0Adjusted */\n      0x00\n        /* \"PancakePair.sol\":8763:8805  balance0.mul(10000).sub(amount0In.mul(25)) */\n      tag_143\n        /* \"PancakePair.sol\":8787:8804  amount0In.mul(25) */\n      tag_144\n        /* \"PancakePair.sol\":8801:8803  25 */\n      0x19\n        /* \"PancakePair.sol\":8787:8796  amount0In */\n      dup6\n        /* \"PancakePair.sol\":8787:8800  amount0In.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":8787:8804  amount0In.mul(25) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"PancakePair.sol\":8763:8782  balance0.mul(10000) */\n      tag_146\n        /* \"PancakePair.sol\":8776:8781  10000 */\n      0x2710\n        /* \"PancakePair.sol\":8763:8771  balance0 */\n      dup9\n        /* \"PancakePair.sol\":8763:8775  balance0.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":8763:8782  balance0.mul(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"PancakePair.sol\":8763:8786  balance0.mul(10000).sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":8763:8805  balance0.mul(10000).sub(amount0In.mul(25)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"PancakePair.sol\":8738:8806  uint balance0Adjusted = (balance0.mul(10000).sub(amount0In.mul(25))) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8816:8837  uint balance1Adjusted */\n      0x00\n        /* \"PancakePair.sol\":8841:8883  balance1.mul(10000).sub(amount1In.mul(25)) */\n      tag_148\n        /* \"PancakePair.sol\":8865:8882  amount1In.mul(25) */\n      tag_149\n        /* \"PancakePair.sol\":8879:8881  25 */\n      0x19\n        /* \"PancakePair.sol\":8865:8874  amount1In */\n      dup6\n        /* \"PancakePair.sol\":8865:8878  amount1In.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":8865:8882  amount1In.mul(25) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"PancakePair.sol\":8841:8860  balance1.mul(10000) */\n      tag_150\n        /* \"PancakePair.sol\":8854:8859  10000 */\n      0x2710\n        /* \"PancakePair.sol\":8841:8849  balance1 */\n      dup9\n        /* \"PancakePair.sol\":8841:8853  balance1.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":8841:8860  balance1.mul(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"PancakePair.sol\":8841:8864  balance1.mul(10000).sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":8841:8883  balance1.mul(10000).sub(amount1In.mul(25)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"PancakePair.sol\":8816:8884  uint balance1Adjusted = (balance1.mul(10000).sub(amount1In.mul(25))) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":8944:8988  uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      tag_151\n        /* \"PancakePair.sol\":8979:8987  10000**2 */\n      0x05f5e100\n        /* \"PancakePair.sol\":8944:8974  uint(_reserve0).mul(_reserve1) */\n      tag_152\n        /* \"PancakePair.sol\":8964:8973  _reserve1 */\n      dup10\n        /* \"PancakePair.sol\":8944:8974  uint(_reserve0).mul(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":8949:8958  _reserve0 */\n      dup12\n        /* \"PancakePair.sol\":8944:8959  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":8944:8963  uint(_reserve0).mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":8944:8974  uint(_reserve0).mul(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"PancakePair.sol\":8944:8978  uint(_reserve0).mul(_reserve1).mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":8944:8988  uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"PancakePair.sol\":8902:8940  balance0Adjusted.mul(balance1Adjusted) */\n      tag_153\n        /* \"PancakePair.sol\":8923:8939  balance1Adjusted */\n      dup3\n        /* \"PancakePair.sol\":8902:8918  balance0Adjusted */\n      dup5\n        /* \"PancakePair.sol\":8902:8922  balance0Adjusted.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":8902:8940  balance0Adjusted.mul(balance1Adjusted) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"PancakePair.sol\":8902:8988  balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2) */\n      lt\n      iszero\n        /* \"PancakePair.sol\":8894:9003  require(balance0Adjusted.mul(balance1Adjusted) >= uint(_reserve0).mul(_reserve1).mul(10000**2), 'Pancake: K') */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204b00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"PancakePair.sol\":1204:1205  _ */\n      pop\n      pop\n        /* \"PancakePair.sol\":9024:9073  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_155\n        /* \"PancakePair.sol\":9032:9040  balance0 */\n      dup5\n        /* \"PancakePair.sol\":9042:9050  balance1 */\n      dup5\n        /* \"PancakePair.sol\":9052:9061  _reserve0 */\n      dup9\n        /* \"PancakePair.sol\":9063:9072  _reserve1 */\n      dup9\n        /* \"PancakePair.sol\":9024:9031  _update */\n      tag_156\n        /* \"PancakePair.sol\":9024:9073  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_155:\n        /* \"PancakePair.sol\":9151:9153  to */\n      dup9\n        /* \"PancakePair.sol\":9088:9154  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9093:9103  msg.sender */\n      caller\n        /* \"PancakePair.sol\":9088:9154  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n        /* \"PancakePair.sol\":9105:9114  amount0In */\n      dup5\n        /* \"PancakePair.sol\":9116:9125  amount1In */\n      dup5\n        /* \"PancakePair.sol\":9127:9137  amount0Out */\n      dup16\n        /* \"PancakePair.sol\":9139:9149  amount1Out */\n      dup16\n        /* \"PancakePair.sol\":9088:9154  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakePair.sol\":1204:1205  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1226:1227  1 */\n      0x01\n        /* \"PancakePair.sol\":1215:1223  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1215:1227  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":7305:9161  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external lock {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":192:235  string public constant name = \"Pancake LPs\" */\n    tag_43:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x50616e63616b65204c5073000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":1240:1467  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n    tag_49:\n        /* \"PancakePair.sol\":1284:1301  uint112 _reserve0 */\n      0x00\n        /* \"PancakePair.sol\":1303:1320  uint112 _reserve1 */\n      dup1\n        /* \"PancakePair.sol\":1322:1348  uint32 _blockTimestampLast */\n      0x00\n        /* \"PancakePair.sol\":1372:1380  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":1360:1380  _reserve0 = reserve0 */\n      swap3\n      pop\n        /* \"PancakePair.sol\":1402:1410  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":1390:1410  _reserve1 = reserve1 */\n      swap2\n      pop\n        /* \"PancakePair.sol\":1442:1460  blockTimestampLast */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PancakePair.sol\":1420:1460  _blockTimestampLast = blockTimestampLast */\n      swap1\n      pop\n        /* \"PancakePair.sol\":1240:1467  function getReserves() public view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_52:\n        /* \"PancakeERC20.sol\":2346:2350  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2362:2398  _approve(msg.sender, spender, value) */\n      tag_159\n        /* \"PancakeERC20.sol\":2371:2381  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2383:2390  spender */\n      dup5\n        /* \"PancakeERC20.sol\":2392:2397  value */\n      dup5\n        /* \"PancakeERC20.sol\":2362:2370  _approve */\n      tag_160\n        /* \"PancakeERC20.sol\":2362:2398  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_159:\n        /* \"PancakeERC20.sol\":2415:2419  true */\n      0x01\n        /* \"PancakeERC20.sol\":2408:2419  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2279:2426  function approve(address spender, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":550:571  address public token0 */\n    tag_54:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":329:355  uint256 public totalSupply */\n    tag_56:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n    tag_59:\n        /* \"PancakeERC20.sol\":2688:2692  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2747:2749  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"PancakeERC20.sol\":2708:2717  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2708:2723  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2718:2722  from */\n      dup7\n        /* \"PancakeERC20.sol\":2708:2723  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2708:2735  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2724:2734  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2708:2735  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2708:2750  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"PancakeERC20.sol\":2704:2845  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_162\n      jumpi\n        /* \"PancakeERC20.sol\":2796:2834  allowance[from][msg.sender].sub(value) */\n      tag_163\n        /* \"PancakeERC20.sol\":2828:2833  value */\n      dup3\n        /* \"PancakeERC20.sol\":2796:2805  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2796:2811  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2806:2810  from */\n      dup8\n        /* \"PancakeERC20.sol\":2796:2811  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2796:2823  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2812:2822  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2796:2823  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2796:2827  allowance[from][msg.sender].sub */\n      tag_147\n      swap1\n        /* \"PancakeERC20.sol\":2796:2834  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"PancakeERC20.sol\":2766:2775  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":2766:2781  allowance[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2776:2780  from */\n      dup7\n        /* \"PancakeERC20.sol\":2766:2781  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2766:2793  allowance[from][msg.sender] */\n      0x00\n        /* \"PancakeERC20.sol\":2782:2792  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2766:2793  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2766:2834  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2704:2845  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_162:\n        /* \"PancakeERC20.sol\":2854:2880  _transfer(from, to, value) */\n      tag_164\n        /* \"PancakeERC20.sol\":2864:2868  from */\n      dup5\n        /* \"PancakeERC20.sol\":2870:2872  to */\n      dup5\n        /* \"PancakeERC20.sol\":2874:2879  value */\n      dup5\n        /* \"PancakeERC20.sol\":2854:2863  _transfer */\n      tag_165\n        /* \"PancakeERC20.sol\":2854:2880  _transfer(from, to, value) */\n      jump\t// in\n    tag_164:\n        /* \"PancakeERC20.sol\":2897:2901  true */\n      0x01\n        /* \"PancakeERC20.sol\":2890:2901  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2577:2908  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_61:\n        /* \"PancakeERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":623:731  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":288:323  uint8 public constant decimals = 18 */\n    tag_63:\n        /* \"PancakeERC20.sol\":321:323  18 */\n      0x12\n        /* \"PancakeERC20.sol\":288:323  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":482:513  bytes32 public DOMAIN_SEPARATOR */\n    tag_65:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":2270:2474  function initialize(address _token0, address _token1) external {... */\n    tag_68:\n        /* \"PancakePair.sol\":2365:2372  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":2351:2372  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":2351:2361  msg.sender */\n      caller\n        /* \"PancakePair.sol\":2351:2372  msg.sender == factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PancakePair.sol\":2343:2395  require(msg.sender == factory, 'Pancake: FORBIDDEN') */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20464f5242494444454e0000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"PancakePair.sol\":2434:2441  _token0 */\n      dup2\n        /* \"PancakePair.sol\":2425:2431  token0 */\n      0x06\n      0x00\n        /* \"PancakePair.sol\":2425:2441  token0 = _token0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":2460:2467  _token1 */\n      dup1\n        /* \"PancakePair.sol\":2451:2457  token1 */\n      0x07\n      0x00\n        /* \"PancakePair.sol\":2451:2467  token1 = _token1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":2270:2474  function initialize(address _token0, address _token1) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":894:926  uint public price0CumulativeLast */\n    tag_70:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":932:964  uint public price1CumulativeLast */\n    tag_72:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":4428:5645  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_75:\n        /* \"PancakePair.sol\":4477:4491  uint liquidity */\n      0x00\n        /* \"PancakePair.sol\":1151:1152  1 */\n      0x01\n        /* \"PancakePair.sol\":1139:1147  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1139:1152  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1131:1172  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"PancakePair.sol\":1193:1194  0 */\n      0x00\n        /* \"PancakePair.sol\":1182:1190  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1182:1194  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":4504:4521  uint112 _reserve0 */\n      0x00\n        /* \"PancakePair.sol\":4523:4540  uint112 _reserve1 */\n      dup1\n        /* \"PancakePair.sol\":4545:4558  getReserves() */\n      tag_171\n        /* \"PancakePair.sol\":4545:4556  getReserves */\n      tag_49\n        /* \"PancakePair.sol\":4545:4558  getReserves() */\n      jump\t// in\n    tag_171:\n        /* \"PancakePair.sol\":4503:4558  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"PancakePair.sol\":4583:4596  uint balance0 */\n      0x00\n        /* \"PancakePair.sol\":4606:4612  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":4599:4623  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":4632:4636  this */\n      address\n        /* \"PancakePair.sol\":4599:4638  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_172:\n        /* \"PancakePair.sol\":4599:4638  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_173:\n        /* \"PancakePair.sol\":4599:4638  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_174:\n        /* \"PancakePair.sol\":4599:4638  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":4583:4638  uint balance0 = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4648:4661  uint balance1 */\n      0x00\n        /* \"PancakePair.sol\":4671:4677  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":4664:4688  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":4697:4701  this */\n      address\n        /* \"PancakePair.sol\":4664:4703  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"PancakePair.sol\":4664:4703  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n        /* \"PancakePair.sol\":4664:4703  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_177\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_177:\n        /* \"PancakePair.sol\":4664:4703  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":4648:4703  uint balance1 = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4713:4725  uint amount0 */\n      0x00\n        /* \"PancakePair.sol\":4728:4751  balance0.sub(_reserve0) */\n      tag_178\n        /* \"PancakePair.sol\":4741:4750  _reserve0 */\n      dup6\n        /* \"PancakePair.sol\":4728:4751  balance0.sub(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":4728:4736  balance0 */\n      dup5\n        /* \"PancakePair.sol\":4728:4740  balance0.sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":4728:4751  balance0.sub(_reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"PancakePair.sol\":4713:4751  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4761:4773  uint amount1 */\n      0x00\n        /* \"PancakePair.sol\":4776:4799  balance1.sub(_reserve1) */\n      tag_179\n        /* \"PancakePair.sol\":4789:4798  _reserve1 */\n      dup6\n        /* \"PancakePair.sol\":4776:4799  balance1.sub(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":4776:4784  balance1 */\n      dup5\n        /* \"PancakePair.sol\":4776:4788  balance1.sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":4776:4799  balance1.sub(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"PancakePair.sol\":4761:4799  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4810:4820  bool feeOn */\n      0x00\n        /* \"PancakePair.sol\":4823:4853  _mintFee(_reserve0, _reserve1) */\n      tag_180\n        /* \"PancakePair.sol\":4832:4841  _reserve0 */\n      dup8\n        /* \"PancakePair.sol\":4843:4852  _reserve1 */\n      dup8\n        /* \"PancakePair.sol\":4823:4831  _mintFee */\n      tag_181\n        /* \"PancakePair.sol\":4823:4853  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_180:\n        /* \"PancakePair.sol\":4810:4853  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4863:4880  uint _totalSupply */\n      0x00\n        /* \"PancakePair.sol\":4883:4894  totalSupply */\n      dup1\n      sload\n        /* \"PancakePair.sol\":4863:4894  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"PancakePair.sol\":5002:5003  0 */\n      0x00\n        /* \"PancakePair.sol\":4986:4998  _totalSupply */\n      dup2\n        /* \"PancakePair.sol\":4986:5003  _totalSupply == 0 */\n      eq\n        /* \"PancakePair.sol\":4982:5329  if (_totalSupply == 0) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"PancakePair.sol\":5031:5085  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_183\n        /* \"PancakePair.sol\":416:421  10**3 */\n      0x03e8\n        /* \"PancakePair.sol\":5031:5062  Math.sqrt(amount0.mul(amount1)) */\n      tag_184\n        /* \"PancakePair.sol\":5041:5061  amount0.mul(amount1) */\n      tag_185\n        /* \"PancakePair.sol\":5053:5060  amount1 */\n      dup7\n        /* \"PancakePair.sol\":5041:5048  amount0 */\n      dup9\n        /* \"PancakePair.sol\":5041:5052  amount0.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":5041:5061  amount0.mul(amount1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"PancakePair.sol\":5031:5040  Math.sqrt */\n      tag_186\n        /* \"PancakePair.sol\":5031:5062  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n    tag_184:\n        /* \"PancakePair.sol\":5031:5066  Math.sqrt(amount0.mul(amount1)).sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":5031:5085  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"PancakePair.sol\":5019:5085  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"PancakePair.sol\":5098:5134  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_187\n        /* \"PancakePair.sol\":5112:5113  0 */\n      0x00\n        /* \"PancakePair.sol\":416:421  10**3 */\n      0x03e8\n        /* \"PancakePair.sol\":5098:5103  _mint */\n      tag_188\n        /* \"PancakePair.sol\":5098:5134  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_187:\n        /* \"PancakePair.sol\":4982:5329  if (_totalSupply == 0) {... */\n      jump(tag_189)\n    tag_182:\n        /* \"PancakePair.sol\":5232:5318  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      tag_190\n        /* \"PancakePair.sol\":5269:5278  _reserve0 */\n      dup9\n        /* \"PancakePair.sol\":5241:5278  amount0.mul(_totalSupply) / _reserve0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":5241:5266  amount0.mul(_totalSupply) */\n      tag_191\n        /* \"PancakePair.sol\":5253:5265  _totalSupply */\n      dup4\n        /* \"PancakePair.sol\":5241:5248  amount0 */\n      dup8\n        /* \"PancakePair.sol\":5241:5252  amount0.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":5241:5266  amount0.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"PancakePair.sol\":5241:5278  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_192\n      jumpi\n      invalid\n    tag_192:\n      div\n        /* \"PancakePair.sol\":5308:5317  _reserve1 */\n      dup9\n        /* \"PancakePair.sol\":5280:5317  amount1.mul(_totalSupply) / _reserve1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":5280:5305  amount1.mul(_totalSupply) */\n      tag_193\n        /* \"PancakePair.sol\":5292:5304  _totalSupply */\n      dup5\n        /* \"PancakePair.sol\":5280:5287  amount1 */\n      dup8\n        /* \"PancakePair.sol\":5280:5291  amount1.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":5280:5305  amount1.mul(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"PancakePair.sol\":5280:5317  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_194\n      jumpi\n      invalid\n    tag_194:\n      div\n        /* \"PancakePair.sol\":5232:5240  Math.min */\n      tag_195\n        /* \"PancakePair.sol\":5232:5318  Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      jump\t// in\n    tag_190:\n        /* \"PancakePair.sol\":5220:5318  liquidity = Math.min(amount0.mul(_totalSupply) / _reserve0, amount1.mul(_totalSupply) / _reserve1) */\n      swap9\n      pop\n        /* \"PancakePair.sol\":4982:5329  if (_totalSupply == 0) {... */\n    tag_189:\n        /* \"PancakePair.sol\":5358:5359  0 */\n      0x00\n        /* \"PancakePair.sol\":5346:5355  liquidity */\n      dup10\n        /* \"PancakePair.sol\":5346:5359  liquidity > 0 */\n      gt\n        /* \"PancakePair.sol\":5338:5402  require(liquidity > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"PancakePair.sol\":5412:5432  _mint(to, liquidity) */\n      tag_197\n        /* \"PancakePair.sol\":5418:5420  to */\n      dup11\n        /* \"PancakePair.sol\":5422:5431  liquidity */\n      dup11\n        /* \"PancakePair.sol\":5412:5417  _mint */\n      tag_188\n        /* \"PancakePair.sol\":5412:5432  _mint(to, liquidity) */\n      jump\t// in\n    tag_197:\n        /* \"PancakePair.sol\":5443:5492  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_198\n        /* \"PancakePair.sol\":5451:5459  balance0 */\n      dup7\n        /* \"PancakePair.sol\":5461:5469  balance1 */\n      dup7\n        /* \"PancakePair.sol\":5471:5480  _reserve0 */\n      dup11\n        /* \"PancakePair.sol\":5482:5491  _reserve1 */\n      dup11\n        /* \"PancakePair.sol\":5443:5450  _update */\n      tag_156\n        /* \"PancakePair.sol\":5443:5492  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_198:\n        /* \"PancakePair.sol\":5506:5511  feeOn */\n      dup2\n        /* \"PancakePair.sol\":5502:5549  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_199\n      jumpi\n        /* \"PancakePair.sol\":5521:5549  uint(reserve0).mul(reserve1) */\n      tag_200\n        /* \"PancakePair.sol\":5540:5548  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":5521:5549  uint(reserve0).mul(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":5526:5534  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":5521:5535  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":5521:5539  uint(reserve0).mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":5521:5549  uint(reserve0).mul(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"PancakePair.sol\":5513:5518  kLast */\n      0x0b\n        /* \"PancakePair.sol\":5513:5549  kLast = uint(reserve0).mul(reserve1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":5502:5549  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_199:\n        /* \"PancakePair.sol\":5609:5619  msg.sender */\n      caller\n        /* \"PancakePair.sol\":5604:5638  Mint(msg.sender, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n        /* \"PancakePair.sol\":5621:5628  amount0 */\n      dup6\n        /* \"PancakePair.sol\":5630:5637  amount1 */\n      dup6\n        /* \"PancakePair.sol\":5604:5638  Mint(msg.sender, amount0, amount1) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"PancakePair.sol\":1204:1205  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1226:1227  1 */\n      0x01\n        /* \"PancakePair.sol\":1215:1223  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1215:1227  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":4428:5645  function mint(address to) external lock returns (uint liquidity) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":361:405  mapping(address => uint256) public balanceOf */\n    tag_78:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":970:987  uint public kLast */\n    tag_80:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":737:778  mapping(address => uint256) public nonces */\n    tag_83:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":5754:7196  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n    tag_86:\n        /* \"PancakePair.sol\":5803:5815  uint amount0 */\n      0x00\n        /* \"PancakePair.sol\":5817:5829  uint amount1 */\n      dup1\n        /* \"PancakePair.sol\":1151:1152  1 */\n      0x01\n        /* \"PancakePair.sol\":1139:1147  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1139:1152  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1131:1172  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"PancakePair.sol\":1193:1194  0 */\n      0x00\n        /* \"PancakePair.sol\":1182:1190  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1182:1194  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":5842:5859  uint112 _reserve0 */\n      0x00\n        /* \"PancakePair.sol\":5861:5878  uint112 _reserve1 */\n      dup1\n        /* \"PancakePair.sol\":5883:5896  getReserves() */\n      tag_204\n        /* \"PancakePair.sol\":5883:5894  getReserves */\n      tag_49\n        /* \"PancakePair.sol\":5883:5896  getReserves() */\n      jump\t// in\n    tag_204:\n        /* \"PancakePair.sol\":5841:5896  (uint112 _reserve0, uint112 _reserve1,) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"PancakePair.sol\":5921:5936  address _token0 */\n      0x00\n        /* \"PancakePair.sol\":5939:5945  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":5921:5945  address _token0 = token0 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":6001:6016  address _token1 */\n      0x00\n        /* \"PancakePair.sol\":6019:6025  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":6001:6025  address _token1 = token1 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":6081:6094  uint balance0 */\n      0x00\n        /* \"PancakePair.sol\":6104:6111  _token0 */\n      dup3\n        /* \"PancakePair.sol\":6097:6122  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":6131:6135  this */\n      address\n        /* \"PancakePair.sol\":6097:6137  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_205:\n        /* \"PancakePair.sol\":6097:6137  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"PancakePair.sol\":6097:6137  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_207\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_207:\n        /* \"PancakePair.sol\":6097:6137  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":6081:6137  uint balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":6147:6160  uint balance1 */\n      0x00\n        /* \"PancakePair.sol\":6170:6177  _token1 */\n      dup3\n        /* \"PancakePair.sol\":6163:6188  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":6197:6201  this */\n      address\n        /* \"PancakePair.sol\":6163:6203  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_208\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_208:\n        /* \"PancakePair.sol\":6163:6203  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_209:\n        /* \"PancakePair.sol\":6163:6203  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_210\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_210:\n        /* \"PancakePair.sol\":6163:6203  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":6147:6203  uint balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":6213:6227  uint liquidity */\n      0x00\n        /* \"PancakePair.sol\":6230:6239  balanceOf */\n      0x01\n        /* \"PancakePair.sol\":6230:6254  balanceOf[address(this)] */\n      0x00\n        /* \"PancakePair.sol\":6248:6252  this */\n      address\n        /* \"PancakePair.sol\":6230:6254  balanceOf[address(this)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakePair.sol\":6213:6254  uint liquidity = balanceOf[address(this)] */\n      swap1\n      pop\n        /* \"PancakePair.sol\":6265:6275  bool feeOn */\n      0x00\n        /* \"PancakePair.sol\":6278:6308  _mintFee(_reserve0, _reserve1) */\n      tag_211\n        /* \"PancakePair.sol\":6287:6296  _reserve0 */\n      dup9\n        /* \"PancakePair.sol\":6298:6307  _reserve1 */\n      dup9\n        /* \"PancakePair.sol\":6278:6286  _mintFee */\n      tag_181\n        /* \"PancakePair.sol\":6278:6308  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_211:\n        /* \"PancakePair.sol\":6265:6308  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":6318:6335  uint _totalSupply */\n      0x00\n        /* \"PancakePair.sol\":6338:6349  totalSupply */\n      dup1\n      sload\n        /* \"PancakePair.sol\":6318:6349  uint _totalSupply = totalSupply */\n      swap1\n      pop\n        /* \"PancakePair.sol\":6473:6485  _totalSupply */\n      dup1\n        /* \"PancakePair.sol\":6447:6470  liquidity.mul(balance0) */\n      tag_212\n        /* \"PancakePair.sol\":6461:6469  balance0 */\n      dup7\n        /* \"PancakePair.sol\":6447:6456  liquidity */\n      dup6\n        /* \"PancakePair.sol\":6447:6460  liquidity.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":6447:6470  liquidity.mul(balance0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"PancakePair.sol\":6447:6485  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_213\n      jumpi\n      invalid\n    tag_213:\n      div\n        /* \"PancakePair.sol\":6437:6485  amount0 = liquidity.mul(balance0) / _totalSupply */\n      swap11\n      pop\n        /* \"PancakePair.sol\":6579:6591  _totalSupply */\n      dup1\n        /* \"PancakePair.sol\":6553:6576  liquidity.mul(balance1) */\n      tag_214\n        /* \"PancakePair.sol\":6567:6575  balance1 */\n      dup6\n        /* \"PancakePair.sol\":6553:6562  liquidity */\n      dup6\n        /* \"PancakePair.sol\":6553:6566  liquidity.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":6553:6576  liquidity.mul(balance1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"PancakePair.sol\":6553:6591  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      div\n        /* \"PancakePair.sol\":6543:6591  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"PancakePair.sol\":6667:6668  0 */\n      0x00\n        /* \"PancakePair.sol\":6657:6664  amount0 */\n      dup12\n        /* \"PancakePair.sol\":6657:6668  amount0 > 0 */\n      gt\n        /* \"PancakePair.sol\":6657:6683  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n        /* \"PancakePair.sol\":6682:6683  0 */\n      0x00\n        /* \"PancakePair.sol\":6672:6679  amount1 */\n      dup11\n        /* \"PancakePair.sol\":6672:6683  amount1 > 0 */\n      gt\n        /* \"PancakePair.sol\":6657:6683  amount0 > 0 && amount1 > 0 */\n    tag_216:\n        /* \"PancakePair.sol\":6649:6726  require(amount0 > 0 && amount1 > 0, 'Pancake: INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"PancakePair.sol\":6736:6767  _burn(address(this), liquidity) */\n      tag_218\n        /* \"PancakePair.sol\":6750:6754  this */\n      address\n        /* \"PancakePair.sol\":6757:6766  liquidity */\n      dup5\n        /* \"PancakePair.sol\":6736:6741  _burn */\n      tag_219\n        /* \"PancakePair.sol\":6736:6767  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_218:\n        /* \"PancakePair.sol\":6777:6812  _safeTransfer(_token0, to, amount0) */\n      tag_220\n        /* \"PancakePair.sol\":6791:6798  _token0 */\n      dup8\n        /* \"PancakePair.sol\":6800:6802  to */\n      dup14\n        /* \"PancakePair.sol\":6804:6811  amount0 */\n      dup14\n        /* \"PancakePair.sol\":6777:6790  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":6777:6812  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_220:\n        /* \"PancakePair.sol\":6822:6857  _safeTransfer(_token1, to, amount1) */\n      tag_221\n        /* \"PancakePair.sol\":6836:6843  _token1 */\n      dup7\n        /* \"PancakePair.sol\":6845:6847  to */\n      dup14\n        /* \"PancakePair.sol\":6849:6856  amount1 */\n      dup13\n        /* \"PancakePair.sol\":6822:6835  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":6822:6857  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_221:\n        /* \"PancakePair.sol\":6885:6892  _token0 */\n      dup7\n        /* \"PancakePair.sol\":6878:6903  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":6912:6916  this */\n      address\n        /* \"PancakePair.sol\":6878:6918  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_222\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_222:\n        /* \"PancakePair.sol\":6878:6918  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_223\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_223:\n        /* \"PancakePair.sol\":6878:6918  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_224\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_224:\n        /* \"PancakePair.sol\":6878:6918  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":6867:6918  balance0 = IERC20(_token0).balanceOf(address(this)) */\n      swap5\n      pop\n        /* \"PancakePair.sol\":6946:6953  _token1 */\n      dup6\n        /* \"PancakePair.sol\":6939:6964  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":6973:6977  this */\n      address\n        /* \"PancakePair.sol\":6939:6979  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_225\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_225:\n        /* \"PancakePair.sol\":6939:6979  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_226\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_226:\n        /* \"PancakePair.sol\":6939:6979  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_227\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_227:\n        /* \"PancakePair.sol\":6939:6979  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":6928:6979  balance1 = IERC20(_token1).balanceOf(address(this)) */\n      swap4\n      pop\n        /* \"PancakePair.sol\":6990:7039  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_228\n        /* \"PancakePair.sol\":6998:7006  balance0 */\n      dup6\n        /* \"PancakePair.sol\":7008:7016  balance1 */\n      dup6\n        /* \"PancakePair.sol\":7018:7027  _reserve0 */\n      dup12\n        /* \"PancakePair.sol\":7029:7038  _reserve1 */\n      dup12\n        /* \"PancakePair.sol\":6990:6997  _update */\n      tag_156\n        /* \"PancakePair.sol\":6990:7039  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_228:\n        /* \"PancakePair.sol\":7053:7058  feeOn */\n      dup2\n        /* \"PancakePair.sol\":7049:7096  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_229\n      jumpi\n        /* \"PancakePair.sol\":7068:7096  uint(reserve0).mul(reserve1) */\n      tag_230\n        /* \"PancakePair.sol\":7087:7095  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7068:7096  uint(reserve0).mul(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7073:7081  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7068:7082  uint(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7068:7086  uint(reserve0).mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":7068:7096  uint(reserve0).mul(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"PancakePair.sol\":7060:7065  kLast */\n      0x0b\n        /* \"PancakePair.sol\":7060:7096  kLast = uint(reserve0).mul(reserve1) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":7049:7096  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_229:\n        /* \"PancakePair.sol\":7186:7188  to */\n      dup12\n        /* \"PancakePair.sol\":7151:7189  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":7156:7166  msg.sender */\n      caller\n        /* \"PancakePair.sol\":7151:7189  Burn(msg.sender, amount0, amount1, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n        /* \"PancakePair.sol\":7168:7175  amount0 */\n      dup14\n        /* \"PancakePair.sol\":7177:7184  amount1 */\n      dup14\n        /* \"PancakePair.sol\":7151:7189  Burn(msg.sender, amount0, amount1, to) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakePair.sol\":1204:1205  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1226:1227  1 */\n      0x01\n        /* \"PancakePair.sol\":1215:1223  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1215:1227  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":5754:7196  function burn(address to) external lock returns (uint amount0, uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"PancakeERC20.sol\":241:282  string public constant symbol = \"Cake-LP\" */\n    tag_88:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x43616b652d4c5000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_95:\n        /* \"PancakeERC20.sol\":2495:2499  bool */\n      0x00\n        /* \"PancakeERC20.sol\":2511:2543  _transfer(msg.sender, to, value) */\n      tag_232\n        /* \"PancakeERC20.sol\":2521:2531  msg.sender */\n      caller\n        /* \"PancakeERC20.sol\":2533:2535  to */\n      dup5\n        /* \"PancakeERC20.sol\":2537:2542  value */\n      dup5\n        /* \"PancakeERC20.sol\":2511:2520  _transfer */\n      tag_165\n        /* \"PancakeERC20.sol\":2511:2543  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_232:\n        /* \"PancakeERC20.sol\":2560:2564  true */\n      0x01\n        /* \"PancakeERC20.sol\":2553:2564  return true */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":2432:2571  function transfer(address to, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":375:421  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n    tag_97:\n        /* \"PancakePair.sol\":416:421  10**3 */\n      0x03e8\n        /* \"PancakePair.sol\":375:421  uint public constant MINIMUM_LIQUIDITY = 10**3 */\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":9207:9536  function skim(address to) external lock {... */\n    tag_100:\n        /* \"PancakePair.sol\":1151:1152  1 */\n      0x01\n        /* \"PancakePair.sol\":1139:1147  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1139:1152  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1131:1172  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"PancakePair.sol\":1193:1194  0 */\n      0x00\n        /* \"PancakePair.sol\":1182:1190  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1182:1194  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":9257:9272  address _token0 */\n      0x00\n        /* \"PancakePair.sol\":9275:9281  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9257:9281  address _token0 = token0 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":9306:9321  address _token1 */\n      0x00\n        /* \"PancakePair.sol\":9324:9330  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9306:9330  address _token1 = token1 */\n      swap1\n      pop\n        /* \"PancakePair.sol\":9355:9437  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      tag_236\n        /* \"PancakePair.sol\":9369:9376  _token0 */\n      dup3\n        /* \"PancakePair.sol\":9378:9380  to */\n      dup5\n        /* \"PancakePair.sol\":9382:9436  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_237\n        /* \"PancakePair.sol\":9427:9435  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9382:9436  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9389:9396  _token0 */\n      dup7\n        /* \"PancakePair.sol\":9382:9407  IERC20(_token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":9416:9420  this */\n      address\n        /* \"PancakePair.sol\":9382:9422  IERC20(_token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_238\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_238:\n        /* \"PancakePair.sol\":9382:9422  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_239\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_239:\n        /* \"PancakePair.sol\":9382:9422  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_240\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_240:\n        /* \"PancakePair.sol\":9382:9422  IERC20(_token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":9382:9426  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":9382:9436  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"PancakePair.sol\":9355:9368  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":9355:9437  _safeTransfer(_token0, to, IERC20(_token0).balanceOf(address(this)).sub(reserve0)) */\n      jump\t// in\n    tag_236:\n        /* \"PancakePair.sol\":9447:9529  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      tag_241\n        /* \"PancakePair.sol\":9461:9468  _token1 */\n      dup2\n        /* \"PancakePair.sol\":9470:9472  to */\n      dup5\n        /* \"PancakePair.sol\":9474:9528  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_242\n        /* \"PancakePair.sol\":9519:9527  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9474:9528  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9481:9488  _token1 */\n      dup6\n        /* \"PancakePair.sol\":9474:9499  IERC20(_token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":9508:9512  this */\n      address\n        /* \"PancakePair.sol\":9474:9514  IERC20(_token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_243\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_243:\n        /* \"PancakePair.sol\":9474:9514  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_244\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_244:\n        /* \"PancakePair.sol\":9474:9514  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_245\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_245:\n        /* \"PancakePair.sol\":9474:9514  IERC20(_token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":9474:9518  IERC20(_token1).balanceOf(address(this)).sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":9474:9528  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"PancakePair.sol\":9447:9460  _safeTransfer */\n      tag_125\n        /* \"PancakePair.sol\":9447:9529  _safeTransfer(_token1, to, IERC20(_token1).balanceOf(address(this)).sub(reserve1)) */\n      jump\t// in\n    tag_241:\n        /* \"PancakePair.sol\":1204:1205  _ */\n      pop\n      pop\n        /* \"PancakePair.sol\":1226:1227  1 */\n      0x01\n        /* \"PancakePair.sol\":1215:1223  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1215:1227  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":9207:9536  function skim(address to) external lock {... */\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":522:544  address public factory */\n    tag_102:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":577:598  address public token1 */\n    tag_104:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n    tag_107:\n        /* \"PancakeERC20.sol\":3127:3142  block.timestamp */\n      timestamp\n        /* \"PancakeERC20.sol\":3115:3123  deadline */\n      dup5\n        /* \"PancakeERC20.sol\":3115:3142  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"PancakeERC20.sol\":3107:3163  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204558504952454400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"PancakeERC20.sol\":3173:3187  bytes32 digest */\n      0x00\n        /* \"PancakeERC20.sol\":3275:3291  DOMAIN_SEPARATOR */\n      sload(0x03)\n        /* \"PancakeERC20.sol\":665:731  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"PancakeERC20.sol\":3330:3345  PERMIT_TYPEHASH */\n      0x00\n      shl\n        /* \"PancakeERC20.sol\":3347:3352  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3354:3361  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3363:3368  value */\n      dup10\n        /* \"PancakeERC20.sol\":3370:3376  nonces */\n      0x04\n        /* \"PancakeERC20.sol\":3370:3383  nonces[owner] */\n      0x00\n        /* \"PancakeERC20.sol\":3377:3382  owner */\n      dup15\n        /* \"PancakeERC20.sol\":3370:3383  nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PancakeERC20.sol\":3370:3385  nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"PancakeERC20.sol\":3387:3395  deadline */\n      dup11\n        /* \"PancakeERC20.sol\":3319:3396  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      add(0x20, mload(0x40))\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PancakeERC20.sol\":3319:3396  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      swap1\n      0x40\n      mstore\n        /* \"PancakeERC20.sol\":3309:3397  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PancakeERC20.sol\":3213:3411  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x02\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PancakeERC20.sol\":3213:3411  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"PancakeERC20.sol\":3190:3421  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PancakeERC20.sol\":3173:3421  bytes32 digest = keccak256(... */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":3431:3455  address recoveredAddress */\n      0x00\n        /* \"PancakeERC20.sol\":3458:3484  ecrecover(digest, v, r, s) */\n      0x01\n        /* \"PancakeERC20.sol\":3468:3474  digest */\n      dup3\n        /* \"PancakeERC20.sol\":3476:3477  v */\n      dup7\n        /* \"PancakeERC20.sol\":3479:3480  r */\n      dup7\n        /* \"PancakeERC20.sol\":3482:3483  s */\n      dup7\n        /* \"PancakeERC20.sol\":3458:3484  ecrecover(digest, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_248:\n        /* \"PancakeERC20.sol\":3458:3484  ecrecover(digest, v, r, s) */\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"PancakeERC20.sol\":3431:3484  address recoveredAddress = ecrecover(digest, v, r, s) */\n      swap1\n      pop\n        /* \"PancakeERC20.sol\":3530:3531  0 */\n      0x00\n        /* \"PancakeERC20.sol\":3502:3532  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":3502:3518  recoveredAddress */\n      dup2\n        /* \"PancakeERC20.sol\":3502:3532  recoveredAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakeERC20.sol\":3502:3561  recoveredAddress != address(0) && recoveredAddress == owner */\n      dup1\n      iszero\n      tag_249\n      jumpi\n      pop\n        /* \"PancakeERC20.sol\":3556:3561  owner */\n      dup9\n        /* \"PancakeERC20.sol\":3536:3561  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":3536:3552  recoveredAddress */\n      dup2\n        /* \"PancakeERC20.sol\":3536:3561  recoveredAddress == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PancakeERC20.sol\":3502:3561  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_249:\n        /* \"PancakeERC20.sol\":3494:3592  require(recoveredAddress != address(0) && recoveredAddress == owner, \"Pancake: INVALID_SIGNATURE\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"PancakeERC20.sol\":3602:3633  _approve(owner, spender, value) */\n      tag_251\n        /* \"PancakeERC20.sol\":3611:3616  owner */\n      dup10\n        /* \"PancakeERC20.sol\":3618:3625  spender */\n      dup10\n        /* \"PancakeERC20.sol\":3627:3632  value */\n      dup10\n        /* \"PancakeERC20.sol\":3602:3610  _approve */\n      tag_160\n        /* \"PancakeERC20.sol\":3602:3633  _approve(owner, spender, value) */\n      jump\t// in\n    tag_251:\n        /* \"PancakeERC20.sol\":2914:3640  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":411:475  mapping(address => mapping(address => uint256)) public allowance */\n    tag_110:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PancakePair.sol\":9582:9738  function sync() external lock {... */\n    tag_112:\n        /* \"PancakePair.sol\":1151:1152  1 */\n      0x01\n        /* \"PancakePair.sol\":1139:1147  unlocked */\n      sload(0x0c)\n        /* \"PancakePair.sol\":1139:1152  unlocked == 1 */\n      eq\n        /* \"PancakePair.sol\":1131:1172  require(unlocked == 1, 'Pancake: LOCKED') */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204c4f434b45440000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"PancakePair.sol\":1193:1194  0 */\n      0x00\n        /* \"PancakePair.sol\":1182:1190  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1182:1194  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":9622:9731  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      tag_255\n        /* \"PancakePair.sol\":9637:9643  token0 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9630:9654  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":9663:9667  this */\n      address\n        /* \"PancakePair.sol\":9630:9669  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_256\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_256:\n        /* \"PancakePair.sol\":9630:9669  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_257:\n        /* \"PancakePair.sol\":9630:9669  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_258\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_258:\n        /* \"PancakePair.sol\":9630:9669  IERC20(token0).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":9678:9684  token1 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9671:9695  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"PancakePair.sol\":9704:9708  this */\n      address\n        /* \"PancakePair.sol\":9671:9710  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_259\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_259:\n        /* \"PancakePair.sol\":9671:9710  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_260\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_260:\n        /* \"PancakePair.sol\":9671:9710  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_261:\n        /* \"PancakePair.sol\":9671:9710  IERC20(token1).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":9712:9720  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9722:9730  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":9622:9629  _update */\n      tag_156\n        /* \"PancakePair.sol\":9622:9731  _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1) */\n      jump\t// in\n    tag_255:\n        /* \"PancakePair.sol\":1226:1227  1 */\n      0x01\n        /* \"PancakePair.sol\":1215:1223  unlocked */\n      0x0c\n        /* \"PancakePair.sol\":1215:1227  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":9582:9738  function sync() external lock {... */\n      jump\t// out\n        /* \"PancakePair.sol\":1473:1755  function _safeTransfer(address token, address to, uint value) private {... */\n    tag_125:\n        /* \"PancakePair.sol\":1554:1566  bool success */\n      0x00\n        /* \"PancakePair.sol\":1568:1585  bytes memory data */\n      0x60\n        /* \"PancakePair.sol\":1589:1594  token */\n      dup5\n        /* \"PancakePair.sol\":1589:1599  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":479:513  bytes('transfer(address,uint256)') */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      dup2\n      mstore\n      pop\n        /* \"PancakePair.sol\":469:514  keccak256(bytes('transfer(address,uint256)')) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"PancakePair.sol\":1633:1635  to */\n      dup6\n        /* \"PancakePair.sol\":1637:1642  value */\n      dup6\n        /* \"PancakePair.sol\":1600:1643  abi.encodeWithSelector(SELECTOR, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PancakePair.sol\":1600:1643  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1600:1643  abi.encodeWithSelector(SELECTOR, to, value) */\n      pop\n        /* \"PancakePair.sol\":1589:1644  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_263:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_265\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_263)\n    tag_265:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1589:1644  token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_266)\n        /* \"--CODEGEN--\":16:47   */\n    tag_267:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_266:\n      pop\n        /* \"PancakePair.sol\":1553:1644  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(SELECTOR, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"PancakePair.sol\":1662:1669  success */\n      dup2\n        /* \"PancakePair.sol\":1662:1719  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_268\n      jumpi\n      pop\n        /* \"PancakePair.sol\":1689:1690  0 */\n      0x00\n        /* \"PancakePair.sol\":1674:1678  data */\n      dup2\n        /* \"PancakePair.sol\":1674:1685  data.length */\n      mload\n        /* \"PancakePair.sol\":1674:1690  data.length == 0 */\n      eq\n        /* \"PancakePair.sol\":1674:1718  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_269\n      jumpi\n      pop\n        /* \"PancakePair.sol\":1705:1709  data */\n      dup1\n        /* \"PancakePair.sol\":1694:1718  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_270\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_270:\n        /* \"PancakePair.sol\":1694:1718  abi.decode(data, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":1674:1718  data.length == 0 || abi.decode(data, (bool)) */\n    tag_269:\n        /* \"PancakePair.sol\":1662:1719  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_268:\n        /* \"PancakePair.sol\":1654:1748  require(success && (data.length == 0 || abi.decode(data, (bool))), 'Pancake: TRANSFER_FAILED') */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a205452414e534645525f4641494c45440000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"PancakePair.sol\":1473:1755  function _safeTransfer(address token, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_145:\n        /* \"SafeMath.sol\":539:548  uint256 z */\n      0x00\n        /* \"SafeMath.sol\":573:574  0 */\n      dup1\n        /* \"SafeMath.sol\":568:569  y */\n      dup3\n        /* \"SafeMath.sol\":568:574  y == 0 */\n      eq\n        /* \"SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n      dup1\n      tag_273\n      jumpi\n      pop\n        /* \"SafeMath.sol\":597:598  x */\n      dup3\n        /* \"SafeMath.sol\":592:593  y */\n      dup3\n        /* \"SafeMath.sol\":587:588  y */\n      dup4\n        /* \"SafeMath.sol\":583:584  x */\n      dup6\n        /* \"SafeMath.sol\":583:588  x * y */\n      mul\n        /* \"SafeMath.sol\":579:588  z = x * y */\n      swap3\n      pop\n      dup3\n        /* \"SafeMath.sol\":578:593  (z = x * y) / y */\n      dup2\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"SafeMath.sol\":578:598  (z = x * y) / y == x */\n      eq\n        /* \"SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n    tag_273:\n        /* \"SafeMath.sol\":560:623  require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_147:\n        /* \"SafeMath.sol\":397:406  uint256 z */\n      0x00\n        /* \"SafeMath.sol\":441:442  x */\n      dup3\n        /* \"SafeMath.sol\":435:436  y */\n      dup3\n        /* \"SafeMath.sol\":431:432  x */\n      dup5\n        /* \"SafeMath.sol\":431:436  x - y */\n      sub\n        /* \"SafeMath.sol\":427:436  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"SafeMath.sol\":426:442  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":2556:3401  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {... */\n    tag_156:\n        /* \"PancakePair.sol\":2687:2689  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"PancakePair.sol\":2667:2690  balance0 <= uint112(-1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":2667:2675  balance0 */\n      dup5\n        /* \"PancakePair.sol\":2667:2690  balance0 <= uint112(-1) */\n      gt\n      iszero\n        /* \"PancakePair.sol\":2667:2717  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n      dup1\n      iszero\n      tag_279\n      jumpi\n      pop\n        /* \"PancakePair.sol\":2714:2716  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"PancakePair.sol\":2694:2717  balance1 <= uint112(-1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":2694:2702  balance1 */\n      dup4\n        /* \"PancakePair.sol\":2694:2717  balance1 <= uint112(-1) */\n      gt\n      iszero\n        /* \"PancakePair.sol\":2667:2717  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n    tag_279:\n        /* \"PancakePair.sol\":2659:2739  require(balance0 <= uint112(-1) && balance1 <= uint112(-1), 'Pancake: OVERFLOW') */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50616e63616b653a204f564552464c4f57000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"PancakePair.sol\":2749:2770  uint32 blockTimestamp */\n      0x00\n        /* \"PancakePair.sol\":2798:2803  2**32 */\n      0x0100000000\n        /* \"PancakePair.sol\":2780:2795  block.timestamp */\n      timestamp\n        /* \"PancakePair.sol\":2780:2803  block.timestamp % 2**32 */\n      dup2\n      tag_281\n      jumpi\n      invalid\n    tag_281:\n      mod\n        /* \"PancakePair.sol\":2749:2804  uint32 blockTimestamp = uint32(block.timestamp % 2**32) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":2814:2832  uint32 timeElapsed */\n      0x00\n        /* \"PancakePair.sol\":2852:2870  blockTimestampLast */\n      0x08\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"PancakePair.sol\":2835:2849  blockTimestamp */\n      dup3\n        /* \"PancakePair.sol\":2835:2870  blockTimestamp - blockTimestampLast */\n      sub\n        /* \"PancakePair.sol\":2814:2870  uint32 timeElapsed = blockTimestamp - blockTimestampLast */\n      swap1\n      pop\n        /* \"PancakePair.sol\":2921:2922  0 */\n      0x00\n        /* \"PancakePair.sol\":2907:2918  timeElapsed */\n      dup2\n        /* \"PancakePair.sol\":2907:2922  timeElapsed > 0 */\n      0xffffffff\n      and\n      gt\n        /* \"PancakePair.sol\":2907:2940  timeElapsed > 0 && _reserve0 != 0 */\n      dup1\n      iszero\n      tag_282\n      jumpi\n      pop\n        /* \"PancakePair.sol\":2939:2940  0 */\n      0x00\n        /* \"PancakePair.sol\":2926:2935  _reserve0 */\n      dup5\n        /* \"PancakePair.sol\":2926:2940  _reserve0 != 0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakePair.sol\":2907:2940  timeElapsed > 0 && _reserve0 != 0 */\n    tag_282:\n        /* \"PancakePair.sol\":2907:2958  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n        /* \"PancakePair.sol\":2957:2958  0 */\n      0x00\n        /* \"PancakePair.sol\":2944:2953  _reserve1 */\n      dup4\n        /* \"PancakePair.sol\":2944:2958  _reserve1 != 0 */\n      0xffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakePair.sol\":2907:2958  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n    tag_283:\n        /* \"PancakePair.sol\":2903:3235  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"PancakePair.sol\":3111:3122  timeElapsed */\n      dup1\n        /* \"PancakePair.sol\":3058:3122  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      0xffffffff\n      and\n        /* \"PancakePair.sol\":3063:3107  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      tag_285\n        /* \"PancakePair.sol\":3097:3106  _reserve0 */\n      dup6\n        /* \"PancakePair.sol\":3063:3090  UQ112x112.encode(_reserve1) */\n      tag_286\n        /* \"PancakePair.sol\":3080:3089  _reserve1 */\n      dup7\n        /* \"PancakePair.sol\":3063:3079  UQ112x112.encode */\n      tag_287\n        /* \"PancakePair.sol\":3063:3090  UQ112x112.encode(_reserve1) */\n      jump\t// in\n    tag_286:\n        /* \"PancakePair.sol\":3063:3096  UQ112x112.encode(_reserve1).uqdiv */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_288\n      swap1\n        /* \"PancakePair.sol\":3063:3107  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"PancakePair.sol\":3058:3108  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3058:3122  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      mul\n        /* \"PancakePair.sol\":3034:3054  price0CumulativeLast */\n      0x09\n      0x00\n        /* \"PancakePair.sol\":3034:3122  price0CumulativeLast += uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) * timeElapsed */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":3213:3224  timeElapsed */\n      dup1\n        /* \"PancakePair.sol\":3160:3224  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      0xffffffff\n      and\n        /* \"PancakePair.sol\":3165:3209  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      tag_289\n        /* \"PancakePair.sol\":3199:3208  _reserve1 */\n      dup5\n        /* \"PancakePair.sol\":3165:3192  UQ112x112.encode(_reserve0) */\n      tag_290\n        /* \"PancakePair.sol\":3182:3191  _reserve0 */\n      dup8\n        /* \"PancakePair.sol\":3165:3181  UQ112x112.encode */\n      tag_287\n        /* \"PancakePair.sol\":3165:3192  UQ112x112.encode(_reserve0) */\n      jump\t// in\n    tag_290:\n        /* \"PancakePair.sol\":3165:3198  UQ112x112.encode(_reserve0).uqdiv */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_288\n      swap1\n        /* \"PancakePair.sol\":3165:3209  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"PancakePair.sol\":3160:3210  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3160:3224  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      mul\n        /* \"PancakePair.sol\":3136:3156  price1CumulativeLast */\n      0x0a\n      0x00\n        /* \"PancakePair.sol\":3136:3224  price1CumulativeLast += uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) * timeElapsed */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":2903:3235  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n    tag_284:\n        /* \"PancakePair.sol\":3263:3271  balance0 */\n      dup6\n        /* \"PancakePair.sol\":3244:3252  reserve0 */\n      0x08\n      0x00\n        /* \"PancakePair.sol\":3244:3272  reserve0 = uint112(balance0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":3301:3309  balance1 */\n      dup5\n        /* \"PancakePair.sol\":3282:3290  reserve1 */\n      0x08\n      0x0e\n        /* \"PancakePair.sol\":3282:3310  reserve1 = uint112(balance1) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":3341:3355  blockTimestamp */\n      dup2\n        /* \"PancakePair.sol\":3320:3338  blockTimestampLast */\n      0x08\n      0x1c\n        /* \"PancakePair.sol\":3320:3355  blockTimestampLast = blockTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":3370:3394  Sync(reserve0, reserve1) */\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n        /* \"PancakePair.sol\":3375:3383  reserve0 */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3385:3393  reserve1 */\n      0x08\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3370:3394  Sync(reserve0, reserve1) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"PancakePair.sol\":2556:3401  function _update(uint balance0, uint balance1, uint112 _reserve0, uint112 _reserve1) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":1819:2018  function _approve(... */\n    tag_160:\n        /* \"PancakeERC20.sol\":1960:1965  value */\n      dup1\n        /* \"PancakeERC20.sol\":1932:1941  allowance */\n      0x02\n        /* \"PancakeERC20.sol\":1932:1948  allowance[owner] */\n      0x00\n        /* \"PancakeERC20.sol\":1942:1947  owner */\n      dup6\n        /* \"PancakeERC20.sol\":1932:1948  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1932:1957  allowance[owner][spender] */\n      0x00\n        /* \"PancakeERC20.sol\":1949:1956  spender */\n      dup5\n        /* \"PancakeERC20.sol\":1932:1957  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1932:1965  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":1996:2003  spender */\n      dup2\n        /* \"PancakeERC20.sol\":1980:2011  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":1989:1994  owner */\n      dup4\n        /* \"PancakeERC20.sol\":1980:2011  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"PancakeERC20.sol\":2005:2010  value */\n      dup4\n        /* \"PancakeERC20.sol\":1980:2011  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1819:2018  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":2024:2273  function _transfer(... */\n    tag_165:\n        /* \"PancakeERC20.sol\":2150:2176  balanceOf[from].sub(value) */\n      tag_293\n        /* \"PancakeERC20.sol\":2170:2175  value */\n      dup2\n        /* \"PancakeERC20.sol\":2150:2159  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2150:2165  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2160:2164  from */\n      dup7\n        /* \"PancakeERC20.sol\":2150:2165  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2150:2169  balanceOf[from].sub */\n      tag_147\n      swap1\n        /* \"PancakeERC20.sol\":2150:2176  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"PancakeERC20.sol\":2132:2141  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2132:2147  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":2142:2146  from */\n      dup6\n        /* \"PancakeERC20.sol\":2132:2147  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2132:2176  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2202:2226  balanceOf[to].add(value) */\n      tag_294\n        /* \"PancakeERC20.sol\":2220:2225  value */\n      dup2\n        /* \"PancakeERC20.sol\":2202:2211  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2202:2215  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":2212:2214  to */\n      dup6\n        /* \"PancakeERC20.sol\":2202:2215  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":2202:2219  balanceOf[to].add */\n      tag_295\n      swap1\n        /* \"PancakeERC20.sol\":2202:2226  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"PancakeERC20.sol\":2186:2195  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":2186:2199  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":2196:2198  to */\n      dup5\n        /* \"PancakeERC20.sol\":2186:2199  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":2186:2226  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":2256:2258  to */\n      dup2\n        /* \"PancakeERC20.sol\":2241:2266  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":2250:2254  from */\n      dup4\n        /* \"PancakeERC20.sol\":2241:2266  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PancakeERC20.sol\":2260:2265  value */\n      dup4\n        /* \"PancakeERC20.sol\":2241:2266  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":2024:2273  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PancakePair.sol\":3487:4319  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n    tag_181:\n        /* \"PancakePair.sol\":3560:3570  bool feeOn */\n      0x00\n        /* \"PancakePair.sol\":3582:3595  address feeTo */\n      dup1\n        /* \"PancakePair.sol\":3614:3621  factory */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3598:3628  IPancakeFactory(factory).feeTo */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x017e7e58\n        /* \"PancakePair.sol\":3598:3630  IPancakeFactory(factory).feeTo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_297\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_297:\n        /* \"PancakePair.sol\":3598:3630  IPancakeFactory(factory).feeTo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_298\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_298:\n        /* \"PancakePair.sol\":3598:3630  IPancakeFactory(factory).feeTo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_299\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_299:\n        /* \"PancakePair.sol\":3598:3630  IPancakeFactory(factory).feeTo() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"PancakePair.sol\":3582:3630  address feeTo = IPancakeFactory(factory).feeTo() */\n      swap1\n      pop\n        /* \"PancakePair.sol\":3665:3666  0 */\n      0x00\n        /* \"PancakePair.sol\":3648:3667  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3648:3653  feeTo */\n      dup2\n        /* \"PancakePair.sol\":3648:3667  feeTo != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PancakePair.sol\":3640:3667  feeOn = feeTo != address(0) */\n      swap2\n      pop\n        /* \"PancakePair.sol\":3677:3688  uint _kLast */\n      0x00\n        /* \"PancakePair.sol\":3691:3696  kLast */\n      sload(0x0b)\n        /* \"PancakePair.sol\":3677:3696  uint _kLast = kLast */\n      swap1\n      pop\n        /* \"PancakePair.sol\":3725:3730  feeOn */\n      dup3\n        /* \"PancakePair.sol\":3721:4313  if (feeOn) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"PancakePair.sol\":3760:3761  0 */\n      0x00\n        /* \"PancakePair.sol\":3750:3756  _kLast */\n      dup2\n        /* \"PancakePair.sol\":3750:3761  _kLast != 0 */\n      eq\n        /* \"PancakePair.sol\":3746:4246  if (_kLast != 0) {... */\n      tag_301\n      jumpi\n        /* \"PancakePair.sol\":3781:3791  uint rootK */\n      0x00\n        /* \"PancakePair.sol\":3794:3835  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      tag_302\n        /* \"PancakePair.sol\":3804:3834  uint(_reserve0).mul(_reserve1) */\n      tag_303\n        /* \"PancakePair.sol\":3824:3833  _reserve1 */\n      dup7\n        /* \"PancakePair.sol\":3804:3834  uint(_reserve0).mul(_reserve1) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3809:3818  _reserve0 */\n      dup9\n        /* \"PancakePair.sol\":3804:3819  uint(_reserve0) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"PancakePair.sol\":3804:3823  uint(_reserve0).mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":3804:3834  uint(_reserve0).mul(_reserve1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_303:\n        /* \"PancakePair.sol\":3794:3803  Math.sqrt */\n      tag_186\n        /* \"PancakePair.sol\":3794:3835  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      jump\t// in\n    tag_302:\n        /* \"PancakePair.sol\":3781:3835  uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":3853:3867  uint rootKLast */\n      0x00\n        /* \"PancakePair.sol\":3870:3887  Math.sqrt(_kLast) */\n      tag_304\n        /* \"PancakePair.sol\":3880:3886  _kLast */\n      dup4\n        /* \"PancakePair.sol\":3870:3879  Math.sqrt */\n      tag_186\n        /* \"PancakePair.sol\":3870:3887  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_304:\n        /* \"PancakePair.sol\":3853:3887  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":3917:3926  rootKLast */\n      dup1\n        /* \"PancakePair.sol\":3909:3914  rootK */\n      dup3\n        /* \"PancakePair.sol\":3909:3926  rootK > rootKLast */\n      gt\n        /* \"PancakePair.sol\":3905:4232  if (rootK > rootKLast) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"PancakePair.sol\":3950:3964  uint numerator */\n      0x00\n        /* \"PancakePair.sol\":3967:4011  totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      tag_306\n        /* \"PancakePair.sol\":4009:4010  8 */\n      0x08\n        /* \"PancakePair.sol\":3967:4004  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_307\n        /* \"PancakePair.sol\":3983:4003  rootK.sub(rootKLast) */\n      tag_308\n        /* \"PancakePair.sol\":3993:4002  rootKLast */\n      dup6\n        /* \"PancakePair.sol\":3983:3988  rootK */\n      dup8\n        /* \"PancakePair.sol\":3983:3992  rootK.sub */\n      tag_147\n      swap1\n        /* \"PancakePair.sol\":3983:4003  rootK.sub(rootKLast) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_308:\n        /* \"PancakePair.sol\":3967:3978  totalSupply */\n      sload(0x00)\n        /* \"PancakePair.sol\":3967:3982  totalSupply.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":3967:4004  totalSupply.mul(rootK.sub(rootKLast)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"PancakePair.sol\":3967:4008  totalSupply.mul(rootK.sub(rootKLast)).mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":3967:4011  totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_306:\n        /* \"PancakePair.sol\":3950:4011  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(8) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4033:4049  uint denominator */\n      0x00\n        /* \"PancakePair.sol\":4052:4087  rootK.mul(17).add(rootKLast.mul(8)) */\n      tag_309\n        /* \"PancakePair.sol\":4070:4086  rootKLast.mul(8) */\n      tag_310\n        /* \"PancakePair.sol\":4084:4085  8 */\n      0x08\n        /* \"PancakePair.sol\":4070:4079  rootKLast */\n      dup6\n        /* \"PancakePair.sol\":4070:4083  rootKLast.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":4070:4086  rootKLast.mul(8) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_310:\n        /* \"PancakePair.sol\":4052:4065  rootK.mul(17) */\n      tag_311\n        /* \"PancakePair.sol\":4062:4064  17 */\n      0x11\n        /* \"PancakePair.sol\":4052:4057  rootK */\n      dup8\n        /* \"PancakePair.sol\":4052:4061  rootK.mul */\n      tag_145\n      swap1\n        /* \"PancakePair.sol\":4052:4065  rootK.mul(17) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"PancakePair.sol\":4052:4069  rootK.mul(17).add */\n      tag_295\n      swap1\n        /* \"PancakePair.sol\":4052:4087  rootK.mul(17).add(rootKLast.mul(8)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"PancakePair.sol\":4033:4087  uint denominator = rootK.mul(17).add(rootKLast.mul(8)) */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4109:4123  uint liquidity */\n      0x00\n        /* \"PancakePair.sol\":4138:4149  denominator */\n      dup2\n        /* \"PancakePair.sol\":4126:4135  numerator */\n      dup4\n        /* \"PancakePair.sol\":4126:4149  numerator / denominator */\n      dup2\n      tag_312\n      jumpi\n      invalid\n    tag_312:\n      div\n        /* \"PancakePair.sol\":4109:4149  uint liquidity = numerator / denominator */\n      swap1\n      pop\n        /* \"PancakePair.sol\":4187:4188  0 */\n      0x00\n        /* \"PancakePair.sol\":4175:4184  liquidity */\n      dup2\n        /* \"PancakePair.sol\":4175:4188  liquidity > 0 */\n      gt\n        /* \"PancakePair.sol\":4171:4213  if (liquidity > 0) _mint(feeTo, liquidity) */\n      iszero\n      tag_313\n      jumpi\n        /* \"PancakePair.sol\":4190:4213  _mint(feeTo, liquidity) */\n      tag_314\n        /* \"PancakePair.sol\":4196:4201  feeTo */\n      dup8\n        /* \"PancakePair.sol\":4203:4212  liquidity */\n      dup3\n        /* \"PancakePair.sol\":4190:4195  _mint */\n      tag_188\n        /* \"PancakePair.sol\":4190:4213  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_314:\n        /* \"PancakePair.sol\":4171:4213  if (liquidity > 0) _mint(feeTo, liquidity) */\n    tag_313:\n        /* \"PancakePair.sol\":3905:4232  if (rootK > rootKLast) {... */\n      pop\n      pop\n      pop\n    tag_305:\n        /* \"PancakePair.sol\":3746:4246  if (_kLast != 0) {... */\n      pop\n      pop\n    tag_301:\n        /* \"PancakePair.sol\":3721:4313  if (feeOn) {... */\n      jump(tag_315)\n    tag_300:\n        /* \"PancakePair.sol\":4276:4277  0 */\n      0x00\n        /* \"PancakePair.sol\":4266:4272  _kLast */\n      dup2\n        /* \"PancakePair.sol\":4266:4277  _kLast != 0 */\n      eq\n        /* \"PancakePair.sol\":4262:4313  if (_kLast != 0) {... */\n      tag_316\n      jumpi\n        /* \"PancakePair.sol\":4301:4302  0 */\n      0x00\n        /* \"PancakePair.sol\":4293:4298  kLast */\n      0x0b\n        /* \"PancakePair.sol\":4293:4302  kLast = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakePair.sol\":4262:4313  if (_kLast != 0) {... */\n    tag_316:\n        /* \"PancakePair.sol\":3721:4313  if (feeOn) {... */\n    tag_315:\n        /* \"PancakePair.sol\":3487:4319  function _mintFee(uint112 _reserve0, uint112 _reserve1) private returns (bool feeOn) {... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_186:\n        /* \"Math.sol\":400:409  uint256 z */\n      0x00\n        /* \"Math.sol\":429:430  3 */\n      0x03\n        /* \"Math.sol\":425:426  y */\n      dup3\n        /* \"Math.sol\":425:430  y > 3 */\n      gt\n        /* \"Math.sol\":421:647  if (y > 3) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"Math.sol\":450:451  y */\n      dup2\n        /* \"Math.sol\":446:451  z = y */\n      swap1\n      pop\n        /* \"Math.sol\":465:474  uint256 x */\n      0x00\n        /* \"Math.sol\":485:486  1 */\n      0x01\n        /* \"Math.sol\":481:482  2 */\n      0x02\n        /* \"Math.sol\":477:478  y */\n      dup5\n        /* \"Math.sol\":477:482  y / 2 */\n      dup2\n      tag_319\n      jumpi\n      invalid\n    tag_319:\n      div\n        /* \"Math.sol\":477:486  y / 2 + 1 */\n      add\n        /* \"Math.sol\":465:486  uint256 x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"Math.sol\":500:589  while (x < z) {... */\n    tag_320:\n        /* \"Math.sol\":511:512  z */\n      dup2\n        /* \"Math.sol\":507:508  x */\n      dup2\n        /* \"Math.sol\":507:512  x < z */\n      lt\n        /* \"Math.sol\":500:589  while (x < z) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"Math.sol\":536:537  x */\n      dup1\n        /* \"Math.sol\":532:537  z = x */\n      swap2\n      pop\n        /* \"Math.sol\":573:574  2 */\n      0x02\n        /* \"Math.sol\":568:569  x */\n      dup2\n        /* \"Math.sol\":564:565  x */\n      dup3\n        /* \"Math.sol\":560:561  y */\n      dup6\n        /* \"Math.sol\":560:565  y / x */\n      dup2\n      tag_322\n      jumpi\n      invalid\n    tag_322:\n      div\n        /* \"Math.sol\":560:569  y / x + x */\n      add\n        /* \"Math.sol\":559:574  (y / x + x) / 2 */\n      dup2\n      tag_323\n      jumpi\n      invalid\n    tag_323:\n      div\n        /* \"Math.sol\":555:574  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"Math.sol\":500:589  while (x < z) {... */\n      jump(tag_320)\n    tag_321:\n        /* \"Math.sol\":421:647  if (y > 3) {... */\n      pop\n      jump(tag_324)\n    tag_318:\n        /* \"Math.sol\":614:615  0 */\n      0x00\n        /* \"Math.sol\":609:610  y */\n      dup3\n        /* \"Math.sol\":609:615  y != 0 */\n      eq\n        /* \"Math.sol\":605:647  if (y != 0) {... */\n      tag_325\n      jumpi\n        /* \"Math.sol\":635:636  1 */\n      0x01\n        /* \"Math.sol\":631:636  z = 1 */\n      swap1\n      pop\n        /* \"Math.sol\":605:647  if (y != 0) {... */\n    tag_325:\n        /* \"Math.sol\":421:647  if (y > 3) {... */\n    tag_324:\n        /* \"Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":1399:1599  function _mint(address to, uint256 value) internal {... */\n    tag_188:\n        /* \"PancakeERC20.sol\":1474:1496  totalSupply.add(value) */\n      tag_327\n        /* \"PancakeERC20.sol\":1490:1495  value */\n      dup2\n        /* \"PancakeERC20.sol\":1474:1485  totalSupply */\n      sload(0x00)\n        /* \"PancakeERC20.sol\":1474:1489  totalSupply.add */\n      tag_295\n      swap1\n        /* \"PancakeERC20.sol\":1474:1496  totalSupply.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_327:\n        /* \"PancakeERC20.sol\":1460:1471  totalSupply */\n      0x00\n        /* \"PancakeERC20.sol\":1460:1496  totalSupply = totalSupply.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":1522:1546  balanceOf[to].add(value) */\n      tag_328\n        /* \"PancakeERC20.sol\":1540:1545  value */\n      dup2\n        /* \"PancakeERC20.sol\":1522:1531  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1522:1535  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":1532:1534  to */\n      dup6\n        /* \"PancakeERC20.sol\":1522:1535  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":1522:1539  balanceOf[to].add */\n      tag_295\n      swap1\n        /* \"PancakeERC20.sol\":1522:1546  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_328:\n        /* \"PancakeERC20.sol\":1506:1515  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1506:1519  balanceOf[to] */\n      0x00\n        /* \"PancakeERC20.sol\":1516:1518  to */\n      dup5\n        /* \"PancakeERC20.sol\":1506:1519  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1506:1546  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":1582:1584  to */\n      dup2\n        /* \"PancakeERC20.sol\":1561:1592  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":1578:1579  0 */\n      0x00\n        /* \"PancakeERC20.sol\":1561:1592  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PancakeERC20.sol\":1586:1591  value */\n      dup4\n        /* \"PancakeERC20.sol\":1561:1592  Transfer(address(0), to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1399:1599  function _mint(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_195:\n        /* \"Math.sol\":192:201  uint256 z */\n      0x00\n        /* \"Math.sol\":221:222  y */\n      dup2\n        /* \"Math.sol\":217:218  x */\n      dup4\n        /* \"Math.sol\":217:222  x < y */\n      lt\n        /* \"Math.sol\":217:230  x < y ? x : y */\n      tag_330\n      jumpi\n        /* \"Math.sol\":229:230  y */\n      dup2\n        /* \"Math.sol\":217:230  x < y ? x : y */\n      jump(tag_331)\n    tag_330:\n        /* \"Math.sol\":225:226  x */\n      dup3\n        /* \"Math.sol\":217:230  x < y ? x : y */\n    tag_331:\n        /* \"Math.sol\":213:230  z = x < y ? x : y */\n      swap1\n      pop\n        /* \"Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PancakeERC20.sol\":1605:1813  function _burn(address from, uint256 value) internal {... */\n    tag_219:\n        /* \"PancakeERC20.sol\":1686:1712  balanceOf[from].sub(value) */\n      tag_333\n        /* \"PancakeERC20.sol\":1706:1711  value */\n      dup2\n        /* \"PancakeERC20.sol\":1686:1695  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1686:1701  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":1696:1700  from */\n      dup6\n        /* \"PancakeERC20.sol\":1686:1701  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PancakeERC20.sol\":1686:1705  balanceOf[from].sub */\n      tag_147\n      swap1\n        /* \"PancakeERC20.sol\":1686:1712  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_333:\n        /* \"PancakeERC20.sol\":1668:1677  balanceOf */\n      0x01\n        /* \"PancakeERC20.sol\":1668:1683  balanceOf[from] */\n      0x00\n        /* \"PancakeERC20.sol\":1678:1682  from */\n      dup5\n        /* \"PancakeERC20.sol\":1668:1683  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PancakeERC20.sol\":1668:1712  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":1736:1758  totalSupply.sub(value) */\n      tag_334\n        /* \"PancakeERC20.sol\":1752:1757  value */\n      dup2\n        /* \"PancakeERC20.sol\":1736:1747  totalSupply */\n      sload(0x00)\n        /* \"PancakeERC20.sol\":1736:1751  totalSupply.sub */\n      tag_147\n      swap1\n        /* \"PancakeERC20.sol\":1736:1758  totalSupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"PancakeERC20.sol\":1722:1733  totalSupply */\n      0x00\n        /* \"PancakeERC20.sol\":1722:1758  totalSupply = totalSupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PancakeERC20.sol\":1796:1797  0 */\n      0x00\n        /* \"PancakeERC20.sol\":1773:1806  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PancakeERC20.sol\":1782:1786  from */\n      dup3\n        /* \"PancakeERC20.sol\":1773:1806  Transfer(from, address(0), value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"PancakeERC20.sol\":1800:1805  value */\n      dup4\n        /* \"PancakeERC20.sol\":1773:1806  Transfer(from, address(0), value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PancakeERC20.sol\":1605:1813  function _burn(address from, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n    tag_287:\n        /* \"UQ112x112.sol\":369:378  uint224 z */\n      0x00\n        /* \"UQ112x112.sol\":267:273  2**112 */\n      0x010000000000000000000000000000\n        /* \"UQ112x112.sol\":402:403  y */\n      dup3\n        /* \"UQ112x112.sol\":394:404  uint224(y) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"UQ112x112.sol\":394:411  uint224(y) * Q112 */\n      mul\n        /* \"UQ112x112.sol\":390:411  z = uint224(y) * Q112 */\n      swap1\n      pop\n        /* \"UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n    tag_288:\n        /* \"UQ112x112.sol\":565:574  uint224 z */\n      0x00\n        /* \"UQ112x112.sol\":602:603  y */\n      dup2\n        /* \"UQ112x112.sol\":594:604  uint224(y) */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"UQ112x112.sol\":590:604  x / uint224(y) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"UQ112x112.sol\":590:591  x */\n      dup4\n        /* \"UQ112x112.sol\":590:604  x / uint224(y) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      tag_337\n      jumpi\n      invalid\n    tag_337:\n      div\n        /* \"UQ112x112.sol\":586:604  z = x / uint224(y) */\n      swap1\n      pop\n        /* \"UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_295:\n        /* \"SafeMath.sol\":256:265  uint256 z */\n      0x00\n        /* \"SafeMath.sol\":300:301  x */\n      dup3\n        /* \"SafeMath.sol\":294:295  y */\n      dup3\n        /* \"SafeMath.sol\":290:291  x */\n      dup5\n        /* \"SafeMath.sol\":290:295  x + y */\n      add\n        /* \"SafeMath.sol\":286:295  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"SafeMath.sol\":285:301  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c 50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8 50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n\n    auxdata: 0xa265627a7a7231582081e64a5b1e22f0bf1ebe3adc039745d98ce257993ba66d686d6ed8a763bca02064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526001600c5534801561001557600080fd5b5060004690506040518080613bfa60529139605201905060405180910390206040518060400160405280600b81526020017f50616e63616b65204c5073000000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a85806101756000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146108c4578063d505accf1461090e578063dd62ed3e146109a7578063fff6cae914610a1f576101a9565b8063ba9a7a5614610818578063bc25cf7714610836578063c45a01551461087a576101a9565b80637ecebe00116100d35780637ecebe001461067857806389afcb44146106d057806395d89b411461072f578063a9059cbb146107b2576101a9565b80636a627842146105aa57806370a08231146106025780637464fc3d1461065a576101a9565b806323b872dd116101665780633644e515116101405780633644e515146104ec578063485cc9551461050a5780635909c0d51461056e5780635a3d54931461058c576101a9565b806323b872dd1461042457806330adf81f146104aa578063313ce567146104c8576101a9565b8063022c0d9f146101ae57806306fdde031461025b5780630902f1ac146102de578063095ea7b3146103565780630dfe1681146103bc57806318160ddd14610406575b600080fd5b610259600480360360808110156101c457600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184600183028401116401000000008311171561024957600080fd5b9091929391929390505050610a29565b005b610263611234565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a3578082015181840152602081019050610288565b50505050905090810190601f1680156102d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e661126d565b60405180846dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff168152602001935050505060405180910390f35b6103a26004803603604081101561036c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ca565b604051808215151515815260200191505060405180910390f35b6103c46112e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040e611307565b6040518082815260200191505060405180910390f35b6104906004803603606081101561043a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061130d565b604051808215151515815260200191505060405180910390f35b6104b26114d8565b6040518082815260200191505060405180910390f35b6104d06114ff565b604051808260ff1660ff16815260200191505060405180910390f35b6104f4611504565b6040518082815260200191505060405180910390f35b61056c6004803603604081101561052057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061150a565b005b610576611653565b6040518082815260200191505060405180910390f35b610594611659565b6040518082815260200191505060405180910390f35b6105ec600480360360208110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165f565b6040518082815260200191505060405180910390f35b6106446004803603602081101561061857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b10565b6040518082815260200191505060405180910390f35b610662611b28565b6040518082815260200191505060405180910390f35b6106ba6004803603602081101561068e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2e565b6040518082815260200191505060405180910390f35b610712600480360360208110156106e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b46565b604051808381526020018281526020019250505060405180910390f35b610737612133565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077757808201518184015260208101905061075c565b50505050905090810190601f1680156107a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107fe600480360360408110156107c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061216c565b604051808215151515815260200191505060405180910390f35b610820612183565b6040518082815260200191505060405180910390f35b6108786004803603602081101561084c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612189565b005b610882612464565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108cc61248a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109a5600480360360e081101561092457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506124b0565b005b610a09600480360360408110156109bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127f4565b6040518082815260200191505060405180910390f35b610a27612819565b005b6001600c5414610aa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000851180610ab85750600084115b610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180613a086023913960400191505060405180910390fd5b600080610b1861126d565b5091509150816dffffffffffffffffffffffffffff1687108015610b4b5750806dffffffffffffffffffffffffffff1686105b610bbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f50616e63616b653a20494e53554646494349454e545f4c49515549444954590081525060200191505060405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614158015610c7657508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610ce8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f50616e63616b653a20494e56414c49445f544f0000000000000000000000000081525060200191505060405180910390fd5b60008b1115610cfd57610cfc828a8d612a99565b5b60008a1115610d1257610d11818a8c612a99565b5b6000888890501115610dfa578873ffffffffffffffffffffffffffffffffffffffff166384800812338d8d8c8c6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e7757600080fd5b505afa158015610e8b573d6000803e3d6000fd5b505050506040513d6020811015610ea157600080fd5b810190808051906020019092919050505093508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f3157600080fd5b505afa158015610f45573d6000803e3d6000fd5b505050506040513d6020811015610f5b57600080fd5b810190808051906020019092919050505092505050600089856dffffffffffffffffffffffffffff16038311610f92576000610fa8565b89856dffffffffffffffffffffffffffff160383035b9050600089856dffffffffffffffffffffffffffff16038311610fcc576000610fe2565b89856dffffffffffffffffffffffffffff160383035b90506000821180610ff35750600081115b611048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806139c06022913960400191505060405180910390fd5b6000611084611061601985612ce690919063ffffffff16565b61107661271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905060006110c261109f601985612ce690919063ffffffff16565b6110b461271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905061110d6305f5e1006110ff896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b612ce690919063ffffffff16565b6111208284612ce690919063ffffffff16565b1015611194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f50616e63616b653a204b0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50506111a284848888612dfe565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f6040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600b81526020017f50616e63616b65204c507300000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b60006112d733848461317c565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114c25761144182600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6114cd848484613267565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50616e63616b653a20464f5242494444454e000000000000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c54146116d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000806116ec61126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561179257600080fd5b505afa1580156117a6573d6000803e3d6000fd5b505050506040513d60208110156117bc57600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561187057600080fd5b505afa158015611884573d6000803e3d6000fd5b505050506040513d602081101561189a57600080fd5b8101908080519060200190929190505050905060006118d2856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b905060006118f9856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b9050600061190787876133fb565b9050600080549050600081141561195b576119476103e86119396119348688612ce690919063ffffffff16565b613602565b612d7b90919063ffffffff16565b985061195660006103e8613664565b6119be565b6119bb886dffffffffffffffffffffffffffff166119828387612ce690919063ffffffff16565b8161198957fe5b04886dffffffffffffffffffffffffffff166119ae8487612ce690919063ffffffff16565b816119b557fe5b0461377e565b98505b60008911611a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a2b6026913960400191505060405180910390fd5b611a218a8a613664565b611a2d86868a8a612dfe565b8115611aa557611a9e6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051808381526020018281526020019250505060405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611bc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550600080611bd461126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d6020811015611cd057600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611d6257600080fd5b505afa158015611d76573d6000803e3d6000fd5b505050506040513d6020811015611d8c57600080fd5b810190808051906020019092919050505090506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611def88886133fb565b905060008054905080611e0b8685612ce690919063ffffffff16565b81611e1257fe5b049a5080611e298585612ce690919063ffffffff16565b81611e3057fe5b04995060008b118015611e43575060008a115b611e98576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806139e26026913960400191505060405180910390fd5b611ea23084613797565b611ead878d8d612a99565b611eb8868d8c612a99565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611f3557600080fd5b505afa158015611f49573d6000803e3d6000fd5b505050506040513d6020811015611f5f57600080fd5b810190808051906020019092919050505094508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611fef57600080fd5b505afa158015612003573d6000803e3d6000fd5b505050506040513d602081101561201957600080fd5b8101908080519060200190929190505050935061203885858b8b612dfe565b81156120b0576120a96008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051808381526020018281526020019250505060405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600781526020017f43616b652d4c500000000000000000000000000000000000000000000000000081525081565b6000612179338484613267565b6001905092915050565b6103e881565b6001600c5414612201576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123578284612352600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561230957600080fd5b505afa15801561231d573d6000803e3d6000fd5b505050506040513d602081101561233357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b61245781846124526008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561240957600080fd5b505afa15801561241d573d6000803e3d6000fd5b505050506040513d602081101561243357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015612526576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156126f8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561276c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6127de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b6127e989898961317c565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414612891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550612a8f600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561293b57600080fd5b505afa15801561294f573d6000803e3d6000fd5b505050506040513d602081101561296557600080fd5b8101908080519060200190929190505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612a1557600080fd5b505afa158015612a29573d6000803e3d6000fd5b505050506040513d6020811015612a3f57600080fd5b8101908080519060200190929190505050600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16612dfe565b6001600c81905550565b600060608473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612bc65780518252602082019150602081019050602083039250612ba3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612c28576040519150601f19603f3d011682016040523d82523d6000602084013e612c2d565b606091505b5091509150818015612c6d5750600081511480612c6c5750808060200190516020811015612c5a57600080fd5b81019080805190602001909291905050505b5b612cdf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50616e63616b653a205452414e534645525f4641494c4544000000000000000081525060200191505060405180910390fd5b5050505050565b600080821480612d035750828283850292508281612d0057fe5b04145b612d75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115612df8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168411158015612e6e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168311155b612ee0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f50616e63616b653a204f564552464c4f5700000000000000000000000000000081525060200191505060405180910390fd5b60006401000000004281612ef057fe5b06905060006008601c9054906101000a900463ffffffff168203905060008163ffffffff16118015612f3357506000846dffffffffffffffffffffffffffff1614155b8015612f5057506000836dffffffffffffffffffffffffffff1614155b15613032578063ffffffff16612f9585612f69866138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16026009600082825401925050819055508063ffffffff1661300384612fd7876138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602600a600082825401925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1660405180836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001826dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6132b981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061334e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561346657600080fd5b505afa15801561347a573d6000803e3d6000fd5b505050506040513d602081101561349057600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156135e857600081146135e3576000613528613523866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b613602565b9050600061353583613602565b9050808211156135e057600061357b600861356d61355c8587612d7b90919063ffffffff16565b600054612ce690919063ffffffff16565b612ce690919063ffffffff16565b905060006135b8613596600885612ce690919063ffffffff16565b6135aa601187612ce690919063ffffffff16565b61393c90919063ffffffff16565b905060008183816135c557fe5b04905060008111156135dc576135db8782613664565b5b5050505b50505b6135fa565b600081146135f9576000600b819055505b5b505092915050565b6000600382111561365157819050600060016002848161361e57fe5b040190505b8181101561364b5780915060028182858161363a57fe5b04018161364357fe5b049050613623565b5061365f565b6000821461365e57600190505b5b919050565b6136798160005461393c90919063ffffffff16565b6000819055506136d181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081831061378d578161378f565b825b905092915050565b6137e981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061384181600054612d7b90919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16029050919050565b6000816dffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168161393357fe5b04905092915050565b60008282840191508110156139b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e454450616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a7231582081e64a5b1e22f0bf1ebe3adc039745d98ce257993ba66d686d6ed8a763bca02064736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CHAINID SWAP1 POP PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x3BFA PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50616E63616B65204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP CALLER PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3A85 DUP1 PUSH2 0x175 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x8C4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xA1F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x87A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7B2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x65A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x58C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x406 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x288 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40E PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D0 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x150A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x576 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x594 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x662 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x737 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x75C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x820 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x878 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x882 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8CC PUSH2 0x248A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA09 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA27 PUSH2 0x2819 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP6 GT DUP1 PUSH2 0xAB8 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A08 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB18 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 LT DUP1 ISZERO PUSH2 0xB4B JUMPI POP DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 LT JUMPDEST PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F544F00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP12 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFC DUP3 DUP11 DUP14 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP11 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 DUP2 DUP11 DUP13 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 DUP9 SWAP1 POP GT ISZERO PUSH2 0xDFA JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x84800812 CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP POP POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xF92 JUMPI PUSH1 0x0 PUSH2 0xFA8 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xFCC JUMPI PUSH1 0x0 PUSH2 0xFE2 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xFF3 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C0 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1084 PUSH2 0x1061 PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1076 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10C2 PUSH2 0x109F PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10B4 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x110D PUSH4 0x5F5E100 PUSH2 0x10FF DUP10 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1120 DUP3 DUP5 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204B00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x11A2 DUP5 DUP5 DUP9 DUP9 PUSH2 0x2DFE JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP16 DUP16 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50616E63616B65204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D7 CALLER DUP5 DUP5 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x14C2 JUMPI PUSH2 0x1441 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14CD DUP5 DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20464F5242494444454E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x16EC PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x18D2 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18F9 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1907 DUP8 DUP8 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x195B JUMPI PUSH2 0x1947 PUSH2 0x3E8 PUSH2 0x1939 PUSH2 0x1934 DUP7 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1956 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x19BB DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1982 DUP4 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1989 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AE DUP5 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x19B5 JUMPI INVALID JUMPDEST DIV PUSH2 0x377E JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A2B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP11 DUP11 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x1A2D DUP7 DUP7 DUP11 DUP11 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1A9E PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x1BC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x1BD4 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1DEF DUP9 DUP9 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x1E0B DUP7 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E12 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x1E29 DUP6 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E30 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x1E43 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39E2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EA2 ADDRESS DUP5 PUSH2 0x3797 JUMP JUMPDEST PUSH2 0x1EAD DUP8 DUP14 DUP14 PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x1EB8 DUP7 DUP14 DUP13 PUSH2 0x2A99 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2003 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2038 DUP6 DUP6 DUP12 DUP12 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20A9 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616B652D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2179 CALLER DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2357 DUP3 DUP5 PUSH2 0x2352 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x231D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x2457 DUP2 DUP5 PUSH2 0x2452 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x241D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x276C JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x27DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27E9 DUP10 DUP10 DUP10 PUSH2 0x317C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x2A8F PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x294F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2BC6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2C6D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2C6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x2CDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x2D03 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x2D00 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x2DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 GT ISZERO DUP1 ISZERO PUSH2 0x2E6E JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 GT ISZERO JUMPDEST PUSH2 0x2EE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204F564552464C4F57000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP DUP2 PUSH2 0x2EF0 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 SUB SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2F33 JUMPI POP PUSH1 0x0 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2F50 JUMPI POP PUSH1 0x0 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3032 JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F95 DUP6 PUSH2 0x2F69 DUP7 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3003 DUP5 PUSH2 0x2FD7 DUP8 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x32B9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x334E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x347A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP2 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP3 ISZERO PUSH2 0x35E8 JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x35E3 JUMPI PUSH1 0x0 PUSH2 0x3528 PUSH2 0x3523 DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3535 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x35E0 JUMPI PUSH1 0x0 PUSH2 0x357B PUSH1 0x8 PUSH2 0x356D PUSH2 0x355C DUP6 DUP8 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35B8 PUSH2 0x3596 PUSH1 0x8 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35AA PUSH1 0x11 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x35C5 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x35DC JUMPI PUSH2 0x35DB DUP8 DUP3 PUSH2 0x3664 JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x35F9 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x3651 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x361E JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x364B JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x363A JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x3643 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x3623 JUMP JUMPDEST POP PUSH2 0x365F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x365E JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3679 DUP2 PUSH1 0x0 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x36D1 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x378D JUMPI DUP2 PUSH2 0x378F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3841 DUP2 PUSH1 0x0 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH15 0x10000000000000000000000000000 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH2 0x3933 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x39B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP2 0xE6 0x4A JUMPDEST 0x1E 0x22 CREATE 0xBF 0x1E 0xBE GASPRICE 0xDC SUB SWAP8 GASLIMIT 0xD9 DUP13 0xE2 JUMPI SWAP10 EXTCODESIZE 0xA6 PUSH14 0x686D6ED8A763BCA02064736F6C63 NUMBER STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "254:9486:7:-;;;1098:1;1074:25;;2150:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;2150:58:7;977:15:6;1036:7;1025:18;;1132:95;;;;;;;;;;;;;;;;;;;1261:4;;;;;;;;;;;;;;;;;1245:22;;;;;;1295:10;;;;;;;;;;;;;;;;;1285:21;;;;;;1324:7;1357:4;1104:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1104:272:6;;;1081:305;;;;;;1062:16;:324;;;;946:447;2191:10:7;2181:7;;:20;;;;;;;;;;;;;;;;;;254:9486;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146108c4578063d505accf1461090e578063dd62ed3e146109a7578063fff6cae914610a1f576101a9565b8063ba9a7a5614610818578063bc25cf7714610836578063c45a01551461087a576101a9565b80637ecebe00116100d35780637ecebe001461067857806389afcb44146106d057806395d89b411461072f578063a9059cbb146107b2576101a9565b80636a627842146105aa57806370a08231146106025780637464fc3d1461065a576101a9565b806323b872dd116101665780633644e515116101405780633644e515146104ec578063485cc9551461050a5780635909c0d51461056e5780635a3d54931461058c576101a9565b806323b872dd1461042457806330adf81f146104aa578063313ce567146104c8576101a9565b8063022c0d9f146101ae57806306fdde031461025b5780630902f1ac146102de578063095ea7b3146103565780630dfe1681146103bc57806318160ddd14610406575b600080fd5b610259600480360360808110156101c457600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021557600080fd5b82018360208201111561022757600080fd5b8035906020019184600183028401116401000000008311171561024957600080fd5b9091929391929390505050610a29565b005b610263611234565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a3578082015181840152602081019050610288565b50505050905090810190601f1680156102d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e661126d565b60405180846dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020018263ffffffff1663ffffffff168152602001935050505060405180910390f35b6103a26004803603604081101561036c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ca565b604051808215151515815260200191505060405180910390f35b6103c46112e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040e611307565b6040518082815260200191505060405180910390f35b6104906004803603606081101561043a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061130d565b604051808215151515815260200191505060405180910390f35b6104b26114d8565b6040518082815260200191505060405180910390f35b6104d06114ff565b604051808260ff1660ff16815260200191505060405180910390f35b6104f4611504565b6040518082815260200191505060405180910390f35b61056c6004803603604081101561052057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061150a565b005b610576611653565b6040518082815260200191505060405180910390f35b610594611659565b6040518082815260200191505060405180910390f35b6105ec600480360360208110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061165f565b6040518082815260200191505060405180910390f35b6106446004803603602081101561061857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b10565b6040518082815260200191505060405180910390f35b610662611b28565b6040518082815260200191505060405180910390f35b6106ba6004803603602081101561068e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2e565b6040518082815260200191505060405180910390f35b610712600480360360208110156106e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b46565b604051808381526020018281526020019250505060405180910390f35b610737612133565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077757808201518184015260208101905061075c565b50505050905090810190601f1680156107a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107fe600480360360408110156107c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061216c565b604051808215151515815260200191505060405180910390f35b610820612183565b6040518082815260200191505060405180910390f35b6108786004803603602081101561084c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612189565b005b610882612464565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108cc61248a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109a5600480360360e081101561092457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506124b0565b005b610a09600480360360408110156109bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127f4565b6040518082815260200191505060405180910390f35b610a27612819565b005b6001600c5414610aa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000851180610ab85750600084115b610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180613a086023913960400191505060405180910390fd5b600080610b1861126d565b5091509150816dffffffffffffffffffffffffffff1687108015610b4b5750806dffffffffffffffffffffffffffff1686105b610bbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f50616e63616b653a20494e53554646494349454e545f4c49515549444954590081525060200191505060405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614158015610c7657508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610ce8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f50616e63616b653a20494e56414c49445f544f0000000000000000000000000081525060200191505060405180910390fd5b60008b1115610cfd57610cfc828a8d612a99565b5b60008a1115610d1257610d11818a8c612a99565b5b6000888890501115610dfa578873ffffffffffffffffffffffffffffffffffffffff166384800812338d8d8c8c6040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e7757600080fd5b505afa158015610e8b573d6000803e3d6000fd5b505050506040513d6020811015610ea157600080fd5b810190808051906020019092919050505093508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f3157600080fd5b505afa158015610f45573d6000803e3d6000fd5b505050506040513d6020811015610f5b57600080fd5b810190808051906020019092919050505092505050600089856dffffffffffffffffffffffffffff16038311610f92576000610fa8565b89856dffffffffffffffffffffffffffff160383035b9050600089856dffffffffffffffffffffffffffff16038311610fcc576000610fe2565b89856dffffffffffffffffffffffffffff160383035b90506000821180610ff35750600081115b611048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806139c06022913960400191505060405180910390fd5b6000611084611061601985612ce690919063ffffffff16565b61107661271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905060006110c261109f601985612ce690919063ffffffff16565b6110b461271088612ce690919063ffffffff16565b612d7b90919063ffffffff16565b905061110d6305f5e1006110ff896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b612ce690919063ffffffff16565b6111208284612ce690919063ffffffff16565b1015611194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f50616e63616b653a204b0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50506111a284848888612dfe565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f6040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600b81526020017f50616e63616b65204c507300000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b60006112d733848461317c565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146114c25761144182600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6114cd848484613267565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f50616e63616b653a20464f5242494444454e000000000000000000000000000081525060200191505060405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c54146116d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000806116ec61126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561179257600080fd5b505afa1580156117a6573d6000803e3d6000fd5b505050506040513d60208110156117bc57600080fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561187057600080fd5b505afa158015611884573d6000803e3d6000fd5b505050506040513d602081101561189a57600080fd5b8101908080519060200190929190505050905060006118d2856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b905060006118f9856dffffffffffffffffffffffffffff1684612d7b90919063ffffffff16565b9050600061190787876133fb565b9050600080549050600081141561195b576119476103e86119396119348688612ce690919063ffffffff16565b613602565b612d7b90919063ffffffff16565b985061195660006103e8613664565b6119be565b6119bb886dffffffffffffffffffffffffffff166119828387612ce690919063ffffffff16565b8161198957fe5b04886dffffffffffffffffffffffffffff166119ae8487612ce690919063ffffffff16565b816119b557fe5b0461377e565b98505b60008911611a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613a2b6026913960400191505060405180910390fd5b611a218a8a613664565b611a2d86868a8a612dfe565b8115611aa557611a9e6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051808381526020018281526020019250505060405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611bc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550600080611bd461126d565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d6020811015611cd057600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611d6257600080fd5b505afa158015611d76573d6000803e3d6000fd5b505050506040513d6020811015611d8c57600080fd5b810190808051906020019092919050505090506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000611def88886133fb565b905060008054905080611e0b8685612ce690919063ffffffff16565b81611e1257fe5b049a5080611e298585612ce690919063ffffffff16565b81611e3057fe5b04995060008b118015611e43575060008a115b611e98576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806139e26026913960400191505060405180910390fd5b611ea23084613797565b611ead878d8d612a99565b611eb8868d8c612a99565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611f3557600080fd5b505afa158015611f49573d6000803e3d6000fd5b505050506040513d6020811015611f5f57600080fd5b810190808051906020019092919050505094508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611fef57600080fd5b505afa158015612003573d6000803e3d6000fd5b505050506040513d602081101561201957600080fd5b8101908080519060200190929190505050935061203885858b8b612dfe565b81156120b0576120a96008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051808381526020018281526020019250505060405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600781526020017f43616b652d4c500000000000000000000000000000000000000000000000000081525081565b6000612179338484613267565b6001905092915050565b6103e881565b6001600c5414612201576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506123578284612352600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561230957600080fd5b505afa15801561231d573d6000803e3d6000fd5b505050506040513d602081101561233357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b61245781846124526008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561240957600080fd5b505afa15801561241d573d6000803e3d6000fd5b505050506040513d602081101561243357600080fd5b8101908080519060200190929190505050612d7b90919063ffffffff16565b612a99565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015612526576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f50616e63616b653a20455850495245440000000000000000000000000000000081525060200191505060405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156126f8573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561276c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6127de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50616e63616b653a20494e56414c49445f5349474e415455524500000000000081525060200191505060405180910390fd5b6127e989898961317c565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414612891576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f50616e63616b653a204c4f434b4544000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c81905550612a8f600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561293b57600080fd5b505afa15801561294f573d6000803e3d6000fd5b505050506040513d602081101561296557600080fd5b8101908080519060200190929190505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015612a1557600080fd5b505afa158015612a29573d6000803e3d6000fd5b505050506040513d6020811015612a3f57600080fd5b8101908080519060200190929190505050600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16612dfe565b6001600c81905550565b600060608473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310612bc65780518252602082019150602081019050602083039250612ba3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612c28576040519150601f19603f3d011682016040523d82523d6000602084013e612c2d565b606091505b5091509150818015612c6d5750600081511480612c6c5750808060200190516020811015612c5a57600080fd5b81019080805190602001909291905050505b5b612cdf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50616e63616b653a205452414e534645525f4641494c4544000000000000000081525060200191505060405180910390fd5b5050505050565b600080821480612d035750828283850292508281612d0057fe5b04145b612d75576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115612df8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168411158015612e6e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff168311155b612ee0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f50616e63616b653a204f564552464c4f5700000000000000000000000000000081525060200191505060405180910390fd5b60006401000000004281612ef057fe5b06905060006008601c9054906101000a900463ffffffff168203905060008163ffffffff16118015612f3357506000846dffffffffffffffffffffffffffff1614155b8015612f5057506000836dffffffffffffffffffffffffffff1614155b15613032578063ffffffff16612f9585612f69866138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16026009600082825401925050819055508063ffffffff1661300384612fd7876138b1565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166138dc90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602600a600082825401925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1660405180836dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168152602001826dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1681526020019250505060405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6132b981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061334e81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b15801561346657600080fd5b505afa15801561347a573d6000803e3d6000fd5b505050506040513d602081101561349057600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156135e857600081146135e3576000613528613523866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff16612ce690919063ffffffff16565b613602565b9050600061353583613602565b9050808211156135e057600061357b600861356d61355c8587612d7b90919063ffffffff16565b600054612ce690919063ffffffff16565b612ce690919063ffffffff16565b905060006135b8613596600885612ce690919063ffffffff16565b6135aa601187612ce690919063ffffffff16565b61393c90919063ffffffff16565b905060008183816135c557fe5b04905060008111156135dc576135db8782613664565b5b5050505b50505b6135fa565b600081146135f9576000600b819055505b5b505092915050565b6000600382111561365157819050600060016002848161361e57fe5b040190505b8181101561364b5780915060028182858161363a57fe5b04018161364357fe5b049050613623565b5061365f565b6000821461365e57600190505b5b919050565b6136798160005461393c90919063ffffffff16565b6000819055506136d181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461393c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600081831061378d578161378f565b825b905092915050565b6137e981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d7b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061384181600054612d7b90919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16029050919050565b6000816dffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168161393357fe5b04905092915050565b60008282840191508110156139b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e454450616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a7231582081e64a5b1e22f0bf1ebe3adc039745d98ce257993ba66d686d6ed8a763bca02064736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A627842 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x8C4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0xA1F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x87A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x7B2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6A627842 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x65A JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x3644E515 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x58C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4C8 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x406 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x288 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C4 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40E PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x130D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D0 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x150A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x576 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x594 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x662 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x712 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x737 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x777 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x75C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x820 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x878 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2189 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x882 PUSH2 0x2464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8CC PUSH2 0x248A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x24B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA09 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA27 PUSH2 0x2819 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP6 GT DUP1 PUSH2 0xAB8 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A08 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB18 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 LT DUP1 ISZERO PUSH2 0xB4B JUMPI POP DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 LT JUMPDEST PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F544F00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP12 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFC DUP3 DUP11 DUP14 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP11 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 DUP2 DUP11 DUP13 PUSH2 0x2A99 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 DUP9 SWAP1 POP GT ISZERO PUSH2 0xDFA JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x84800812 CALLER DUP14 DUP14 DUP13 DUP13 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP3 POP POP POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xF92 JUMPI PUSH1 0x0 PUSH2 0xFA8 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 GT PUSH2 0xFCC JUMPI PUSH1 0x0 PUSH2 0xFE2 JUMP JUMPDEST DUP10 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xFF3 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39C0 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1084 PUSH2 0x1061 PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1076 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10C2 PUSH2 0x109F PUSH1 0x19 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x10B4 PUSH2 0x2710 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x110D PUSH4 0x5F5E100 PUSH2 0x10FF DUP10 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1120 DUP3 DUP5 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204B00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x11A2 DUP5 DUP5 DUP9 DUP9 PUSH2 0x2DFE JUMP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 DUP5 DUP5 DUP16 DUP16 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50616E63616B65204C5073000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D7 CALLER DUP5 DUP5 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x14C2 JUMPI PUSH2 0x1441 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x14CD DUP5 DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20464F5242494444454E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x16D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x16EC PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x189A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x18D2 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18F9 DUP6 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1907 DUP8 DUP8 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x195B JUMPI PUSH2 0x1947 PUSH2 0x3E8 PUSH2 0x1939 PUSH2 0x1934 DUP7 DUP9 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1956 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x19BB DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1982 DUP4 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1989 JUMPI INVALID JUMPDEST DIV DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19AE DUP5 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x19B5 JUMPI INVALID JUMPDEST DIV PUSH2 0x377E JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1A17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A2B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP11 DUP11 PUSH2 0x3664 JUMP JUMPDEST PUSH2 0x1A2D DUP7 DUP7 DUP11 DUP11 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1A9E PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x1BC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x1BD4 PUSH2 0x126D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1DEF DUP9 DUP9 PUSH2 0x33FB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP1 PUSH2 0x1E0B DUP7 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E12 JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x1E29 DUP6 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1E30 JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x1E43 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x39E2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EA2 ADDRESS DUP5 PUSH2 0x3797 JUMP JUMPDEST PUSH2 0x1EAD DUP8 DUP14 DUP14 PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x1EB8 DUP7 DUP14 DUP13 PUSH2 0x2A99 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2003 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP4 POP PUSH2 0x2038 DUP6 DUP6 DUP12 DUP12 PUSH2 0x2DFE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x20B0 JUMPI PUSH2 0x20A9 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 DUP14 DUP14 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43616B652D4C5000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2179 CALLER DUP5 DUP5 PUSH2 0x3267 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x2357 DUP3 DUP5 PUSH2 0x2352 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x231D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST PUSH2 0x2457 DUP2 DUP5 PUSH2 0x2452 PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x241D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2A99 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x2526 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204558504952454400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0x0 SHL DUP10 DUP10 DUP10 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x276C JUMPI POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x27DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27E9 DUP10 DUP10 DUP10 PUSH2 0x317C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD EQ PUSH2 0x2891 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204C4F434B45440000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x2A8F PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x294F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2BC6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C28 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2C6D JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2C6C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP JUMPDEST JUMPDEST PUSH2 0x2CDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x2D03 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 PUSH2 0x2D00 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x2D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x2DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 GT ISZERO DUP1 ISZERO PUSH2 0x2E6E JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 GT ISZERO JUMPDEST PUSH2 0x2EE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50616E63616B653A204F564552464C4F57000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x100000000 TIMESTAMP DUP2 PUSH2 0x2EF0 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 SUB SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x2F33 JUMPI POP PUSH1 0x0 DUP5 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2F50 JUMPI POP PUSH1 0x0 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3032 JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x2F95 DUP6 PUSH2 0x2F69 DUP7 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x3003 DUP5 PUSH2 0x2FD7 DUP8 PUSH2 0x38B1 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x38DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x8 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x32B9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x334E DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x347A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP2 POP PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP DUP3 ISZERO PUSH2 0x35E8 JUMPI PUSH1 0x0 DUP2 EQ PUSH2 0x35E3 JUMPI PUSH1 0x0 PUSH2 0x3528 PUSH2 0x3523 DUP7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3535 DUP4 PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x35E0 JUMPI PUSH1 0x0 PUSH2 0x357B PUSH1 0x8 PUSH2 0x356D PUSH2 0x355C DUP6 DUP8 PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x35B8 PUSH2 0x3596 PUSH1 0x8 DUP6 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x35AA PUSH1 0x11 DUP8 PUSH2 0x2CE6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x35C5 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x35DC JUMPI PUSH2 0x35DB DUP8 DUP3 PUSH2 0x3664 JUMP JUMPDEST JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x35FA JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x35F9 JUMPI PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x3651 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x361E JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x364B JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x363A JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x3643 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x3623 JUMP JUMPDEST POP PUSH2 0x365F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x365E JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3679 DUP2 PUSH1 0x0 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x36D1 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x393C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x378D JUMPI DUP2 PUSH2 0x378F JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E9 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3841 DUP2 PUSH1 0x0 SLOAD PUSH2 0x2D7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH15 0x10000000000000000000000000000 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH2 0x3933 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0x39B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP2 0xE6 0x4A JUMPDEST 0x1E 0x22 CREATE 0xBF 0x1E 0xBE GASPRICE 0xDC SUB SWAP8 GASLIMIT 0xD9 DUP13 0xE2 JUMPI SWAP10 EXTCODESIZE 0xA6 PUSH14 0x686D6ED8A763BCA02064736F6C63 NUMBER STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "254:9486:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:9486:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7305:1856;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7305:1856:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7305:1856:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7305:1856:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7305:1856:7;;;;;;;;;;;;:::i;:::-;;192:43:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;192:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:227:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:147:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2279:147:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;550:21:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;329:26:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2577:331;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2577:331:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;623:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;288:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;482:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2270:204:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2270:204:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;894:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;932;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4428:1217;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4428:1217:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;361:44:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;361:44:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;970:17:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;737:41:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;737:41:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5754:1442:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5754:1442:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;241:41:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;241:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2432:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2432:139:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;375:46:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9207:329;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9207:329:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;522:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;577:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2914:726:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2914:726:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;411:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;411:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9582:156:7;;;:::i;:::-;;7305:1856;1151:1;1139:8;;:13;1131:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:1;1182:8;:12;;;;7431:1;7418:10;:14;:32;;;;7449:1;7436:10;:14;7418:32;7410:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7501:17;7520;7542:13;:11;:13::i;:::-;7500:55;;;;;7601:9;7588:22;;:10;:22;:48;;;;;7627:9;7614:22;;:10;:22;7588:48;7580:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7683:13;7706;7794:15;7812:6;;;;;;;;;;;7794:24;;7828:15;7846:6;;;;;;;;;;;7828:24;;7876:7;7870:13;;:2;:13;;;;:30;;;;;7893:7;7887:13;;:2;:13;;;;7870:30;7862:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7951:1;7938:10;:14;7934:58;;;7954:38;7968:7;7977:2;7981:10;7954:13;:38::i;:::-;7934:58;8053:1;8040:10;:14;8036:58;;;8056:38;8070:7;8079:2;8083:10;8056:13;:38::i;:::-;8036:58;8156:1;8142:4;;:11;;:15;8138:93;;;8174:2;8159:30;;;8190:10;8202;8214;8226:4;;8159:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8159:72:7;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8159:72:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8159:72:7;;;;8138:93;8259:7;8252:25;;;8286:4;8252:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8252:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8252:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8252:40:7;;;;;;;;;;;;;;;;8241:51;;8320:7;8313:25;;;8347:4;8313:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8313:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8313:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8313:40:7;;;;;;;;;;;;;;;;8302:51;;1204:1;;8373:14;8413:10;8401:9;:22;;;8390:8;:33;:75;;8464:1;8390:75;;;8450:10;8438:9;:22;;;8426:8;:35;8390:75;8373:92;;8475:14;8515:10;8503:9;:22;;;8492:8;:33;:75;;8566:1;8492:75;;;8552:10;8540:9;:22;;;8528:8;:35;8492:75;8475:92;;8597:1;8585:9;:13;:30;;;;8614:1;8602:9;:13;8585:30;8577:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8738:21;8763:42;8787:17;8801:2;8787:9;:13;;:17;;;;:::i;:::-;8763:19;8776:5;8763:8;:12;;:19;;;;:::i;:::-;:23;;:42;;;;:::i;:::-;8738:68;;8816:21;8841:42;8865:17;8879:2;8865:9;:13;;:17;;;;:::i;:::-;8841:19;8854:5;8841:8;:12;;:19;;;;:::i;:::-;:23;;:42;;;;:::i;:::-;8816:68;;8944:44;8979:8;8944:30;8964:9;8944:30;;8949:9;8944:15;;:19;;:30;;;;:::i;:::-;:34;;:44;;;;:::i;:::-;8902:38;8923:16;8902;:20;;:38;;;;:::i;:::-;:86;;8894:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:1;;9024:49;9032:8;9042;9052:9;9063;9024:7;:49::i;:::-;9151:2;9088:66;;9093:10;9088:66;;;9105:9;9116;9127:10;9139;9088:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:1;;;;;;1226;1215:8;:12;;;;7305:1856;;;;;:::o;192:43:6:-;;;;;;;;;;;;;;;;;;;:::o;1240:227:7:-;1284:17;1303;1322:26;1372:8;;;;;;;;;;;1360:20;;1402:8;;;;;;;;;;;1390:20;;1442:18;;;;;;;;;;;1420:40;;1240:227;;;:::o;2279:147:6:-;2346:4;2362:36;2371:10;2383:7;2392:5;2362:8;:36::i;:::-;2415:4;2408:11;;2279:147;;;;:::o;550:21:7:-;;;;;;;;;;;;;:::o;329:26:6:-;;;;:::o;2577:331::-;2688:4;2747:2;2708:9;:15;2718:4;2708:15;;;;;;;;;;;;;;;:27;2724:10;2708:27;;;;;;;;;;;;;;;;:42;2704:141;;2796:38;2828:5;2796:9;:15;2806:4;2796:15;;;;;;;;;;;;;;;:27;2812:10;2796:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2766:9;:15;2776:4;2766:15;;;;;;;;;;;;;;;:27;2782:10;2766:27;;;;;;;;;;;;;;;:68;;;;2704:141;2854:26;2864:4;2870:2;2874:5;2854:9;:26::i;:::-;2897:4;2890:11;;2577:331;;;;;:::o;623:108::-;665:66;623:108;;;:::o;288:35::-;321:2;288:35;:::o;482:31::-;;;;:::o;2270:204:7:-;2365:7;;;;;;;;;;;2351:21;;:10;:21;;;2343:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2434:7;2425:6;;:16;;;;;;;;;;;;;;;;;;2460:7;2451:6;;:16;;;;;;;;;;;;;;;;;;2270:204;;:::o;894:32::-;;;;:::o;932:::-;;;;:::o;4428:1217::-;4477:14;1151:1;1139:8;;:13;1131:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:1;1182:8;:12;;;;4504:17;4523;4545:13;:11;:13::i;:::-;4503:55;;;;;4583:13;4606:6;;;;;;;;;;;4599:24;;;4632:4;4599:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4599:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4599:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4599:39:7;;;;;;;;;;;;;;;;4583:55;;4648:13;4671:6;;;;;;;;;;;4664:24;;;4697:4;4664:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4664:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4664:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4664:39:7;;;;;;;;;;;;;;;;4648:55;;4713:12;4728:23;4741:9;4728:23;;:8;:12;;:23;;;;:::i;:::-;4713:38;;4761:12;4776:23;4789:9;4776:23;;:8;:12;;:23;;;;:::i;:::-;4761:38;;4810:10;4823:30;4832:9;4843;4823:8;:30::i;:::-;4810:43;;4863:17;4883:11;;4863:31;;5002:1;4986:12;:17;4982:347;;;5031:54;416:5;5031:31;5041:20;5053:7;5041;:11;;:20;;;;:::i;:::-;5031:9;:31::i;:::-;:35;;:54;;;;:::i;:::-;5019:66;;5098:36;5112:1;416:5;5098;:36::i;:::-;4982:347;;;5232:86;5269:9;5241:37;;:25;5253:12;5241:7;:11;;:25;;;;:::i;:::-;:37;;;;;;5308:9;5280:37;;:25;5292:12;5280:7;:11;;:25;;;;:::i;:::-;:37;;;;;;5232:8;:86::i;:::-;5220:98;;4982:347;5358:1;5346:9;:13;5338:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5412:20;5418:2;5422:9;5412:5;:20::i;:::-;5443:49;5451:8;5461;5471:9;5482;5443:7;:49::i;:::-;5506:5;5502:47;;;5521:28;5540:8;;;;;;;;;;;5521:28;;5526:8;;;;;;;;;;;5521:14;;:18;;:28;;;;:::i;:::-;5513:5;:36;;;;5502:47;5609:10;5604:34;;;5621:7;5630;5604:34;;;;;;;;;;;;;;;;;;;;;;;;1204:1;;;;;;;;1226;1215:8;:12;;;;4428:1217;;;:::o;361:44:6:-;;;;;;;;;;;;;;;;;:::o;970:17:7:-;;;;:::o;737:41:6:-;;;;;;;;;;;;;;;;;:::o;5754:1442:7:-;5803:12;5817;1151:1;1139:8;;:13;1131:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:1;1182:8;:12;;;;5842:17;5861;5883:13;:11;:13::i;:::-;5841:55;;;;;5921:15;5939:6;;;;;;;;;;;5921:24;;6001:15;6019:6;;;;;;;;;;;6001:24;;6081:13;6104:7;6097:25;;;6131:4;6097:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6097:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6097:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6097:40:7;;;;;;;;;;;;;;;;6081:56;;6147:13;6170:7;6163:25;;;6197:4;6163:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6163:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6163:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6163:40:7;;;;;;;;;;;;;;;;6147:56;;6213:14;6230:9;:24;6248:4;6230:24;;;;;;;;;;;;;;;;6213:41;;6265:10;6278:30;6287:9;6298;6278:8;:30::i;:::-;6265:43;;6318:17;6338:11;;6318:31;;6473:12;6447:23;6461:8;6447:9;:13;;:23;;;;:::i;:::-;:38;;;;;;6437:48;;6579:12;6553:23;6567:8;6553:9;:13;;:23;;;;:::i;:::-;:38;;;;;;6543:48;;6667:1;6657:7;:11;:26;;;;;6682:1;6672:7;:11;6657:26;6649:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6736:31;6750:4;6757:9;6736:5;:31::i;:::-;6777:35;6791:7;6800:2;6804:7;6777:13;:35::i;:::-;6822;6836:7;6845:2;6849:7;6822:13;:35::i;:::-;6885:7;6878:25;;;6912:4;6878:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6878:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6878:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6878:40:7;;;;;;;;;;;;;;;;6867:51;;6946:7;6939:25;;;6973:4;6939:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6939:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6939:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6939:40:7;;;;;;;;;;;;;;;;6928:51;;6990:49;6998:8;7008;7018:9;7029;6990:7;:49::i;:::-;7053:5;7049:47;;;7068:28;7087:8;;;;;;;;;;;7068:28;;7073:8;;;;;;;;;;;7068:14;;:18;;:28;;;;:::i;:::-;7060:5;:36;;;;7049:47;7186:2;7151:38;;7156:10;7151:38;;;7168:7;7177;7151:38;;;;;;;;;;;;;;;;;;;;;;;;1204:1;;;;;;;;;1226;1215:8;:12;;;;5754:1442;;;:::o;241:41:6:-;;;;;;;;;;;;;;;;;;;:::o;2432:139::-;2495:4;2511:32;2521:10;2533:2;2537:5;2511:9;:32::i;:::-;2560:4;2553:11;;2432:139;;;;:::o;375:46:7:-;416:5;375:46;:::o;9207:329::-;1151:1;1139:8;;:13;1131:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:1;1182:8;:12;;;;9257:15;9275:6;;;;;;;;;;;9257:24;;9306:15;9324:6;;;;;;;;;;;9306:24;;9355:82;9369:7;9378:2;9382:54;9427:8;;;;;;;;;;;9382:54;;9389:7;9382:25;;;9416:4;9382:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9382:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9382:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9382:40:7;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;9355:13;:82::i;:::-;9447;9461:7;9470:2;9474:54;9519:8;;;;;;;;;;;9474:54;;9481:7;9474:25;;;9508:4;9474:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9474:40:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9474:40:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9474:40:7;;;;;;;;;;;;;;;;:44;;:54;;;;:::i;:::-;9447:13;:82::i;:::-;1204:1;;1226;1215:8;:12;;;;9207:329;:::o;522:22::-;;;;;;;;;;;;;:::o;577:21::-;;;;;;;;;;;;;:::o;2914:726:6:-;3127:15;3115:8;:27;;3107:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3173:14;3275:16;;665:66;3330:15;;3347:5;3354:7;3363:5;3370:6;:13;3377:5;3370:13;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;3387:8;3319:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3319:77:6;;;3309:88;;;;;;3213:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3213:198:6;;;3190:231;;;;;;3173:248;;3431:24;3458:26;3468:6;3476:1;3479;3482;3458:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3458:26:6;;;;;;;;3431:53;;3530:1;3502:30;;:16;:30;;;;:59;;;;;3556:5;3536:25;;:16;:25;;;3502:59;3494:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3602:31;3611:5;3618:7;3627:5;3602:8;:31::i;:::-;2914:726;;;;;;;;;:::o;411:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9582:156:7:-;1151:1;1139:8;;:13;1131:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:1;1182:8;:12;;;;9622:109;9637:6;;;;;;;;;;;9630:24;;;9663:4;9630:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9630:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9630:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9630:39:7;;;;;;;;;;;;;;;;9678:6;;;;;;;;;;;9671:24;;;9704:4;9671:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9671:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9671:39:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9671:39:7;;;;;;;;;;;;;;;;9712:8;;;;;;;;;;;9722;;;;;;;;;;;9622:7;:109::i;:::-;1226:1;1215:8;:12;;;;9582:156::o;1473:282::-;1554:12;1568:17;1589:5;:10;;479:34;;;;;;;;;;;;;;;;;469:45;;;;;;1633:2;1637:5;1600:43;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1600:43:7;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1600:43:7;1589:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1589:55:7;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1553:91:7;;;;1662:7;:57;;;;;1689:1;1674:4;:11;:16;:44;;;;1705:4;1694:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1694:24:7;;;;;;;;;;;;;;;;1674:44;1662:57;1654:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1473:282;;;;;:::o;481:149:8:-;539:9;573:1;568;:6;:30;;;;597:1;592;587;583;:5;579:9;;;578:15;;;;;;:20;568:30;560:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;481:149;;;;:::o;339:136::-;397:9;441:1;435;431;:5;427:9;;;426:16;;418:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:136;;;;:::o;2556:845:7:-;2687:2;2667:23;;:8;:23;;:50;;;;;2714:2;2694:23;;:8;:23;;2667:50;2659:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:21;2798:5;2780:15;:23;;;;;;2749:55;;2814:18;2852;;;;;;;;;;;2835:14;:35;2814:56;;2921:1;2907:11;:15;;;:33;;;;;2939:1;2926:9;:14;;;;2907:33;:51;;;;;2957:1;2944:9;:14;;;;2907:51;2903:332;;;3111:11;3058:64;;3063:44;3097:9;3063:27;3080:9;3063:16;:27::i;:::-;:33;;;;:44;;;;:::i;:::-;3058:50;;:64;3034:20;;:88;;;;;;;;;;;3213:11;3160:64;;3165:44;3199:9;3165:27;3182:9;3165:16;:27::i;:::-;:33;;;;:44;;;;:::i;:::-;3160:50;;:64;3136:20;;:88;;;;;;;;;;;2903:332;3263:8;3244;;:28;;;;;;;;;;;;;;;;;;3301:8;3282;;:28;;;;;;;;;;;;;;;;;;3341:14;3320:18;;:35;;;;;;;;;;;;;;;;;;3370:24;3375:8;;;;;;;;;;;3385;;;;;;;;;;;3370:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2556:845;;;;;;:::o;1819:199:6:-;1960:5;1932:9;:16;1942:5;1932:16;;;;;;;;;;;;;;;:25;1949:7;1932:25;;;;;;;;;;;;;;;:33;;;;1996:7;1980:31;;1989:5;1980:31;;;2005:5;1980:31;;;;;;;;;;;;;;;;;;1819:199;;;:::o;2024:249::-;2150:26;2170:5;2150:9;:15;2160:4;2150:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;2132:9;:15;2142:4;2132:15;;;;;;;;;;;;;;;:44;;;;2202:24;2220:5;2202:9;:13;2212:2;2202:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;2186:9;:13;2196:2;2186:13;;;;;;;;;;;;;;;:40;;;;2256:2;2241:25;;2250:4;2241:25;;;2260:5;2241:25;;;;;;;;;;;;;;;;;;2024:249;;;:::o;3487:832:7:-;3560:10;3582:13;3614:7;;;;;;;;;;;3598:30;;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3598:32:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3598:32:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3598:32:7;;;;;;;;;;;;;;;;3582:48;;3665:1;3648:19;;:5;:19;;;;3640:27;;3677:11;3691:5;;3677:19;;3725:5;3721:592;;;3760:1;3750:6;:11;3746:500;;3781:10;3794:41;3804:30;3824:9;3804:30;;3809:9;3804:15;;:19;;:30;;;;:::i;:::-;3794:9;:41::i;:::-;3781:54;;3853:14;3870:17;3880:6;3870:9;:17::i;:::-;3853:34;;3917:9;3909:5;:17;3905:327;;;3950:14;3967:44;4009:1;3967:37;3983:20;3993:9;3983:5;:9;;:20;;;;:::i;:::-;3967:11;;:15;;:37;;;;:::i;:::-;:41;;:44;;;;:::i;:::-;3950:61;;4033:16;4052:35;4070:16;4084:1;4070:9;:13;;:16;;;;:::i;:::-;4052:13;4062:2;4052:5;:9;;:13;;;;:::i;:::-;:17;;:35;;;;:::i;:::-;4033:54;;4109:14;4138:11;4126:9;:23;;;;;;4109:40;;4187:1;4175:9;:13;4171:42;;;4190:23;4196:5;4203:9;4190:5;:23::i;:::-;4171:42;3905:327;;;;3746:500;;;3721:592;;;4276:1;4266:6;:11;4262:51;;4301:1;4293:5;:9;;;;4262:51;3721:592;3487:832;;;;;;:::o;352:301:5:-;400:9;429:1;425;:5;421:226;;;450:1;446:5;;465:9;485:1;481;477;:5;;;;;;:9;465:21;;500:89;511:1;507;:5;500:89;;;536:1;532:5;;573:1;568;564;560;:5;;;;;;:9;559:15;;;;;;555:19;;500:89;;;421:226;;;;614:1;609;:6;605:42;;635:1;631:5;;605:42;421:226;352:301;;;:::o;1399:200:6:-;1474:22;1490:5;1474:11;;:15;;:22;;;;:::i;:::-;1460:11;:36;;;;1522:24;1540:5;1522:9;:13;1532:2;1522:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1506:9;:13;1516:2;1506:13;;;;;;;;;;;;;;;:40;;;;1582:2;1561:31;;1578:1;1561:31;;;1586:5;1561:31;;;;;;;;;;;;;;;;;;1399:200;;:::o;134:103:5:-;192:9;221:1;217;:5;:13;;229:1;217:13;;;225:1;217:13;213:17;;134:103;;;;:::o;1605:208:6:-;1686:26;1706:5;1686:9;:15;1696:4;1686:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1668:9;:15;1678:4;1668:15;;;;;;;;;;;;;;;:44;;;;1736:22;1752:5;1736:11;;:15;;:22;;;;:::i;:::-;1722:11;:36;;;;1796:1;1773:33;;1782:4;1773:33;;;1800:5;1773:33;;;;;;;;;;;;;;;;;;1605:208;;:::o;319:118:9:-;369:9;267:6;402:1;394:10;;:17;390:21;;319:118;;;:::o;505:106::-;565:9;602:1;594:10;;590:14;;:1;:14;;;;;;;;586:18;;505:106;;;;:::o;198:135:8:-;256:9;300:1;294;290;:5;286:9;;;285:16;;277:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;198:135;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2996200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1050",
								"MINIMUM_LIQUIDITY()": "250",
								"PERMIT_TYPEHASH()": "279",
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22498",
								"balanceOf(address)": "1237",
								"burn(address)": "infinite",
								"decimals()": "307",
								"factory()": "1142",
								"getReserves()": "2993",
								"initialize(address,address)": "42940",
								"kLast()": "1095",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1214",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"price0CumulativeLast()": "1094",
								"price1CumulativeLast()": "1116",
								"skim(address)": "infinite",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"token0()": "1165",
								"token1()": "1097",
								"totalSupply()": "1139",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_update(uint256,uint256,uint112,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 254,
									"end": 9740,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "MSTORE"
								},
								{
									"begin": 1098,
									"end": 1099,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1074,
									"end": 1099,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1074,
									"end": 1099,
									"name": "SSTORE"
								},
								{
									"begin": 2150,
									"end": 2208,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2150,
									"end": 2208,
									"name": "POP"
								},
								{
									"begin": 977,
									"end": 992,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1036,
									"end": 1043,
									"name": "CHAINID"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "SWAP1"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "MLOAD"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP2"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "CODECOPY"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "ADD"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "POP"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "MLOAD"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "DUP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP2"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SUB"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "SWAP1"
								},
								{
									"begin": 1132,
									"end": 1227,
									"name": "KECCAK256"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MLOAD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP1"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP1"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP2"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "ADD"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"value": "50616E63616B65204C5073000000000000000000000000000000000000000000"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "DUP2"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "MSTORE"
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "POP"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "DUP1"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "MLOAD"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "SWAP1"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "ADD"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "KECCAK256"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MLOAD"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP1"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "ADD"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MSTORE"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP1"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP2"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MSTORE"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "ADD"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "PUSH",
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "DUP2"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "MSTORE"
								},
								{
									"begin": 1295,
									"end": 1305,
									"name": "POP"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "DUP1"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "MLOAD"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "SWAP1"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "ADD"
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "KECCAK256"
								},
								{
									"begin": 1324,
									"end": 1331,
									"name": "DUP4"
								},
								{
									"begin": 1357,
									"end": 1361,
									"name": "ADDRESS"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MLOAD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP1"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP7"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP6"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP5"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP4"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP3"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "AND"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "AND"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "DUP2"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "ADD"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "SWAP6"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "POP"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MLOAD"
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2"
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB"
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "SWAP1"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1376,
									"name": "MSTORE"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "DUP1"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "MLOAD"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "SWAP1"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "ADD"
								},
								{
									"begin": 1081,
									"end": 1386,
									"name": "KECCAK256"
								},
								{
									"begin": 1062,
									"end": 1078,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "DUP2"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "SWAP1"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "SSTORE"
								},
								{
									"begin": 1062,
									"end": 1386,
									"name": "POP"
								},
								{
									"begin": 946,
									"end": 1393,
									"name": "POP"
								},
								{
									"begin": 2191,
									"end": 2201,
									"name": "CALLER"
								},
								{
									"begin": 2181,
									"end": 2188,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2181,
									"end": 2188,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "EXP"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "DUP2"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "SLOAD"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "DUP2"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "MUL"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "NOT"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "AND"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "SWAP1"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "DUP4"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "AND"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "MUL"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "OR"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "SWAP1"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "SSTORE"
								},
								{
									"begin": 2181,
									"end": 2201,
									"name": "POP"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "DUP1"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "CODECOPY"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 254,
									"end": 9740,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582081e64a5b1e22f0bf1ebe3adc039745d98ce257993ba66d686d6ed8a763bca02064736f6c63430005100032",
									".code": [
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "MSTORE"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "POP"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "LT"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "SHR"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "GT"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "GT"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "GT"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMP"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMP"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "GT"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMP"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMP"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "GT"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "GT"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "485CC955"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "5A3D5493"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMP"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMP"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "EQ"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPI"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "JUMPDEST"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "DUP1"
										},
										{
											"begin": 254,
											"end": 9740,
											"name": "REVERT"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "JUMPDEST"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP2"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "ADD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "ADD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP3"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "ADD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP3"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "AND"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "ADD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP3"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "ADD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP3"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "DUP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "ADD"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP3"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP4"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP2"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP3"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP4"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "SWAP1"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "JUMPDEST"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "STOP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ISZERO"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPI"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "EXP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "NOT"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP3"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "RETURN"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "JUMPDEST"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "JUMPDEST"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "MLOAD"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP1"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP5"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP4"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP3"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "SWAP4"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "MLOAD"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "DUP1"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "SWAP2"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "SUB"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "SWAP1"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "RETURN"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "MLOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ISZERO"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "MLOAD"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "DUP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SUB"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "RETURN"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "MLOAD"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "DUP3"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "AND"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "AND"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "MSTORE"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "MLOAD"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SUB"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "RETURN"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP3"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "MSTORE"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "ADD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SUB"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "RETURN"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "AND"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "AND"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "MLOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ISZERO"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "MSTORE"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "ADD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "MLOAD"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "DUP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP2"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SUB"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP1"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "RETURN"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "MLOAD"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP3"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "MSTORE"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SWAP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "POP"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "MLOAD"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP1"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SWAP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SUB"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SWAP1"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "RETURN"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP3"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MSTORE"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SUB"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "RETURN"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP3"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SUB"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP1"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "RETURN"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "DUP2"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "AND"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP3"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP2"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "AND"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP3"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP2"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "STOP"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "JUMPDEST"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "JUMPDEST"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "MLOAD"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "DUP3"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "MSTORE"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "ADD"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SWAP2"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "MLOAD"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SWAP2"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SUB"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SWAP1"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "RETURN"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "MLOAD"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP1"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP3"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "MSTORE"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "SWAP2"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "POP"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "POP"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "MLOAD"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP1"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "SWAP2"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "SUB"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "RETURN"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP2"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "ADD"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "AND"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "ADD"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP3"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP2"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "POP"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "POP"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "POP"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "MLOAD"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP3"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP2"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "MSTORE"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "ADD"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP2"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "POP"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "POP"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "MLOAD"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "DUP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP2"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SUB"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "RETURN"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "AND"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP3"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MLOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP3"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "ADD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MLOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SUB"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "RETURN"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "JUMPDEST"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "JUMPDEST"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "MLOAD"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "DUP3"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "MSTORE"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "ADD"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "SWAP2"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "POP"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "POP"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "MLOAD"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "SWAP2"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "SUB"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "SWAP1"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "RETURN"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP3"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP3"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "RETURN"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "JUMPDEST"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP2"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "ADD"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "AND"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "ADD"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP3"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP2"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "JUMPDEST"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "MLOAD"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP4"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP2"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "MSTORE"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "ADD"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP3"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP2"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "MSTORE"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "ADD"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP3"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "MLOAD"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "DUP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP2"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SUB"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP1"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "RETURN"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "AND"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ISZERO"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPI"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP4"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "EXP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "NOT"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "AND"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP3"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SUB"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "SWAP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "RETURN"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "AND"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "MLOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ISZERO"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "MSTORE"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "MLOAD"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SUB"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "RETURN"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "JUMPDEST"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "JUMPDEST"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "MLOAD"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "DUP1"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "DUP3"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "DUP2"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "MSTORE"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "ADD"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "SWAP2"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "POP"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "POP"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "MLOAD"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "DUP1"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "SWAP2"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "SUB"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "SWAP1"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "RETURN"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "JUMPDEST"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "DUP1"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "DUP2"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "ADD"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "SWAP1"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "DUP1"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "DUP1"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "AND"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "SWAP1"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "ADD"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "SWAP1"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "SWAP3"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "SWAP2"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "SWAP1"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "JUMPDEST"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "STOP"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "MLOAD"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "DUP3"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "MSTORE"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "ADD"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "MLOAD"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SUB"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "RETURN"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "MLOAD"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "DUP3"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "MSTORE"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SWAP2"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "MLOAD"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SWAP2"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SUB"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "RETURN"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "AND"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "AND"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "AND"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "ADD"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP3"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP2"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "STOP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "AND"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "AND"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MLOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP3"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MLOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SUB"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "RETURN"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "JUMPDEST"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "JUMPDEST"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "STOP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "JUMPDEST"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "SLOAD"
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "EQ"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPI"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "REVERT"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "DUP2"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SSTORE"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "POP"
										},
										{
											"begin": 7431,
											"end": 7432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7428,
											"name": "DUP6"
										},
										{
											"begin": 7418,
											"end": 7432,
											"name": "GT"
										},
										{
											"begin": 7418,
											"end": 7450,
											"name": "DUP1"
										},
										{
											"begin": 7418,
											"end": 7450,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 7418,
											"end": 7450,
											"name": "JUMPI"
										},
										{
											"begin": 7418,
											"end": 7450,
											"name": "POP"
										},
										{
											"begin": 7449,
											"end": 7450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7446,
											"name": "DUP5"
										},
										{
											"begin": 7436,
											"end": 7450,
											"name": "GT"
										},
										{
											"begin": 7418,
											"end": 7450,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 7418,
											"end": 7450,
											"name": "JUMPDEST"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "JUMPI"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "MLOAD"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP2"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "MSTORE"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "ADD"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP1"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP1"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "ADD"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP3"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP2"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "SUB"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP3"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "MSTORE"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP2"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "MSTORE"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "ADD"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP1"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH data",
											"value": "C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "SWAP2"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "CODECOPY"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "ADD"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "SWAP2"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "POP"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "POP"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "MLOAD"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "DUP1"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "SWAP2"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "SUB"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "SWAP1"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "REVERT"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 7410,
											"end": 7490,
											"name": "JUMPDEST"
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7537,
											"name": "DUP1"
										},
										{
											"begin": 7542,
											"end": 7555,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 7542,
											"end": 7553,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 7542,
											"end": 7555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7542,
											"end": 7555,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 7542,
											"end": 7555,
											"name": "JUMPDEST"
										},
										{
											"begin": 7500,
											"end": 7555,
											"name": "POP"
										},
										{
											"begin": 7500,
											"end": 7555,
											"name": "SWAP2"
										},
										{
											"begin": 7500,
											"end": 7555,
											"name": "POP"
										},
										{
											"begin": 7500,
											"end": 7555,
											"name": "SWAP2"
										},
										{
											"begin": 7500,
											"end": 7555,
											"name": "POP"
										},
										{
											"begin": 7601,
											"end": 7610,
											"name": "DUP2"
										},
										{
											"begin": 7588,
											"end": 7610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7588,
											"end": 7610,
											"name": "AND"
										},
										{
											"begin": 7588,
											"end": 7598,
											"name": "DUP8"
										},
										{
											"begin": 7588,
											"end": 7610,
											"name": "LT"
										},
										{
											"begin": 7588,
											"end": 7636,
											"name": "DUP1"
										},
										{
											"begin": 7588,
											"end": 7636,
											"name": "ISZERO"
										},
										{
											"begin": 7588,
											"end": 7636,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 7588,
											"end": 7636,
											"name": "JUMPI"
										},
										{
											"begin": 7588,
											"end": 7636,
											"name": "POP"
										},
										{
											"begin": 7627,
											"end": 7636,
											"name": "DUP1"
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "AND"
										},
										{
											"begin": 7614,
											"end": 7624,
											"name": "DUP7"
										},
										{
											"begin": 7614,
											"end": 7636,
											"name": "LT"
										},
										{
											"begin": 7588,
											"end": 7636,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 7588,
											"end": 7636,
											"name": "JUMPDEST"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "JUMPI"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "MLOAD"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP2"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "MSTORE"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "ADD"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP1"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP1"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "ADD"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP3"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP2"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "SUB"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP3"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "MSTORE"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP2"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "MSTORE"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "ADD"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP1"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "50616E63616B653A20494E53554646494349454E545F4C495155494449545900"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP2"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "MSTORE"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "POP"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "ADD"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "SWAP2"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "POP"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "POP"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "MLOAD"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "DUP1"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "SWAP2"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "SUB"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "SWAP1"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "REVERT"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 7580,
											"end": 7672,
											"name": "JUMPDEST"
										},
										{
											"begin": 7683,
											"end": 7696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7719,
											"name": "DUP1"
										},
										{
											"begin": 7794,
											"end": 7809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "SWAP1"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "SLOAD"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "SWAP1"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "EXP"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "SWAP1"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "DIV"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "AND"
										},
										{
											"begin": 7794,
											"end": 7818,
											"name": "SWAP1"
										},
										{
											"begin": 7794,
											"end": 7818,
											"name": "POP"
										},
										{
											"begin": 7828,
											"end": 7843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "SWAP1"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "SLOAD"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "SWAP1"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "EXP"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "SWAP1"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "DIV"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7846,
											"end": 7852,
											"name": "AND"
										},
										{
											"begin": 7828,
											"end": 7852,
											"name": "SWAP1"
										},
										{
											"begin": 7828,
											"end": 7852,
											"name": "POP"
										},
										{
											"begin": 7876,
											"end": 7883,
											"name": "DUP2"
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "AND"
										},
										{
											"begin": 7870,
											"end": 7872,
											"name": "DUP10"
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "AND"
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "EQ"
										},
										{
											"begin": 7870,
											"end": 7883,
											"name": "ISZERO"
										},
										{
											"begin": 7870,
											"end": 7900,
											"name": "DUP1"
										},
										{
											"begin": 7870,
											"end": 7900,
											"name": "ISZERO"
										},
										{
											"begin": 7870,
											"end": 7900,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 7870,
											"end": 7900,
											"name": "JUMPI"
										},
										{
											"begin": 7870,
											"end": 7900,
											"name": "POP"
										},
										{
											"begin": 7893,
											"end": 7900,
											"name": "DUP1"
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "AND"
										},
										{
											"begin": 7887,
											"end": 7889,
											"name": "DUP10"
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "AND"
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "EQ"
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "ISZERO"
										},
										{
											"begin": 7870,
											"end": 7900,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 7870,
											"end": 7900,
											"name": "JUMPDEST"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "JUMPI"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "MLOAD"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP2"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "MSTORE"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "ADD"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP1"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP1"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "ADD"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP3"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP2"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "SUB"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP3"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "MSTORE"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP2"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "MSTORE"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "ADD"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP1"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F544F00000000000000000000000000"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP2"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "MSTORE"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "POP"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "ADD"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "SWAP2"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "POP"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "POP"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "MLOAD"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "DUP1"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "SWAP2"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "SUB"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "SWAP1"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "REVERT"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 7862,
											"end": 7924,
											"name": "JUMPDEST"
										},
										{
											"begin": 7951,
											"end": 7952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 7948,
											"name": "DUP12"
										},
										{
											"begin": 7938,
											"end": 7952,
											"name": "GT"
										},
										{
											"begin": 7934,
											"end": 7992,
											"name": "ISZERO"
										},
										{
											"begin": 7934,
											"end": 7992,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 7934,
											"end": 7992,
											"name": "JUMPI"
										},
										{
											"begin": 7954,
											"end": 7992,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 7968,
											"end": 7975,
											"name": "DUP3"
										},
										{
											"begin": 7977,
											"end": 7979,
											"name": "DUP11"
										},
										{
											"begin": 7981,
											"end": 7991,
											"name": "DUP14"
										},
										{
											"begin": 7954,
											"end": 7967,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 7954,
											"end": 7992,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7954,
											"end": 7992,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 7954,
											"end": 7992,
											"name": "JUMPDEST"
										},
										{
											"begin": 7934,
											"end": 7992,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 7934,
											"end": 7992,
											"name": "JUMPDEST"
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8050,
											"name": "DUP11"
										},
										{
											"begin": 8040,
											"end": 8054,
											"name": "GT"
										},
										{
											"begin": 8036,
											"end": 8094,
											"name": "ISZERO"
										},
										{
											"begin": 8036,
											"end": 8094,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 8036,
											"end": 8094,
											"name": "JUMPI"
										},
										{
											"begin": 8056,
											"end": 8094,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8070,
											"end": 8077,
											"name": "DUP2"
										},
										{
											"begin": 8079,
											"end": 8081,
											"name": "DUP11"
										},
										{
											"begin": 8083,
											"end": 8093,
											"name": "DUP13"
										},
										{
											"begin": 8056,
											"end": 8069,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8056,
											"end": 8094,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8056,
											"end": 8094,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8056,
											"end": 8094,
											"name": "JUMPDEST"
										},
										{
											"begin": 8036,
											"end": 8094,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 8036,
											"end": 8094,
											"name": "JUMPDEST"
										},
										{
											"begin": 8156,
											"end": 8157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8146,
											"name": "DUP9"
										},
										{
											"begin": 8142,
											"end": 8146,
											"name": "DUP9"
										},
										{
											"begin": 8142,
											"end": 8153,
											"name": "SWAP1"
										},
										{
											"begin": 8142,
											"end": 8153,
											"name": "POP"
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "GT"
										},
										{
											"begin": 8138,
											"end": 8231,
											"name": "ISZERO"
										},
										{
											"begin": 8138,
											"end": 8231,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8138,
											"end": 8231,
											"name": "JUMPI"
										},
										{
											"begin": 8174,
											"end": 8176,
											"name": "DUP9"
										},
										{
											"begin": 8159,
											"end": 8189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8159,
											"end": 8189,
											"name": "AND"
										},
										{
											"begin": 8159,
											"end": 8189,
											"name": "PUSH",
											"value": "84800812"
										},
										{
											"begin": 8190,
											"end": 8200,
											"name": "CALLER"
										},
										{
											"begin": 8202,
											"end": 8212,
											"name": "DUP14"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP14"
										},
										{
											"begin": 8226,
											"end": 8230,
											"name": "DUP13"
										},
										{
											"begin": 8226,
											"end": 8230,
											"name": "DUP13"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MLOAD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP7"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "AND"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "SHL"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MSTORE"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ADD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP1"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP7"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "AND"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "AND"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MSTORE"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ADD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP6"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MSTORE"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ADD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP5"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MSTORE"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ADD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP1"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ADD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP3"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "SUB"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP3"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MSTORE"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP5"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP5"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP3"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MSTORE"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ADD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "SWAP3"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "SWAP7"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "MLOAD"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP1"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP4"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "SUB"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP2"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP8"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "DUP1"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "GAS"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "CALL"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8159,
											"end": 8231,
											"name": "POP"
										},
										{
											"begin": 8138,
											"end": 8231,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8138,
											"end": 8231,
											"name": "JUMPDEST"
										},
										{
											"begin": 8259,
											"end": 8266,
											"name": "DUP2"
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "AND"
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "ADDRESS"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP3"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "AND"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SHL"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "MSTORE"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP3"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "AND"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "AND"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "MSTORE"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SWAP2"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP4"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SUB"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP7"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "GAS"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "STATICCALL"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SWAP3"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SWAP2"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8252,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8241,
											"end": 8292,
											"name": "SWAP4"
										},
										{
											"begin": 8241,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8320,
											"end": 8327,
											"name": "DUP1"
										},
										{
											"begin": 8313,
											"end": 8338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8338,
											"name": "AND"
										},
										{
											"begin": 8313,
											"end": 8338,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "ADDRESS"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "MLOAD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP3"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "AND"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SHL"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "MSTORE"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "ADD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP3"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "AND"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "AND"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "MSTORE"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "ADD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SWAP2"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "MLOAD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP4"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SUB"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP7"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "GAS"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "STATICCALL"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "MLOAD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP2"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "ADD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SWAP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "DUP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "MLOAD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SWAP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "ADD"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SWAP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SWAP3"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SWAP2"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "SWAP1"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 8302,
											"end": 8353,
											"name": "SWAP3"
										},
										{
											"begin": 8302,
											"end": 8353,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 8373,
											"end": 8387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "DUP10"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP6"
										},
										{
											"begin": 8401,
											"end": 8423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8401,
											"end": 8423,
											"name": "AND"
										},
										{
											"begin": 8401,
											"end": 8423,
											"name": "SUB"
										},
										{
											"begin": 8390,
											"end": 8398,
											"name": "DUP4"
										},
										{
											"begin": 8390,
											"end": 8423,
											"name": "GT"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "JUMPI"
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "JUMP"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "JUMPDEST"
										},
										{
											"begin": 8450,
											"end": 8460,
											"name": "DUP10"
										},
										{
											"begin": 8438,
											"end": 8447,
											"name": "DUP6"
										},
										{
											"begin": 8438,
											"end": 8460,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8438,
											"end": 8460,
											"name": "AND"
										},
										{
											"begin": 8438,
											"end": 8460,
											"name": "SUB"
										},
										{
											"begin": 8426,
											"end": 8434,
											"name": "DUP4"
										},
										{
											"begin": 8426,
											"end": 8461,
											"name": "SUB"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8390,
											"end": 8465,
											"name": "JUMPDEST"
										},
										{
											"begin": 8373,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8373,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8475,
											"end": 8489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8515,
											"end": 8525,
											"name": "DUP10"
										},
										{
											"begin": 8503,
											"end": 8512,
											"name": "DUP6"
										},
										{
											"begin": 8503,
											"end": 8525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8503,
											"end": 8525,
											"name": "AND"
										},
										{
											"begin": 8503,
											"end": 8525,
											"name": "SUB"
										},
										{
											"begin": 8492,
											"end": 8500,
											"name": "DUP4"
										},
										{
											"begin": 8492,
											"end": 8525,
											"name": "GT"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "JUMPI"
										},
										{
											"begin": 8566,
											"end": 8567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "JUMP"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "JUMPDEST"
										},
										{
											"begin": 8552,
											"end": 8562,
											"name": "DUP10"
										},
										{
											"begin": 8540,
											"end": 8549,
											"name": "DUP6"
										},
										{
											"begin": 8540,
											"end": 8562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8540,
											"end": 8562,
											"name": "AND"
										},
										{
											"begin": 8540,
											"end": 8562,
											"name": "SUB"
										},
										{
											"begin": 8528,
											"end": 8536,
											"name": "DUP4"
										},
										{
											"begin": 8528,
											"end": 8563,
											"name": "SUB"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 8492,
											"end": 8567,
											"name": "JUMPDEST"
										},
										{
											"begin": 8475,
											"end": 8567,
											"name": "SWAP1"
										},
										{
											"begin": 8475,
											"end": 8567,
											"name": "POP"
										},
										{
											"begin": 8597,
											"end": 8598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8594,
											"name": "DUP3"
										},
										{
											"begin": 8585,
											"end": 8598,
											"name": "GT"
										},
										{
											"begin": 8585,
											"end": 8615,
											"name": "DUP1"
										},
										{
											"begin": 8585,
											"end": 8615,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8585,
											"end": 8615,
											"name": "JUMPI"
										},
										{
											"begin": 8585,
											"end": 8615,
											"name": "POP"
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "DUP2"
										},
										{
											"begin": 8602,
											"end": 8615,
											"name": "GT"
										},
										{
											"begin": 8585,
											"end": 8615,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8585,
											"end": 8615,
											"name": "JUMPDEST"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "JUMPI"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "MLOAD"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP2"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "MSTORE"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "ADD"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP1"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP1"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "ADD"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP3"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP2"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "SUB"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP3"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "MSTORE"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP2"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "MSTORE"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "ADD"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP1"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH data",
											"value": "50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "SWAP2"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "CODECOPY"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "ADD"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "SWAP2"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "POP"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "POP"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "MLOAD"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "DUP1"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "SWAP2"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "SUB"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "SWAP1"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "REVERT"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 8577,
											"end": 8654,
											"name": "JUMPDEST"
										},
										{
											"begin": 8738,
											"end": 8759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 8801,
											"end": 8803,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 8787,
											"end": 8796,
											"name": "DUP6"
										},
										{
											"begin": 8787,
											"end": 8800,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8787,
											"end": 8800,
											"name": "SWAP1"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "SWAP2"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "SWAP1"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "AND"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "JUMPDEST"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 8776,
											"end": 8781,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 8763,
											"end": 8771,
											"name": "DUP9"
										},
										{
											"begin": 8763,
											"end": 8775,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8763,
											"end": 8775,
											"name": "SWAP1"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "SWAP2"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "SWAP1"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "AND"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 8763,
											"end": 8782,
											"name": "JUMPDEST"
										},
										{
											"begin": 8763,
											"end": 8786,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8763,
											"end": 8786,
											"name": "SWAP1"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "SWAP2"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "SWAP1"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "AND"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "JUMPDEST"
										},
										{
											"begin": 8738,
											"end": 8806,
											"name": "SWAP1"
										},
										{
											"begin": 8738,
											"end": 8806,
											"name": "POP"
										},
										{
											"begin": 8816,
											"end": 8837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 8879,
											"end": 8881,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 8865,
											"end": 8874,
											"name": "DUP6"
										},
										{
											"begin": 8865,
											"end": 8878,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8865,
											"end": 8878,
											"name": "SWAP1"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "SWAP2"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "SWAP1"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "AND"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 8865,
											"end": 8882,
											"name": "JUMPDEST"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 8854,
											"end": 8859,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 8841,
											"end": 8849,
											"name": "DUP9"
										},
										{
											"begin": 8841,
											"end": 8853,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8841,
											"end": 8853,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "SWAP2"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "AND"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 8841,
											"end": 8860,
											"name": "JUMPDEST"
										},
										{
											"begin": 8841,
											"end": 8864,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 8841,
											"end": 8864,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "SWAP2"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "SWAP1"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "AND"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 8841,
											"end": 8883,
											"name": "JUMPDEST"
										},
										{
											"begin": 8816,
											"end": 8884,
											"name": "SWAP1"
										},
										{
											"begin": 8816,
											"end": 8884,
											"name": "POP"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 8979,
											"end": 8987,
											"name": "PUSH",
											"value": "5F5E100"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 8964,
											"end": 8973,
											"name": "DUP10"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "AND"
										},
										{
											"begin": 8949,
											"end": 8958,
											"name": "DUP12"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "AND"
										},
										{
											"begin": 8944,
											"end": 8963,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8944,
											"end": 8963,
											"name": "SWAP1"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "SWAP2"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "SWAP1"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "AND"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 8944,
											"end": 8974,
											"name": "JUMPDEST"
										},
										{
											"begin": 8944,
											"end": 8978,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8944,
											"end": 8978,
											"name": "SWAP1"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "SWAP2"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "SWAP1"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "AND"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "JUMPDEST"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 8923,
											"end": 8939,
											"name": "DUP3"
										},
										{
											"begin": 8902,
											"end": 8918,
											"name": "DUP5"
										},
										{
											"begin": 8902,
											"end": 8922,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 8902,
											"end": 8922,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP2"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "SWAP1"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "AND"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 8902,
											"end": 8940,
											"name": "JUMPDEST"
										},
										{
											"begin": 8902,
											"end": 8988,
											"name": "LT"
										},
										{
											"begin": 8902,
											"end": 8988,
											"name": "ISZERO"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "JUMPI"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "MLOAD"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP2"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "MSTORE"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "ADD"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP1"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP1"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "ADD"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP3"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP2"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "SUB"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP3"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "MSTORE"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP2"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "MSTORE"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "ADD"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP1"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "50616E63616B653A204B00000000000000000000000000000000000000000000"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP2"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "MSTORE"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "POP"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "ADD"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "SWAP2"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "POP"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "POP"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "MLOAD"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "DUP1"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "SWAP2"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "SUB"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "SWAP1"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "REVERT"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 8894,
											"end": 9003,
											"name": "JUMPDEST"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 9024,
											"end": 9073,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 9032,
											"end": 9040,
											"name": "DUP5"
										},
										{
											"begin": 9042,
											"end": 9050,
											"name": "DUP5"
										},
										{
											"begin": 9052,
											"end": 9061,
											"name": "DUP9"
										},
										{
											"begin": 9063,
											"end": 9072,
											"name": "DUP9"
										},
										{
											"begin": 9024,
											"end": 9031,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9024,
											"end": 9073,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9024,
											"end": 9073,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 9024,
											"end": 9073,
											"name": "JUMPDEST"
										},
										{
											"begin": 9151,
											"end": 9153,
											"name": "DUP9"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "AND"
										},
										{
											"begin": 9093,
											"end": 9103,
											"name": "CALLER"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "AND"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 9105,
											"end": 9114,
											"name": "DUP5"
										},
										{
											"begin": 9116,
											"end": 9125,
											"name": "DUP5"
										},
										{
											"begin": 9127,
											"end": 9137,
											"name": "DUP16"
										},
										{
											"begin": 9139,
											"end": 9149,
											"name": "DUP16"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "MLOAD"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP1"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP6"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "MSTORE"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP5"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "MSTORE"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP4"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "MSTORE"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP3"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP2"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "MSTORE"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "ADD"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "SWAP5"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "POP"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "MLOAD"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "DUP1"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "SWAP2"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "SUB"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "SWAP1"
										},
										{
											"begin": 9088,
											"end": 9154,
											"name": "LOG3"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SSTORE"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "POP"
										},
										{
											"begin": 7305,
											"end": 9161,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "PUSH",
											"value": "50616E63616B65204C5073000000000000000000000000000000000000000000"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 192,
											"end": 235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "JUMPDEST"
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1320,
											"name": "DUP1"
										},
										{
											"begin": 1322,
											"end": 1348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "SLOAD"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "EXP"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "DIV"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "AND"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "SWAP3"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "POP"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "SWAP1"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "SLOAD"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "SWAP1"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "EXP"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "SWAP1"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "DIV"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1402,
											"end": 1410,
											"name": "AND"
										},
										{
											"begin": 1390,
											"end": 1410,
											"name": "SWAP2"
										},
										{
											"begin": 1390,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "SLOAD"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "EXP"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "DIV"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "AND"
										},
										{
											"begin": 1420,
											"end": 1460,
											"name": "SWAP1"
										},
										{
											"begin": 1420,
											"end": 1460,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "SWAP1"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "SWAP2"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "SWAP3"
										},
										{
											"begin": 1240,
											"end": 1467,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMPDEST"
										},
										{
											"begin": 2346,
											"end": 2350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2371,
											"end": 2381,
											"name": "CALLER"
										},
										{
											"begin": 2383,
											"end": 2390,
											"name": "DUP5"
										},
										{
											"begin": 2392,
											"end": 2397,
											"name": "DUP5"
										},
										{
											"begin": 2362,
											"end": 2370,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2362,
											"end": 2398,
											"name": "JUMPDEST"
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "SWAP1"
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP3"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "SWAP2"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2426,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SLOAD"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "EXP"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "DIV"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "AND"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 571,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SLOAD"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMPDEST"
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2722,
											"name": "DUP7"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2723,
											"name": "KECCAK256"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2734,
											"name": "CALLER"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "AND"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "KECCAK256"
										},
										{
											"begin": 2708,
											"end": 2735,
											"name": "SLOAD"
										},
										{
											"begin": 2708,
											"end": 2750,
											"name": "EQ"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "JUMPI"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP3"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "DUP8"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2811,
											"name": "KECCAK256"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2822,
											"name": "CALLER"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "DUP2"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "MSTORE"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "ADD"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "KECCAK256"
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "SLOAD"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2796,
											"end": 2827,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SWAP2"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "SWAP1"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "AND"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "JUMPDEST"
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "DUP7"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "SWAP1"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "KECCAK256"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2792,
											"name": "CALLER"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "AND"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "SWAP1"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "MSTORE"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "ADD"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2793,
											"name": "KECCAK256"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "DUP2"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "SWAP1"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "SSTORE"
										},
										{
											"begin": 2766,
											"end": 2834,
											"name": "POP"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 2704,
											"end": 2845,
											"name": "JUMPDEST"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2864,
											"end": 2868,
											"name": "DUP5"
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "DUP5"
										},
										{
											"begin": 2874,
											"end": 2879,
											"name": "DUP5"
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2854,
											"end": 2880,
											"name": "JUMPDEST"
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "SWAP1"
										},
										{
											"begin": 2890,
											"end": 2901,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP4"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "SWAP3"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "POP"
										},
										{
											"begin": 2577,
											"end": 2908,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "SHL"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 731,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMPDEST"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SLOAD"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "SLOAD"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "EXP"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "DIV"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2351,
											"end": 2361,
											"name": "CALLER"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2351,
											"end": 2372,
											"name": "EQ"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "JUMPI"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "MLOAD"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP2"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "MSTORE"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "ADD"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP1"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP1"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "ADD"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP3"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP2"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "SUB"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP3"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "MSTORE"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP2"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "MSTORE"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "ADD"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP1"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "50616E63616B653A20464F5242494444454E0000000000000000000000000000"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP2"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "MSTORE"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "POP"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "ADD"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "SWAP2"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "POP"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "POP"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "MLOAD"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "DUP1"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "SWAP2"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "SUB"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "SWAP1"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "REVERT"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 2343,
											"end": 2395,
											"name": "JUMPDEST"
										},
										{
											"begin": 2434,
											"end": 2441,
											"name": "DUP2"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "EXP"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "DUP2"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "SLOAD"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "DUP2"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "MUL"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "NOT"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "AND"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "SWAP1"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "DUP4"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "AND"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "MUL"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "OR"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "SWAP1"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "SSTORE"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "DUP1"
										},
										{
											"begin": 2451,
											"end": 2457,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2451,
											"end": 2457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "EXP"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "DUP2"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "SLOAD"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "DUP2"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "MUL"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "NOT"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "AND"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "SWAP1"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "DUP4"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "AND"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "MUL"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "OR"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "SWAP1"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "SSTORE"
										},
										{
											"begin": 2451,
											"end": 2467,
											"name": "POP"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "POP"
										},
										{
											"begin": 2270,
											"end": 2474,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "JUMPDEST"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLOAD"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "SLOAD"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "SLOAD"
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "EQ"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPI"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "REVERT"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "DUP2"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SSTORE"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "POP"
										},
										{
											"begin": 4504,
											"end": 4521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4540,
											"name": "DUP1"
										},
										{
											"begin": 4545,
											"end": 4558,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 4545,
											"end": 4558,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4545,
											"end": 4558,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4545,
											"end": 4558,
											"name": "JUMPDEST"
										},
										{
											"begin": 4503,
											"end": 4558,
											"name": "POP"
										},
										{
											"begin": 4503,
											"end": 4558,
											"name": "SWAP2"
										},
										{
											"begin": 4503,
											"end": 4558,
											"name": "POP"
										},
										{
											"begin": 4503,
											"end": 4558,
											"name": "SWAP2"
										},
										{
											"begin": 4503,
											"end": 4558,
											"name": "POP"
										},
										{
											"begin": 4583,
											"end": 4596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "SWAP1"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "SLOAD"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "SWAP1"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "EXP"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "SWAP1"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DIV"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "AND"
										},
										{
											"begin": 4599,
											"end": 4623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4623,
											"name": "AND"
										},
										{
											"begin": 4599,
											"end": 4623,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "ADDRESS"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "MLOAD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP3"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "AND"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SHL"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP2"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "MSTORE"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "ADD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP3"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "AND"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "AND"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP2"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "MSTORE"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "ADD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SWAP2"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "MLOAD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP4"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SUB"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP2"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP7"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "GAS"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "STATICCALL"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "MLOAD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP2"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "ADD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "DUP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "MLOAD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "ADD"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SWAP3"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SWAP2"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4583,
											"end": 4638,
											"name": "SWAP1"
										},
										{
											"begin": 4583,
											"end": 4638,
											"name": "POP"
										},
										{
											"begin": 4648,
											"end": 4661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "SWAP1"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "SLOAD"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "SWAP1"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "EXP"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "SWAP1"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "DIV"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "AND"
										},
										{
											"begin": 4664,
											"end": 4688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4664,
											"end": 4688,
											"name": "AND"
										},
										{
											"begin": 4664,
											"end": 4688,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4697,
											"end": 4701,
											"name": "ADDRESS"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "MLOAD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP3"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "AND"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SHL"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP2"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "MSTORE"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "ADD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP3"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "AND"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "AND"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP2"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "MSTORE"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "ADD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "MLOAD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP4"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SUB"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP2"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP7"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "GAS"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "STATICCALL"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "MLOAD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP2"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "ADD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "DUP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "MLOAD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "ADD"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP3"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP1"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4648,
											"end": 4703,
											"name": "SWAP1"
										},
										{
											"begin": 4648,
											"end": 4703,
											"name": "POP"
										},
										{
											"begin": 4713,
											"end": 4725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 4741,
											"end": 4750,
											"name": "DUP6"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "AND"
										},
										{
											"begin": 4728,
											"end": 4736,
											"name": "DUP5"
										},
										{
											"begin": 4728,
											"end": 4740,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4728,
											"end": 4740,
											"name": "SWAP1"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "SWAP2"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "SWAP1"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "AND"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 4728,
											"end": 4751,
											"name": "JUMPDEST"
										},
										{
											"begin": 4713,
											"end": 4751,
											"name": "SWAP1"
										},
										{
											"begin": 4713,
											"end": 4751,
											"name": "POP"
										},
										{
											"begin": 4761,
											"end": 4773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 4789,
											"end": 4798,
											"name": "DUP6"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "AND"
										},
										{
											"begin": 4776,
											"end": 4784,
											"name": "DUP5"
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "SWAP2"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "AND"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 4776,
											"end": 4799,
											"name": "JUMPDEST"
										},
										{
											"begin": 4761,
											"end": 4799,
											"name": "SWAP1"
										},
										{
											"begin": 4761,
											"end": 4799,
											"name": "POP"
										},
										{
											"begin": 4810,
											"end": 4820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP8"
										},
										{
											"begin": 4843,
											"end": 4852,
											"name": "DUP8"
										},
										{
											"begin": 4823,
											"end": 4831,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 4823,
											"end": 4853,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4853,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 4823,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4810,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4810,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4863,
											"end": 4880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4894,
											"name": "DUP1"
										},
										{
											"begin": 4883,
											"end": 4894,
											"name": "SLOAD"
										},
										{
											"begin": 4863,
											"end": 4894,
											"name": "SWAP1"
										},
										{
											"begin": 4863,
											"end": 4894,
											"name": "POP"
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "DUP2"
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "EQ"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "ISZERO"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "JUMPI"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5031,
											"end": 5062,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5053,
											"end": 5060,
											"name": "DUP7"
										},
										{
											"begin": 5041,
											"end": 5048,
											"name": "DUP9"
										},
										{
											"begin": 5041,
											"end": 5052,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5041,
											"end": 5052,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "SWAP2"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5041,
											"end": 5061,
											"name": "JUMPDEST"
										},
										{
											"begin": 5031,
											"end": 5040,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 5031,
											"end": 5062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5031,
											"end": 5062,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 5031,
											"end": 5062,
											"name": "JUMPDEST"
										},
										{
											"begin": 5031,
											"end": 5066,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 5031,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "SWAP2"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "SWAP1"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "AND"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 5031,
											"end": 5085,
											"name": "JUMPDEST"
										},
										{
											"begin": 5019,
											"end": 5085,
											"name": "SWAP9"
										},
										{
											"begin": 5019,
											"end": 5085,
											"name": "POP"
										},
										{
											"begin": 5098,
											"end": 5134,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5098,
											"end": 5103,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5098,
											"end": 5134,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5134,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 5098,
											"end": 5134,
											"name": "JUMPDEST"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "JUMP"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "JUMPDEST"
										},
										{
											"begin": 5232,
											"end": 5318,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5269,
											"end": 5278,
											"name": "DUP9"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "AND"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 5253,
											"end": 5265,
											"name": "DUP4"
										},
										{
											"begin": 5241,
											"end": 5248,
											"name": "DUP8"
										},
										{
											"begin": 5241,
											"end": 5252,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5241,
											"end": 5252,
											"name": "SWAP1"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "SWAP2"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "SWAP1"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "AND"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 5241,
											"end": 5266,
											"name": "JUMPDEST"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "DUP2"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "JUMPI"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "INVALID"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "JUMPDEST"
										},
										{
											"begin": 5241,
											"end": 5278,
											"name": "DIV"
										},
										{
											"begin": 5308,
											"end": 5317,
											"name": "DUP9"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "AND"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5292,
											"end": 5304,
											"name": "DUP5"
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP8"
										},
										{
											"begin": 5280,
											"end": 5291,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5280,
											"end": 5291,
											"name": "SWAP1"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "SWAP2"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "SWAP1"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "AND"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 5280,
											"end": 5305,
											"name": "JUMPDEST"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "DUP2"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "JUMPI"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "INVALID"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "JUMPDEST"
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "DIV"
										},
										{
											"begin": 5232,
											"end": 5240,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 5232,
											"end": 5318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5232,
											"end": 5318,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5232,
											"end": 5318,
											"name": "JUMPDEST"
										},
										{
											"begin": 5220,
											"end": 5318,
											"name": "SWAP9"
										},
										{
											"begin": 5220,
											"end": 5318,
											"name": "POP"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 4982,
											"end": 5329,
											"name": "JUMPDEST"
										},
										{
											"begin": 5358,
											"end": 5359,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5355,
											"name": "DUP10"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "GT"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "JUMPI"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "MLOAD"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP2"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "MSTORE"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "ADD"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP1"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP1"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "ADD"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP3"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP2"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "SUB"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP3"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "MSTORE"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP2"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "MSTORE"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "ADD"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP1"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH data",
											"value": "EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "SWAP2"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "CODECOPY"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "ADD"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "SWAP2"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "POP"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "POP"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "MLOAD"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "DUP1"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "SWAP2"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "SUB"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "SWAP1"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "REVERT"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 5338,
											"end": 5402,
											"name": "JUMPDEST"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 5418,
											"end": 5420,
											"name": "DUP11"
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP11"
										},
										{
											"begin": 5412,
											"end": 5417,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 5412,
											"end": 5432,
											"name": "JUMPDEST"
										},
										{
											"begin": 5443,
											"end": 5492,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5451,
											"end": 5459,
											"name": "DUP7"
										},
										{
											"begin": 5461,
											"end": 5469,
											"name": "DUP7"
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "DUP11"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "DUP11"
										},
										{
											"begin": 5443,
											"end": 5450,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5443,
											"end": 5492,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5443,
											"end": 5492,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5443,
											"end": 5492,
											"name": "JUMPDEST"
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP2"
										},
										{
											"begin": 5502,
											"end": 5549,
											"name": "ISZERO"
										},
										{
											"begin": 5502,
											"end": 5549,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5502,
											"end": 5549,
											"name": "JUMPI"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "SLOAD"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "EXP"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "DIV"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5540,
											"end": 5548,
											"name": "AND"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "AND"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "SLOAD"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "EXP"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "DIV"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5526,
											"end": 5534,
											"name": "AND"
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "AND"
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "SWAP1"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "SWAP2"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "SWAP1"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "AND"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 5521,
											"end": 5549,
											"name": "JUMPDEST"
										},
										{
											"begin": 5513,
											"end": 5518,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "DUP2"
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "SWAP1"
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "SSTORE"
										},
										{
											"begin": 5513,
											"end": 5549,
											"name": "POP"
										},
										{
											"begin": 5502,
											"end": 5549,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5502,
											"end": 5549,
											"name": "JUMPDEST"
										},
										{
											"begin": 5609,
											"end": 5619,
											"name": "CALLER"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "AND"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 5621,
											"end": 5628,
											"name": "DUP6"
										},
										{
											"begin": 5630,
											"end": 5637,
											"name": "DUP6"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "MLOAD"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "DUP1"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "DUP4"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "DUP2"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "MSTORE"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "ADD"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "DUP3"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "DUP2"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "MSTORE"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "ADD"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "SWAP3"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "POP"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "POP"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "POP"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "MLOAD"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "DUP1"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "SWAP2"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "SUB"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "SWAP1"
										},
										{
											"begin": 5604,
											"end": 5638,
											"name": "LOG2"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SSTORE"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP2"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "POP"
										},
										{
											"begin": 4428,
											"end": 5645,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "MSTORE"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "KECCAK256"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "SLOAD"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "DUP2"
										},
										{
											"begin": 361,
											"end": 405,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "JUMPDEST"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "SLOAD"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 970,
											"end": 987,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "MSTORE"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "KECCAK256"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "SLOAD"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 737,
											"end": 778,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "JUMPDEST"
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5829,
											"name": "DUP1"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "SLOAD"
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "EQ"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPI"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "REVERT"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "DUP2"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SSTORE"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "POP"
										},
										{
											"begin": 5842,
											"end": 5859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5878,
											"name": "DUP1"
										},
										{
											"begin": 5883,
											"end": 5896,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 5883,
											"end": 5894,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5883,
											"end": 5896,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5883,
											"end": 5896,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 5883,
											"end": 5896,
											"name": "JUMPDEST"
										},
										{
											"begin": 5841,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5841,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5841,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5841,
											"end": 5896,
											"name": "SWAP2"
										},
										{
											"begin": 5841,
											"end": 5896,
											"name": "POP"
										},
										{
											"begin": 5921,
											"end": 5936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SWAP1"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SLOAD"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SWAP1"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "EXP"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "SWAP1"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DIV"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5945,
											"name": "SWAP1"
										},
										{
											"begin": 5921,
											"end": 5945,
											"name": "POP"
										},
										{
											"begin": 6001,
											"end": 6016,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "SWAP1"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "SLOAD"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "SWAP1"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "EXP"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "SWAP1"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "DIV"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6019,
											"end": 6025,
											"name": "AND"
										},
										{
											"begin": 6001,
											"end": 6025,
											"name": "SWAP1"
										},
										{
											"begin": 6001,
											"end": 6025,
											"name": "POP"
										},
										{
											"begin": 6081,
											"end": 6094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6111,
											"name": "DUP3"
										},
										{
											"begin": 6097,
											"end": 6122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6122,
											"name": "AND"
										},
										{
											"begin": 6097,
											"end": 6122,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6131,
											"end": 6135,
											"name": "ADDRESS"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "MLOAD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP3"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "AND"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SHL"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "MSTORE"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "ADD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP3"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "AND"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "AND"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "MSTORE"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "ADD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SWAP2"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "MLOAD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP4"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SUB"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP7"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "GAS"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "STATICCALL"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "MLOAD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "ADD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "DUP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "MLOAD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "ADD"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SWAP3"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SWAP2"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6097,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6081,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6081,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6147,
											"end": 6160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6170,
											"end": 6177,
											"name": "DUP3"
										},
										{
											"begin": 6163,
											"end": 6188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6188,
											"name": "AND"
										},
										{
											"begin": 6163,
											"end": 6188,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "ADDRESS"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "MLOAD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP3"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "AND"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SHL"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP2"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "MSTORE"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "ADD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP3"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "AND"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "AND"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP2"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "MSTORE"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "ADD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SWAP2"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "MLOAD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP4"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SUB"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP2"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP7"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "GAS"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "STATICCALL"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "MLOAD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP2"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "ADD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SWAP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "DUP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "MLOAD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SWAP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "ADD"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SWAP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SWAP3"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SWAP2"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "SWAP1"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6163,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6147,
											"end": 6203,
											"name": "SWAP1"
										},
										{
											"begin": 6147,
											"end": 6203,
											"name": "POP"
										},
										{
											"begin": 6213,
											"end": 6227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6239,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6248,
											"end": 6252,
											"name": "ADDRESS"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "AND"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "AND"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "DUP2"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "MSTORE"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "ADD"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "SWAP1"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "DUP2"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "MSTORE"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "ADD"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "KECCAK256"
										},
										{
											"begin": 6230,
											"end": 6254,
											"name": "SLOAD"
										},
										{
											"begin": 6213,
											"end": 6254,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6254,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6275,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6308,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 6287,
											"end": 6296,
											"name": "DUP9"
										},
										{
											"begin": 6298,
											"end": 6307,
											"name": "DUP9"
										},
										{
											"begin": 6278,
											"end": 6286,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 6278,
											"end": 6308,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6278,
											"end": 6308,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 6278,
											"end": 6308,
											"name": "JUMPDEST"
										},
										{
											"begin": 6265,
											"end": 6308,
											"name": "SWAP1"
										},
										{
											"begin": 6265,
											"end": 6308,
											"name": "POP"
										},
										{
											"begin": 6318,
											"end": 6335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6349,
											"name": "DUP1"
										},
										{
											"begin": 6338,
											"end": 6349,
											"name": "SLOAD"
										},
										{
											"begin": 6318,
											"end": 6349,
											"name": "SWAP1"
										},
										{
											"begin": 6318,
											"end": 6349,
											"name": "POP"
										},
										{
											"begin": 6473,
											"end": 6485,
											"name": "DUP1"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 6461,
											"end": 6469,
											"name": "DUP7"
										},
										{
											"begin": 6447,
											"end": 6456,
											"name": "DUP6"
										},
										{
											"begin": 6447,
											"end": 6460,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6447,
											"end": 6460,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "SWAP2"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "SWAP1"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "AND"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 6447,
											"end": 6470,
											"name": "JUMPDEST"
										},
										{
											"begin": 6447,
											"end": 6485,
											"name": "DUP2"
										},
										{
											"begin": 6447,
											"end": 6485,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 6447,
											"end": 6485,
											"name": "JUMPI"
										},
										{
											"begin": 6447,
											"end": 6485,
											"name": "INVALID"
										},
										{
											"begin": 6447,
											"end": 6485,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 6447,
											"end": 6485,
											"name": "JUMPDEST"
										},
										{
											"begin": 6447,
											"end": 6485,
											"name": "DIV"
										},
										{
											"begin": 6437,
											"end": 6485,
											"name": "SWAP11"
										},
										{
											"begin": 6437,
											"end": 6485,
											"name": "POP"
										},
										{
											"begin": 6579,
											"end": 6591,
											"name": "DUP1"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 6567,
											"end": 6575,
											"name": "DUP6"
										},
										{
											"begin": 6553,
											"end": 6562,
											"name": "DUP6"
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "SWAP1"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP2"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "SWAP1"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "AND"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 6553,
											"end": 6576,
											"name": "JUMPDEST"
										},
										{
											"begin": 6553,
											"end": 6591,
											"name": "DUP2"
										},
										{
											"begin": 6553,
											"end": 6591,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 6553,
											"end": 6591,
											"name": "JUMPI"
										},
										{
											"begin": 6553,
											"end": 6591,
											"name": "INVALID"
										},
										{
											"begin": 6553,
											"end": 6591,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 6553,
											"end": 6591,
											"name": "JUMPDEST"
										},
										{
											"begin": 6553,
											"end": 6591,
											"name": "DIV"
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "SWAP10"
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "POP"
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6664,
											"name": "DUP12"
										},
										{
											"begin": 6657,
											"end": 6668,
											"name": "GT"
										},
										{
											"begin": 6657,
											"end": 6683,
											"name": "DUP1"
										},
										{
											"begin": 6657,
											"end": 6683,
											"name": "ISZERO"
										},
										{
											"begin": 6657,
											"end": 6683,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 6657,
											"end": 6683,
											"name": "JUMPI"
										},
										{
											"begin": 6657,
											"end": 6683,
											"name": "POP"
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP11"
										},
										{
											"begin": 6672,
											"end": 6683,
											"name": "GT"
										},
										{
											"begin": 6657,
											"end": 6683,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 6657,
											"end": 6683,
											"name": "JUMPDEST"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "JUMPI"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "MLOAD"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP2"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "MSTORE"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "ADD"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP1"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP1"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "ADD"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP3"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP2"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "SUB"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP3"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "MSTORE"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP2"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "MSTORE"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "ADD"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP1"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH data",
											"value": "6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "SWAP2"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "CODECOPY"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "ADD"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "SWAP2"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "POP"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "POP"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "MLOAD"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "DUP1"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "SWAP2"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "SUB"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "SWAP1"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "REVERT"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 6649,
											"end": 6726,
											"name": "JUMPDEST"
										},
										{
											"begin": 6736,
											"end": 6767,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 6750,
											"end": 6754,
											"name": "ADDRESS"
										},
										{
											"begin": 6757,
											"end": 6766,
											"name": "DUP5"
										},
										{
											"begin": 6736,
											"end": 6741,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 6736,
											"end": 6767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6736,
											"end": 6767,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 6736,
											"end": 6767,
											"name": "JUMPDEST"
										},
										{
											"begin": 6777,
											"end": 6812,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "DUP8"
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "DUP14"
										},
										{
											"begin": 6804,
											"end": 6811,
											"name": "DUP14"
										},
										{
											"begin": 6777,
											"end": 6790,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6777,
											"end": 6812,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6777,
											"end": 6812,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 6777,
											"end": 6812,
											"name": "JUMPDEST"
										},
										{
											"begin": 6822,
											"end": 6857,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 6836,
											"end": 6843,
											"name": "DUP7"
										},
										{
											"begin": 6845,
											"end": 6847,
											"name": "DUP14"
										},
										{
											"begin": 6849,
											"end": 6856,
											"name": "DUP13"
										},
										{
											"begin": 6822,
											"end": 6835,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 6822,
											"end": 6857,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6822,
											"end": 6857,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 6822,
											"end": 6857,
											"name": "JUMPDEST"
										},
										{
											"begin": 6885,
											"end": 6892,
											"name": "DUP7"
										},
										{
											"begin": 6878,
											"end": 6903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6878,
											"end": 6903,
											"name": "AND"
										},
										{
											"begin": 6878,
											"end": 6903,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "ADDRESS"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "MLOAD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP3"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "AND"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SHL"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP2"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "MSTORE"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "ADD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP3"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "AND"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "AND"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP2"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "MSTORE"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "ADD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SWAP2"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "MLOAD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP4"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SUB"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP2"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP7"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "GAS"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "STATICCALL"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "MLOAD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP2"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "ADD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SWAP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "DUP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "MLOAD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SWAP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "ADD"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SWAP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SWAP3"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SWAP2"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "SWAP1"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6878,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6867,
											"end": 6918,
											"name": "SWAP5"
										},
										{
											"begin": 6867,
											"end": 6918,
											"name": "POP"
										},
										{
											"begin": 6946,
											"end": 6953,
											"name": "DUP6"
										},
										{
											"begin": 6939,
											"end": 6964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6939,
											"end": 6964,
											"name": "AND"
										},
										{
											"begin": 6939,
											"end": 6964,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "ADDRESS"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "MLOAD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP3"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "AND"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SHL"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP2"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "MSTORE"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "ADD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP3"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "AND"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "AND"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP2"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "MSTORE"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "ADD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SWAP2"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "MLOAD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP4"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SUB"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP2"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP7"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "GAS"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "STATICCALL"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "MLOAD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP2"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "ADD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SWAP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "DUP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "MLOAD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SWAP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "ADD"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SWAP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SWAP3"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SWAP2"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "SWAP1"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6939,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6928,
											"end": 6979,
											"name": "SWAP4"
										},
										{
											"begin": 6928,
											"end": 6979,
											"name": "POP"
										},
										{
											"begin": 6990,
											"end": 7039,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 6998,
											"end": 7006,
											"name": "DUP6"
										},
										{
											"begin": 7008,
											"end": 7016,
											"name": "DUP6"
										},
										{
											"begin": 7018,
											"end": 7027,
											"name": "DUP12"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP12"
										},
										{
											"begin": 6990,
											"end": 6997,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 6990,
											"end": 7039,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6990,
											"end": 7039,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 6990,
											"end": 7039,
											"name": "JUMPDEST"
										},
										{
											"begin": 7053,
											"end": 7058,
											"name": "DUP2"
										},
										{
											"begin": 7049,
											"end": 7096,
											"name": "ISZERO"
										},
										{
											"begin": 7049,
											"end": 7096,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 7049,
											"end": 7096,
											"name": "JUMPI"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "SWAP1"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "SLOAD"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "SWAP1"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "EXP"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "SWAP1"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "DIV"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "AND"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "AND"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "SWAP1"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "SLOAD"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "SWAP1"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "EXP"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "SWAP1"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "DIV"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "AND"
										},
										{
											"begin": 7068,
											"end": 7082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7068,
											"end": 7082,
											"name": "AND"
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 7068,
											"end": 7086,
											"name": "SWAP1"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "SWAP2"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "AND"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 7068,
											"end": 7096,
											"name": "JUMPDEST"
										},
										{
											"begin": 7060,
											"end": 7065,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "DUP2"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "SWAP1"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "SSTORE"
										},
										{
											"begin": 7060,
											"end": 7096,
											"name": "POP"
										},
										{
											"begin": 7049,
											"end": 7096,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 7049,
											"end": 7096,
											"name": "JUMPDEST"
										},
										{
											"begin": 7186,
											"end": 7188,
											"name": "DUP12"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "AND"
										},
										{
											"begin": 7156,
											"end": 7166,
											"name": "CALLER"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "AND"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 7168,
											"end": 7175,
											"name": "DUP14"
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP14"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "MLOAD"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "DUP1"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "DUP4"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "DUP2"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "MSTORE"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "ADD"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "DUP3"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "DUP2"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "MSTORE"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "ADD"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "SWAP3"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "POP"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "POP"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "POP"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "MLOAD"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "DUP1"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "SWAP2"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "SUB"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "SWAP1"
										},
										{
											"begin": 7151,
											"end": 7189,
											"name": "LOG3"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SSTORE"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP2"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "POP"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "SWAP2"
										},
										{
											"begin": 5754,
											"end": 7196,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "PUSH",
											"value": "43616B652D4C5000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 241,
											"end": 282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMPDEST"
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 2521,
											"end": 2531,
											"name": "CALLER"
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "DUP5"
										},
										{
											"begin": 2537,
											"end": 2542,
											"name": "DUP5"
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 2511,
											"end": 2543,
											"name": "JUMPDEST"
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2564,
											"name": "SWAP1"
										},
										{
											"begin": 2553,
											"end": 2564,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP3"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2571,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "JUMPDEST"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "DUP2"
										},
										{
											"begin": 375,
											"end": 421,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "JUMPDEST"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "SLOAD"
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "EQ"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPI"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "REVERT"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "DUP2"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SSTORE"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "POP"
										},
										{
											"begin": 9257,
											"end": 9272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "SWAP1"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "SLOAD"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "SWAP1"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "EXP"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "SWAP1"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DIV"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "AND"
										},
										{
											"begin": 9257,
											"end": 9281,
											"name": "SWAP1"
										},
										{
											"begin": 9257,
											"end": 9281,
											"name": "POP"
										},
										{
											"begin": 9306,
											"end": 9321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "SLOAD"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "EXP"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "DIV"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "AND"
										},
										{
											"begin": 9306,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9306,
											"end": 9330,
											"name": "POP"
										},
										{
											"begin": 9355,
											"end": 9437,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 9369,
											"end": 9376,
											"name": "DUP3"
										},
										{
											"begin": 9378,
											"end": 9380,
											"name": "DUP5"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "SWAP1"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "SLOAD"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "SWAP1"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "EXP"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "SWAP1"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "DIV"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9435,
											"name": "AND"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "AND"
										},
										{
											"begin": 9389,
											"end": 9396,
											"name": "DUP7"
										},
										{
											"begin": 9382,
											"end": 9407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9382,
											"end": 9407,
											"name": "AND"
										},
										{
											"begin": 9382,
											"end": 9407,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9416,
											"end": 9420,
											"name": "ADDRESS"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "MLOAD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP3"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "AND"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SHL"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP2"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "MSTORE"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "ADD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP3"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "AND"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "AND"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP2"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "MSTORE"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "ADD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SWAP2"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "MLOAD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP4"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SUB"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP2"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP7"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "GAS"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "STATICCALL"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "MLOAD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP2"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "ADD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SWAP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "DUP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "MLOAD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SWAP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "ADD"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SWAP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SWAP3"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SWAP2"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "SWAP1"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9422,
											"name": "POP"
										},
										{
											"begin": 9382,
											"end": 9426,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 9382,
											"end": 9426,
											"name": "SWAP1"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "SWAP2"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "SWAP1"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "AND"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 9382,
											"end": 9436,
											"name": "JUMPDEST"
										},
										{
											"begin": 9355,
											"end": 9368,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9355,
											"end": 9437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9355,
											"end": 9437,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 9355,
											"end": 9437,
											"name": "JUMPDEST"
										},
										{
											"begin": 9447,
											"end": 9529,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 9461,
											"end": 9468,
											"name": "DUP2"
										},
										{
											"begin": 9470,
											"end": 9472,
											"name": "DUP5"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "SWAP1"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "SLOAD"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "SWAP1"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "EXP"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "SWAP1"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "DIV"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9519,
											"end": 9527,
											"name": "AND"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "AND"
										},
										{
											"begin": 9481,
											"end": 9488,
											"name": "DUP6"
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "AND"
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9508,
											"end": 9512,
											"name": "ADDRESS"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "MLOAD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP3"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "AND"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SHL"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP2"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "MSTORE"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "ADD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP3"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "AND"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "AND"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP2"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "MSTORE"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "ADD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SWAP2"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "MLOAD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP4"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SUB"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP2"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP7"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "GAS"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "STATICCALL"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "MLOAD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP2"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "ADD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SWAP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "DUP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "MLOAD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SWAP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "ADD"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SWAP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SWAP3"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SWAP2"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "SWAP1"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9514,
											"name": "POP"
										},
										{
											"begin": 9474,
											"end": 9518,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 9474,
											"end": 9518,
											"name": "SWAP1"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "SWAP2"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "SWAP1"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "AND"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 9474,
											"end": 9528,
											"name": "JUMPDEST"
										},
										{
											"begin": 9447,
											"end": 9460,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9447,
											"end": 9529,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9447,
											"end": 9529,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 9447,
											"end": 9529,
											"name": "JUMPDEST"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SSTORE"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "POP"
										},
										{
											"begin": 9207,
											"end": 9536,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "DUP2"
										},
										{
											"begin": 522,
											"end": 544,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SLOAD"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "EXP"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "DIV"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMPDEST"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3115,
											"end": 3123,
											"name": "DUP5"
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "LT"
										},
										{
											"begin": 3115,
											"end": 3142,
											"name": "ISZERO"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "JUMPI"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP3"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SUB"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP3"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "50616E63616B653A204558504952454400000000000000000000000000000000"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SUB"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "SWAP1"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "REVERT"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 3107,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3173,
											"end": 3187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3291,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3275,
											"end": 3291,
											"name": "SLOAD"
										},
										{
											"begin": 665,
											"end": 731,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SHL"
										},
										{
											"begin": 3347,
											"end": 3352,
											"name": "DUP10"
										},
										{
											"begin": 3354,
											"end": 3361,
											"name": "DUP10"
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP10"
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP15"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "KECCAK256"
										},
										{
											"begin": 3370,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SLOAD"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "DUP1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP3"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP2"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP2"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "POP"
										},
										{
											"begin": 3370,
											"end": 3385,
											"name": "SSTORE"
										},
										{
											"begin": 3387,
											"end": 3395,
											"name": "DUP11"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MLOAD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP1"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP8"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP7"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP6"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP5"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP4"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP3"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "SWAP7"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "DUP1"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "MLOAD"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "SWAP1"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "ADD"
										},
										{
											"begin": 3309,
											"end": 3397,
											"name": "KECCAK256"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP4"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP3"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "DUP1"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "MLOAD"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "ADD"
										},
										{
											"begin": 3190,
											"end": 3421,
											"name": "KECCAK256"
										},
										{
											"begin": 3173,
											"end": 3421,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3421,
											"name": "POP"
										},
										{
											"begin": 3431,
											"end": 3455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3468,
											"end": 3474,
											"name": "DUP3"
										},
										{
											"begin": 3476,
											"end": 3477,
											"name": "DUP7"
										},
										{
											"begin": 3479,
											"end": 3480,
											"name": "DUP7"
										},
										{
											"begin": 3482,
											"end": 3483,
											"name": "DUP7"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP6"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP5"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "AND"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "AND"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP4"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP3"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MSTORE"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ADD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SWAP5"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP2"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP5"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "DUP6"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "GAS"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "STATICCALL"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "SUB"
										},
										{
											"begin": 3458,
											"end": 3484,
											"name": "MLOAD"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3431,
											"end": 3484,
											"name": "POP"
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "AND"
										},
										{
											"begin": 3502,
											"end": 3518,
											"name": "DUP2"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "AND"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "EQ"
										},
										{
											"begin": 3502,
											"end": 3532,
											"name": "ISZERO"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "DUP1"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "ISZERO"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "JUMPI"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "POP"
										},
										{
											"begin": 3556,
											"end": 3561,
											"name": "DUP9"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "AND"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "AND"
										},
										{
											"begin": 3536,
											"end": 3561,
											"name": "EQ"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 3502,
											"end": 3561,
											"name": "JUMPDEST"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "JUMPI"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MLOAD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP3"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SUB"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP3"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MSTORE"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "ADD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SWAP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "POP"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "MLOAD"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "DUP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SWAP2"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SUB"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "SWAP1"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "REVERT"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 3494,
											"end": 3592,
											"name": "JUMPDEST"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP10"
										},
										{
											"begin": 3618,
											"end": 3625,
											"name": "DUP10"
										},
										{
											"begin": 3627,
											"end": 3632,
											"name": "DUP10"
										},
										{
											"begin": 3602,
											"end": 3610,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 3602,
											"end": 3633,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "POP"
										},
										{
											"begin": 2914,
											"end": 3640,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "KECCAK256"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "KECCAK256"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "SLOAD"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "JUMPDEST"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "SLOAD"
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "EQ"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPI"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP3"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "50616E63616B653A204C4F434B45440000000000000000000000000000000000"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MSTORE"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "ADD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "POP"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "MLOAD"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP2"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SUB"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "SWAP1"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "REVERT"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 1131,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "DUP2"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SWAP1"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "SSTORE"
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "POP"
										},
										{
											"begin": 9622,
											"end": 9731,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "SWAP1"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "SLOAD"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "SWAP1"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "EXP"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "SWAP1"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "DIV"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "AND"
										},
										{
											"begin": 9630,
											"end": 9654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9630,
											"end": 9654,
											"name": "AND"
										},
										{
											"begin": 9630,
											"end": 9654,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9663,
											"end": 9667,
											"name": "ADDRESS"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "MLOAD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP3"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "AND"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SHL"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP2"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "MSTORE"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "ADD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP3"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "AND"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "AND"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP2"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "MSTORE"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "ADD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SWAP2"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "MLOAD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP4"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SUB"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP2"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP7"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "GAS"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "STATICCALL"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "MLOAD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP2"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "ADD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "MLOAD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "ADD"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SWAP3"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SWAP2"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "SWAP1"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "SLOAD"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "SWAP1"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "EXP"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "SWAP1"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "DIV"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "AND"
										},
										{
											"begin": 9671,
											"end": 9695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9695,
											"name": "AND"
										},
										{
											"begin": 9671,
											"end": 9695,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "ADDRESS"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "AND"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SHL"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP3"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "AND"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "AND"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "MSTORE"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP4"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SUB"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP7"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "GAS"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "STATICCALL"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP2"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "DUP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "MLOAD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "ADD"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SWAP3"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SWAP2"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "SWAP1"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9671,
											"end": 9710,
											"name": "POP"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "SWAP1"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "SLOAD"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "SWAP1"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "EXP"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "SWAP1"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "DIV"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9712,
											"end": 9720,
											"name": "AND"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "SWAP1"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "SLOAD"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "SWAP1"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "EXP"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "SWAP1"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "DIV"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9722,
											"end": 9730,
											"name": "AND"
										},
										{
											"begin": 9622,
											"end": 9629,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9622,
											"end": 9731,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9622,
											"end": 9731,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 9622,
											"end": 9731,
											"name": "JUMPDEST"
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "SSTORE"
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 9582,
											"end": 9738,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "JUMPDEST"
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1585,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1589,
											"end": 1594,
											"name": "DUP5"
										},
										{
											"begin": 1589,
											"end": 1599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1599,
											"name": "AND"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "MLOAD"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "DUP1"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "ADD"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "DUP2"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "MSTORE"
										},
										{
											"begin": 479,
											"end": 513,
											"name": "POP"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "DUP1"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "MLOAD"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "SWAP1"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "ADD"
										},
										{
											"begin": 469,
											"end": 514,
											"name": "KECCAK256"
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "DUP6"
										},
										{
											"begin": 1637,
											"end": 1642,
											"name": "DUP6"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MLOAD"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP4"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "AND"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "AND"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP2"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP3"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "DUP2"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP3"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "POP"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "POP"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "POP"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "MSTORE"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "NOT"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 1600,
											"end": 1643,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP3"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "ADD"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP4"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "SWAP1"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "ADD"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "SWAP2"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP4"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "SUB"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "DUP7"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "GAS"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "CALL"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "SWAP2"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1644,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1553,
											"end": 1644,
											"name": "SWAP2"
										},
										{
											"begin": 1553,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1553,
											"end": 1644,
											"name": "SWAP2"
										},
										{
											"begin": 1553,
											"end": 1644,
											"name": "POP"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "DUP2"
										},
										{
											"begin": 1662,
											"end": 1719,
											"name": "DUP1"
										},
										{
											"begin": 1662,
											"end": 1719,
											"name": "ISZERO"
										},
										{
											"begin": 1662,
											"end": 1719,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 1662,
											"end": 1719,
											"name": "JUMPI"
										},
										{
											"begin": 1662,
											"end": 1719,
											"name": "POP"
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "DUP2"
										},
										{
											"begin": 1674,
											"end": 1685,
											"name": "MLOAD"
										},
										{
											"begin": 1674,
											"end": 1690,
											"name": "EQ"
										},
										{
											"begin": 1674,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1674,
											"end": 1718,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 1674,
											"end": 1718,
											"name": "JUMPI"
										},
										{
											"begin": 1674,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1705,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "ADD"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP2"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "ADD"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "DUP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "MLOAD"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "ADD"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP3"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP2"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "SWAP1"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1694,
											"end": 1718,
											"name": "POP"
										},
										{
											"begin": 1674,
											"end": 1718,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 1674,
											"end": 1718,
											"name": "JUMPDEST"
										},
										{
											"begin": 1662,
											"end": 1719,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 1662,
											"end": 1719,
											"name": "JUMPDEST"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "JUMPI"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "MLOAD"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP2"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "MSTORE"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "ADD"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP1"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP1"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "ADD"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP3"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP2"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "SUB"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP3"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "MSTORE"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP2"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "MSTORE"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "ADD"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP1"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "50616E63616B653A205452414E534645525F4641494C45440000000000000000"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP2"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "MSTORE"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "ADD"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "SWAP2"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "MLOAD"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "DUP1"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "SWAP2"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "SUB"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "SWAP1"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "REVERT"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 1654,
											"end": 1748,
											"name": "JUMPDEST"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "POP"
										},
										{
											"begin": 1473,
											"end": 1755,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP3"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPI"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "POP"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3"
										},
										{
											"begin": 587,
											"end": 588,
											"name": "DUP4"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "DUP6"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "MUL"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "SWAP3"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "POP"
										},
										{
											"begin": 579,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "INVALID"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "REVERT"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "SWAP3"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "SWAP2"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "POP"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "JUMPDEST"
										},
										{
											"begin": 2687,
											"end": 2689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "AND"
										},
										{
											"begin": 2667,
											"end": 2675,
											"name": "DUP5"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "GT"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "ISZERO"
										},
										{
											"begin": 2667,
											"end": 2717,
											"name": "DUP1"
										},
										{
											"begin": 2667,
											"end": 2717,
											"name": "ISZERO"
										},
										{
											"begin": 2667,
											"end": 2717,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 2667,
											"end": 2717,
											"name": "JUMPI"
										},
										{
											"begin": 2667,
											"end": 2717,
											"name": "POP"
										},
										{
											"begin": 2714,
											"end": 2716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "AND"
										},
										{
											"begin": 2694,
											"end": 2702,
											"name": "DUP4"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "GT"
										},
										{
											"begin": 2694,
											"end": 2717,
											"name": "ISZERO"
										},
										{
											"begin": 2667,
											"end": 2717,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 2667,
											"end": 2717,
											"name": "JUMPDEST"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "JUMPI"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "MLOAD"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP2"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "MSTORE"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "ADD"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP1"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP1"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "ADD"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP3"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP2"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "SUB"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP3"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "MSTORE"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP2"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "MSTORE"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "ADD"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP1"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "50616E63616B653A204F564552464C4F57000000000000000000000000000000"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP2"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "MSTORE"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "POP"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "ADD"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "SWAP2"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "POP"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "POP"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "MLOAD"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "DUP1"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "SWAP2"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "SUB"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "SWAP1"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "REVERT"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 2659,
											"end": 2739,
											"name": "JUMPDEST"
										},
										{
											"begin": 2749,
											"end": 2770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2803,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 2780,
											"end": 2795,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "JUMPI"
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "INVALID"
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "JUMPDEST"
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "MOD"
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "SWAP1"
										},
										{
											"begin": 2749,
											"end": 2804,
											"name": "POP"
										},
										{
											"begin": 2814,
											"end": 2832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "SLOAD"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "EXP"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DIV"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "AND"
										},
										{
											"begin": 2835,
											"end": 2849,
											"name": "DUP3"
										},
										{
											"begin": 2835,
											"end": 2870,
											"name": "SUB"
										},
										{
											"begin": 2814,
											"end": 2870,
											"name": "SWAP1"
										},
										{
											"begin": 2814,
											"end": 2870,
											"name": "POP"
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "DUP2"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "AND"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "GT"
										},
										{
											"begin": 2907,
											"end": 2940,
											"name": "DUP1"
										},
										{
											"begin": 2907,
											"end": 2940,
											"name": "ISZERO"
										},
										{
											"begin": 2907,
											"end": 2940,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 2907,
											"end": 2940,
											"name": "JUMPI"
										},
										{
											"begin": 2907,
											"end": 2940,
											"name": "POP"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP5"
										},
										{
											"begin": 2926,
											"end": 2940,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2940,
											"name": "AND"
										},
										{
											"begin": 2926,
											"end": 2940,
											"name": "EQ"
										},
										{
											"begin": 2926,
											"end": 2940,
											"name": "ISZERO"
										},
										{
											"begin": 2907,
											"end": 2940,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 2907,
											"end": 2940,
											"name": "JUMPDEST"
										},
										{
											"begin": 2907,
											"end": 2958,
											"name": "DUP1"
										},
										{
											"begin": 2907,
											"end": 2958,
											"name": "ISZERO"
										},
										{
											"begin": 2907,
											"end": 2958,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 2907,
											"end": 2958,
											"name": "JUMPI"
										},
										{
											"begin": 2907,
											"end": 2958,
											"name": "POP"
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2953,
											"name": "DUP4"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "AND"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "EQ"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "ISZERO"
										},
										{
											"begin": 2907,
											"end": 2958,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 2907,
											"end": 2958,
											"name": "JUMPDEST"
										},
										{
											"begin": 2903,
											"end": 3235,
											"name": "ISZERO"
										},
										{
											"begin": 2903,
											"end": 3235,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 2903,
											"end": 3235,
											"name": "JUMPI"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "DUP1"
										},
										{
											"begin": 3058,
											"end": 3122,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3122,
											"name": "AND"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 3097,
											"end": 3106,
											"name": "DUP6"
										},
										{
											"begin": 3063,
											"end": 3090,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "DUP7"
										},
										{
											"begin": 3063,
											"end": 3079,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3063,
											"end": 3090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3090,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 3063,
											"end": 3090,
											"name": "JUMPDEST"
										},
										{
											"begin": 3063,
											"end": 3096,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3063,
											"end": 3096,
											"name": "AND"
										},
										{
											"begin": 3063,
											"end": 3096,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 3063,
											"end": 3096,
											"name": "SWAP1"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "SWAP2"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "SWAP1"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "AND"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 3063,
											"end": 3107,
											"name": "JUMPDEST"
										},
										{
											"begin": 3058,
											"end": 3108,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3108,
											"name": "AND"
										},
										{
											"begin": 3058,
											"end": 3122,
											"name": "MUL"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3034,
											"end": 3054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "DUP3"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "DUP3"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "SLOAD"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "ADD"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "SWAP3"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "POP"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "POP"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "DUP2"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "SWAP1"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "SSTORE"
										},
										{
											"begin": 3034,
											"end": 3122,
											"name": "POP"
										},
										{
											"begin": 3213,
											"end": 3224,
											"name": "DUP1"
										},
										{
											"begin": 3160,
											"end": 3224,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3160,
											"end": 3224,
											"name": "AND"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP5"
										},
										{
											"begin": 3165,
											"end": 3192,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "DUP8"
										},
										{
											"begin": 3165,
											"end": 3181,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 3165,
											"end": 3192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3192,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 3165,
											"end": 3192,
											"name": "JUMPDEST"
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "AND"
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "SWAP1"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "SWAP2"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "SWAP1"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "AND"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 3165,
											"end": 3209,
											"name": "JUMPDEST"
										},
										{
											"begin": 3160,
											"end": 3210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3160,
											"end": 3210,
											"name": "AND"
										},
										{
											"begin": 3160,
											"end": 3224,
											"name": "MUL"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3136,
											"end": 3156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "DUP3"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "DUP3"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "SLOAD"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "ADD"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "SWAP3"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "POP"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "POP"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "DUP2"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "SWAP1"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "SSTORE"
										},
										{
											"begin": 3136,
											"end": 3224,
											"name": "POP"
										},
										{
											"begin": 2903,
											"end": 3235,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 2903,
											"end": 3235,
											"name": "JUMPDEST"
										},
										{
											"begin": 3263,
											"end": 3271,
											"name": "DUP6"
										},
										{
											"begin": 3244,
											"end": 3252,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3244,
											"end": 3252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "EXP"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "DUP2"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "SLOAD"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "DUP2"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "MUL"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "NOT"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "AND"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "DUP4"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "AND"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "MUL"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "OR"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "SWAP1"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "SSTORE"
										},
										{
											"begin": 3244,
											"end": 3272,
											"name": "POP"
										},
										{
											"begin": 3301,
											"end": 3309,
											"name": "DUP5"
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "EXP"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "SLOAD"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "DUP2"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "MUL"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "NOT"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "SWAP1"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "DUP4"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "AND"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "MUL"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "OR"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "SWAP1"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "SSTORE"
										},
										{
											"begin": 3282,
											"end": 3310,
											"name": "POP"
										},
										{
											"begin": 3341,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "EXP"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "SLOAD"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "MUL"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "NOT"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "AND"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "SWAP1"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "DUP4"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "AND"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "MUL"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "OR"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "SWAP1"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "SSTORE"
										},
										{
											"begin": 3320,
											"end": 3355,
											"name": "POP"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "SLOAD"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "EXP"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "SWAP1"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "DIV"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3383,
											"name": "AND"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "SWAP1"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "SLOAD"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "SWAP1"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "EXP"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "SWAP1"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "DIV"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3385,
											"end": 3393,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "MLOAD"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "DUP1"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "DUP4"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "DUP3"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "AND"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "DUP2"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "MSTORE"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "ADD"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "SWAP3"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "POP"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "POP"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "POP"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "MLOAD"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "DUP1"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "SWAP2"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "SUB"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "SWAP1"
										},
										{
											"begin": 3370,
											"end": 3394,
											"name": "LOG1"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "POP"
										},
										{
											"begin": 2556,
											"end": 3401,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "JUMPDEST"
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "DUP1"
										},
										{
											"begin": 1932,
											"end": 1941,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1947,
											"name": "DUP6"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1948,
											"name": "KECCAK256"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP5"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "AND"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "MSTORE"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "ADD"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1957,
											"name": "KECCAK256"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP2"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SSTORE"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "POP"
										},
										{
											"begin": 1996,
											"end": 2003,
											"name": "DUP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 1994,
											"name": "DUP4"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "AND"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP4"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "MLOAD"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP1"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP3"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "MSTORE"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "ADD"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SWAP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "POP"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "POP"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "MLOAD"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "DUP1"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SWAP2"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SUB"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "SWAP1"
										},
										{
											"begin": 1980,
											"end": 2011,
											"name": "LOG3"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 1819,
											"end": 2018,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "JUMPDEST"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "DUP7"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "KECCAK256"
										},
										{
											"begin": 2150,
											"end": 2165,
											"name": "SLOAD"
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2150,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "SWAP2"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 2150,
											"end": 2176,
											"name": "JUMPDEST"
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP6"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "ADD"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "SWAP1"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "ADD"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "KECCAK256"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "SWAP1"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "SSTORE"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "POP"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "DUP6"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "DUP2"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "MSTORE"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "ADD"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "KECCAK256"
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "SLOAD"
										},
										{
											"begin": 2202,
											"end": 2219,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 2202,
											"end": 2219,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "SWAP2"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "AND"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST"
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2198,
											"name": "DUP5"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "AND"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "AND"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "DUP2"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "MSTORE"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "ADD"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "SWAP1"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "DUP2"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "MSTORE"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "ADD"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2199,
											"name": "KECCAK256"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "DUP2"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "SWAP1"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "SSTORE"
										},
										{
											"begin": 2186,
											"end": 2226,
											"name": "POP"
										},
										{
											"begin": 2256,
											"end": 2258,
											"name": "DUP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "AND"
										},
										{
											"begin": 2250,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "AND"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2260,
											"end": 2265,
											"name": "DUP4"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "MLOAD"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP1"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP3"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "MSTORE"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "ADD"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "POP"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "POP"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "MLOAD"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "DUP1"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP2"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SUB"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "SWAP1"
										},
										{
											"begin": 2241,
											"end": 2266,
											"name": "LOG3"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "POP"
										},
										{
											"begin": 2024,
											"end": 2273,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "JUMPDEST"
										},
										{
											"begin": 3560,
											"end": 3570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "SWAP1"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "SLOAD"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "SWAP1"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "EXP"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "SWAP1"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "DIV"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "AND"
										},
										{
											"begin": 3598,
											"end": 3628,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3598,
											"end": 3628,
											"name": "AND"
										},
										{
											"begin": 3598,
											"end": 3628,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "MLOAD"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "AND"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SHL"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "MSTORE"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "ADD"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "MLOAD"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP4"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SUB"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP7"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "GAS"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "STATICCALL"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "MLOAD"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP2"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "ADD"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "DUP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "MLOAD"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "ADD"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SWAP3"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SWAP2"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3598,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3582,
											"end": 3630,
											"name": "SWAP1"
										},
										{
											"begin": 3582,
											"end": 3630,
											"name": "POP"
										},
										{
											"begin": 3665,
											"end": 3666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3648,
											"end": 3667,
											"name": "AND"
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "DUP2"
										},
										{
											"begin": 3648,
											"end": 3667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3648,
											"end": 3667,
											"name": "AND"
										},
										{
											"begin": 3648,
											"end": 3667,
											"name": "EQ"
										},
										{
											"begin": 3648,
											"end": 3667,
											"name": "ISZERO"
										},
										{
											"begin": 3640,
											"end": 3667,
											"name": "SWAP2"
										},
										{
											"begin": 3640,
											"end": 3667,
											"name": "POP"
										},
										{
											"begin": 3677,
											"end": 3688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "SLOAD"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "SWAP1"
										},
										{
											"begin": 3677,
											"end": 3696,
											"name": "POP"
										},
										{
											"begin": 3725,
											"end": 3730,
											"name": "DUP3"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "ISZERO"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "JUMPI"
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "DUP2"
										},
										{
											"begin": 3750,
											"end": 3761,
											"name": "EQ"
										},
										{
											"begin": 3746,
											"end": 4246,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 3746,
											"end": 4246,
											"name": "JUMPI"
										},
										{
											"begin": 3781,
											"end": 3791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3835,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP7"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "AND"
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "DUP9"
										},
										{
											"begin": 3804,
											"end": 3819,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3804,
											"end": 3819,
											"name": "AND"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP1"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "SWAP2"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "SWAP1"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "AND"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 3804,
											"end": 3834,
											"name": "JUMPDEST"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 3794,
											"end": 3835,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3794,
											"end": 3835,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 3794,
											"end": 3835,
											"name": "JUMPDEST"
										},
										{
											"begin": 3781,
											"end": 3835,
											"name": "SWAP1"
										},
										{
											"begin": 3781,
											"end": 3835,
											"name": "POP"
										},
										{
											"begin": 3853,
											"end": 3867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP4"
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "JUMPDEST"
										},
										{
											"begin": 3853,
											"end": 3887,
											"name": "SWAP1"
										},
										{
											"begin": 3853,
											"end": 3887,
											"name": "POP"
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP1"
										},
										{
											"begin": 3909,
											"end": 3914,
											"name": "DUP3"
										},
										{
											"begin": 3909,
											"end": 3926,
											"name": "GT"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "ISZERO"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "JUMPI"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 4009,
											"end": 4010,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP6"
										},
										{
											"begin": 3983,
											"end": 3988,
											"name": "DUP8"
										},
										{
											"begin": 3983,
											"end": 3992,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 3983,
											"end": 3992,
											"name": "SWAP1"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "SWAP2"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "SWAP1"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "AND"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 3983,
											"end": 4003,
											"name": "JUMPDEST"
										},
										{
											"begin": 3967,
											"end": 3978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3978,
											"name": "SLOAD"
										},
										{
											"begin": 3967,
											"end": 3982,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3967,
											"end": 3982,
											"name": "SWAP1"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "SWAP2"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "SWAP1"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "AND"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "JUMPDEST"
										},
										{
											"begin": 3967,
											"end": 4008,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3967,
											"end": 4008,
											"name": "SWAP1"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "SWAP2"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "AND"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 3967,
											"end": 4011,
											"name": "JUMPDEST"
										},
										{
											"begin": 3950,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3950,
											"end": 4011,
											"name": "POP"
										},
										{
											"begin": 4033,
											"end": 4049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 4084,
											"end": 4085,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4070,
											"end": 4079,
											"name": "DUP6"
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4070,
											"end": 4083,
											"name": "SWAP1"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "SWAP2"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "SWAP1"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "AND"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 4070,
											"end": 4086,
											"name": "JUMPDEST"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 4052,
											"end": 4057,
											"name": "DUP8"
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "SWAP1"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "SWAP2"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "SWAP1"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "AND"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 4052,
											"end": 4065,
											"name": "JUMPDEST"
										},
										{
											"begin": 4052,
											"end": 4069,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 4052,
											"end": 4069,
											"name": "SWAP1"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "SWAP2"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "SWAP1"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "AND"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 4052,
											"end": 4087,
											"name": "JUMPDEST"
										},
										{
											"begin": 4033,
											"end": 4087,
											"name": "SWAP1"
										},
										{
											"begin": 4033,
											"end": 4087,
											"name": "POP"
										},
										{
											"begin": 4109,
											"end": 4123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4138,
											"end": 4149,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4135,
											"name": "DUP4"
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "DUP2"
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "JUMPI"
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "INVALID"
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "JUMPDEST"
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "DIV"
										},
										{
											"begin": 4109,
											"end": 4149,
											"name": "SWAP1"
										},
										{
											"begin": 4109,
											"end": 4149,
											"name": "POP"
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "DUP2"
										},
										{
											"begin": 4175,
											"end": 4188,
											"name": "GT"
										},
										{
											"begin": 4171,
											"end": 4213,
											"name": "ISZERO"
										},
										{
											"begin": 4171,
											"end": 4213,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 4171,
											"end": 4213,
											"name": "JUMPI"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 4196,
											"end": 4201,
											"name": "DUP8"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP3"
										},
										{
											"begin": 4190,
											"end": 4195,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "JUMPDEST"
										},
										{
											"begin": 4171,
											"end": 4213,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 4171,
											"end": 4213,
											"name": "JUMPDEST"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 3905,
											"end": 4232,
											"name": "JUMPDEST"
										},
										{
											"begin": 3746,
											"end": 4246,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 4246,
											"name": "POP"
										},
										{
											"begin": 3746,
											"end": 4246,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 3746,
											"end": 4246,
											"name": "JUMPDEST"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "JUMP"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "JUMPDEST"
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4272,
											"name": "DUP2"
										},
										{
											"begin": 4266,
											"end": 4277,
											"name": "EQ"
										},
										{
											"begin": 4262,
											"end": 4313,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 4262,
											"end": 4313,
											"name": "JUMPI"
										},
										{
											"begin": 4301,
											"end": 4302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "DUP2"
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "SWAP1"
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "SSTORE"
										},
										{
											"begin": 4293,
											"end": 4302,
											"name": "POP"
										},
										{
											"begin": 4262,
											"end": 4313,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 4262,
											"end": 4313,
											"name": "JUMPDEST"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 3721,
											"end": 4313,
											"name": "JUMPDEST"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "POP"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "POP"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "SWAP3"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "SWAP2"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "POP"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "POP"
										},
										{
											"begin": 3487,
											"end": 4319,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "GT"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP2"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 446,
											"end": 451,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP5"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "INVALID"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DIV"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "LT"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP2"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP6"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "INVALID"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DIV"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 610,
											"name": "DUP3"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "EQ"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1399,
											"end": 1599,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1399,
											"end": 1599,
											"name": "JUMPDEST"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 1490,
											"end": 1495,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1485,
											"name": "SLOAD"
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1474,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "SWAP2"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "SWAP1"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "AND"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "JUMPDEST"
										},
										{
											"begin": 1460,
											"end": 1471,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "DUP2"
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "SWAP1"
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "SSTORE"
										},
										{
											"begin": 1460,
											"end": 1496,
											"name": "POP"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "DUP2"
										},
										{
											"begin": 1522,
											"end": 1531,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "DUP6"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "AND"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "AND"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "DUP2"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "MSTORE"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "ADD"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "SWAP1"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "DUP2"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "MSTORE"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "ADD"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "KECCAK256"
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "SLOAD"
										},
										{
											"begin": 1522,
											"end": 1539,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1522,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "SWAP2"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "SWAP1"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "AND"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 1522,
											"end": 1546,
											"name": "JUMPDEST"
										},
										{
											"begin": 1506,
											"end": 1515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1518,
											"name": "DUP5"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "AND"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "AND"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "DUP2"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "MSTORE"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "ADD"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "SWAP1"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "DUP2"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "MSTORE"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "ADD"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "KECCAK256"
										},
										{
											"begin": 1506,
											"end": 1546,
											"name": "DUP2"
										},
										{
											"begin": 1506,
											"end": 1546,
											"name": "SWAP1"
										},
										{
											"begin": 1506,
											"end": 1546,
											"name": "SSTORE"
										},
										{
											"begin": 1506,
											"end": 1546,
											"name": "POP"
										},
										{
											"begin": 1582,
											"end": 1584,
											"name": "DUP2"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "AND"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "AND"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1586,
											"end": 1591,
											"name": "DUP4"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "SWAP2"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "SUB"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1561,
											"end": 1592,
											"name": "LOG3"
										},
										{
											"begin": 1399,
											"end": 1599,
											"name": "POP"
										},
										{
											"begin": 1399,
											"end": 1599,
											"name": "POP"
										},
										{
											"begin": 1399,
											"end": 1599,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 218,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "LT"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMP"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "SWAP1"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP3"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP2"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1813,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 1605,
											"end": 1813,
											"name": "JUMPDEST"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "DUP6"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "AND"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "AND"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "ADD"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "DUP2"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "ADD"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "KECCAK256"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "SLOAD"
										},
										{
											"begin": 1686,
											"end": 1705,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1686,
											"end": 1705,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "SWAP2"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "AND"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 1686,
											"end": 1712,
											"name": "JUMPDEST"
										},
										{
											"begin": 1668,
											"end": 1677,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1682,
											"name": "DUP5"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "AND"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "AND"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "MSTORE"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "ADD"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "SWAP1"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "MSTORE"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "ADD"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1683,
											"name": "KECCAK256"
										},
										{
											"begin": 1668,
											"end": 1712,
											"name": "DUP2"
										},
										{
											"begin": 1668,
											"end": 1712,
											"name": "SWAP1"
										},
										{
											"begin": 1668,
											"end": 1712,
											"name": "SSTORE"
										},
										{
											"begin": 1668,
											"end": 1712,
											"name": "POP"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "PUSH [tag]",
											"value": "334"
										},
										{
											"begin": 1752,
											"end": 1757,
											"name": "DUP2"
										},
										{
											"begin": 1736,
											"end": 1747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1747,
											"name": "SLOAD"
										},
										{
											"begin": 1736,
											"end": 1751,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 1736,
											"end": 1751,
											"name": "SWAP1"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "SWAP2"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "SWAP1"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "AND"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "tag",
											"value": "334"
										},
										{
											"begin": 1736,
											"end": 1758,
											"name": "JUMPDEST"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1758,
											"name": "DUP2"
										},
										{
											"begin": 1722,
											"end": 1758,
											"name": "SWAP1"
										},
										{
											"begin": 1722,
											"end": 1758,
											"name": "SSTORE"
										},
										{
											"begin": 1722,
											"end": 1758,
											"name": "POP"
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "AND"
										},
										{
											"begin": 1782,
											"end": 1786,
											"name": "DUP3"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "AND"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "MLOAD"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "DUP1"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "DUP3"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "DUP2"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "MSTORE"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "ADD"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "SWAP2"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "POP"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "POP"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "MLOAD"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "DUP1"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "SWAP2"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "SUB"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "SWAP1"
										},
										{
											"begin": 1773,
											"end": 1806,
											"name": "LOG3"
										},
										{
											"begin": 1605,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 1813,
											"name": "POP"
										},
										{
											"begin": 1605,
											"end": 1813,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"value": "10000000000000000000000000000"
										},
										{
											"begin": 402,
											"end": 403,
											"name": "DUP3"
										},
										{
											"begin": 394,
											"end": 404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 394,
											"end": 404,
											"name": "AND"
										},
										{
											"begin": 394,
											"end": 411,
											"name": "MUL"
										},
										{
											"begin": 390,
											"end": 411,
											"name": "SWAP1"
										},
										{
											"begin": 390,
											"end": 411,
											"name": "POP"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "SWAP2"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "SWAP1"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "POP"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 602,
											"end": 603,
											"name": "DUP2"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 591,
											"name": "DUP4"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPI"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "INVALID"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DIV"
										},
										{
											"begin": 586,
											"end": 604,
											"name": "SWAP1"
										},
										{
											"begin": 586,
											"end": 604,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "SWAP3"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "SWAP2"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 300,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 294,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP5"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "SWAP2"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "POP"
										},
										{
											"begin": 286,
											"end": 295,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "POP"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP3"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "SWAP2"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PancakePair.sol\":\"PancakePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x6612e2fccf8d31da3401a0cd5c7f5018781a176fc7b2f8a64adec6727221ad5c\",\"urls\":[\"bzz-raw://0c127eadc7ad16f752878e1e87238907934bd94cd4907d76afeacf398ea0fd28\",\"dweb:/ipfs/QmVz4GzPGwcNbzK5NM1BCz2uDrPUoRvAKQk5w6Y6cHRqRC\"]},\"IPancakeCallee.sol\":{\"keccak256\":\"0xb7f88a49487d00e5c5fb4c70e59e5414c73e5ddbbc1d4eb9a4eb5a7210b0ec4b\",\"urls\":[\"bzz-raw://f4034676e4c16407bf6c44f1cd3a3983847778d4b944bf38c1daf815fb720f1f\",\"dweb:/ipfs/QmXLta9jJzi81AjejPs2VgMKmXhJavPQW5LJiNb8KbEkcm\"]},\"IPancakeERC20.sol\":{\"keccak256\":\"0x8f7a6ef0761584fa011d9e5f5160f35993fde3a08a64ea921d1ac4553255bc47\",\"urls\":[\"bzz-raw://8b60a23f5c9e440bdc2ade2fc5ce28a62c23bc7c1b37ab61ea5c5f4cef8d8005\",\"dweb:/ipfs/QmTUhKMtXKSE9V4MVswkC7deV4cyE9WUGo8ZKvopypHkgo\"]},\"IPancakeFactory.sol\":{\"keccak256\":\"0xfe7bdc735687e2e3d4207fe77661b90679038ec5b3f77e4bd2c2520a273d2209\",\"urls\":[\"bzz-raw://bfa09ce828c2564b52e59f964bdb40c8d5a08b4b35f8e91b504bb173733498ba\",\"dweb:/ipfs/QmYZjeefob32YQfwcg5TTySJyCfSViZSyuo1UkQFMw36cX\"]},\"IPancakePair.sol\":{\"keccak256\":\"0xf684b8cfc256cc9d983eef4705257029d13724f8e5a73f85664fc617d70fd2ab\",\"urls\":[\"bzz-raw://6673f9e15d58e0f138f9b5dd24b777cf58e20fa6557ee72e01ecdede016c8bb3\",\"dweb:/ipfs/QmNQSnPC4xdzX4DScnnVdHqnkPH6ri1tSV79RmrbidbvVk\"]},\"Math.sol\":{\"keccak256\":\"0x9decb78800ca00b383f257c9d0f9bb93d4db5efbff54af28ba4cd9e5fa4442df\",\"urls\":[\"bzz-raw://cd9d8049b9f2e645e7fb5c3fa1a308284bea9e38f236f2de917bdba2e4b715ad\",\"dweb:/ipfs/QmT2Vg93JnnNrATyRh5N19XPPZU7NdcJcoTUjsXW6mSjWh\"]},\"PancakeERC20.sol\":{\"keccak256\":\"0x51a5303c0c986c866deb1309ed4010d42a4a2c1c5d0577455c055d1aebdabd40\",\"urls\":[\"bzz-raw://f530e85a553de8cf9593289d288633180fda37fa5e0d1cf957b584139c5b8527\",\"dweb:/ipfs/QmdYoedWfvxJsS87Zy4r9PeusQ5j5E15vaocAc3ttoDcmu\"]},\"PancakePair.sol\":{\"keccak256\":\"0x7e02d8755e4e3c0649f6e12d75e19a4184ad52133e1aeb4351bfb75424be49b1\",\"urls\":[\"bzz-raw://33ed7bdc61bccf270eeaa3ad713df03afaa7b4b25d87f0b279dcda93b7bb0279\",\"dweb:/ipfs/QmRtCom8JWP3kRHztZJzeYxAHN2HnKUZhAkHjm1k1Zq9yQ\"]},\"SafeMath.sol\":{\"keccak256\":\"0xc182f29fa8b894424cf4fc5d582c22e20e9f42cca618e4342d6ddede14f3ccea\",\"urls\":[\"bzz-raw://e868b4e385f1b6ef00ffcf663c03cb3783423177e079dceda7705fd4b148b9f7\",\"dweb:/ipfs/QmPfqwJYb6dzWCiigagK5Eb2XFohyxGWPD13wEaU4jSfNn\"]},\"UQ112x112.sol\":{\"keccak256\":\"0x19ba58ac1f96e04e6fe2a439cceda67dee4bd35c309cddcb0852244c0022f72d\",\"urls\":[\"bzz-raw://d9f4fbf84f52e2e90916d605ce3de92fbca84aa3731955dfb591b2e989b98042\",\"dweb:/ipfs/QmYHxsNoPmVdwFbZbiWE35HDqYrQmxnhHqoVC93XeKdAqK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 621,
								"contract": "PancakePair.sol:PancakePair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 625,
								"contract": "PancakePair.sol:PancakePair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 631,
								"contract": "PancakePair.sol:PancakePair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 633,
								"contract": "PancakePair.sol:PancakePair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 640,
								"contract": "PancakePair.sol:PancakePair",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1021,
								"contract": "PancakePair.sol:PancakePair",
								"label": "factory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1023,
								"contract": "PancakePair.sol:PancakePair",
								"label": "token0",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1025,
								"contract": "PancakePair.sol:PancakePair",
								"label": "token1",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1027,
								"contract": "PancakePair.sol:PancakePair",
								"label": "reserve0",
								"offset": 0,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 1029,
								"contract": "PancakePair.sol:PancakePair",
								"label": "reserve1",
								"offset": 14,
								"slot": "8",
								"type": "t_uint112"
							},
							{
								"astId": 1031,
								"contract": "PancakePair.sol:PancakePair",
								"label": "blockTimestampLast",
								"offset": 28,
								"slot": "8",
								"type": "t_uint32"
							},
							{
								"astId": 1033,
								"contract": "PancakePair.sol:PancakePair",
								"label": "price0CumulativeLast",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1035,
								"contract": "PancakePair.sol:PancakePair",
								"label": "price1CumulativeLast",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1037,
								"contract": "PancakePair.sol:PancakePair",
								"label": "kLast",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1040,
								"contract": "PancakePair.sol:PancakePair",
								"label": "unlocked",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":175:632  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":175:632  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582003b8b9e48d9e947559e4686adaffd88850e5fb6bf3d8d6d5a0a592cfa04a356864736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582003b8b9e48d9e947559e4686adaffd88850e5fb6bf3d8d6d5a0a592cfa04a356864736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SUB 0xB8 0xB9 0xE4 DUP14 SWAP15 SWAP5 PUSH22 0x59E4686ADAFFD88850E5FB6BF3D8D6D5A0A592CFA04A CALLDATALOAD PUSH9 0x64736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "175:457:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582003b8b9e48d9e947559e4686adaffd88850e5fb6bf3d8d6d5a0a592cfa04a356864736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SUB 0xB8 0xB9 0xE4 DUP14 SWAP15 SWAP5 PUSH22 0x59E4686ADAFFD88850E5FB6BF3D8D6D5A0A592CFA04A CALLDATALOAD PUSH9 0x64736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "175:457:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582003b8b9e48d9e947559e4686adaffd88850e5fb6bf3d8d6d5a0a592cfa04a356864736f6c63430005100032",
									".code": [
										{
											"begin": 175,
											"end": 632,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "ADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0xc182f29fa8b894424cf4fc5d582c22e20e9f42cca618e4342d6ddede14f3ccea\",\"urls\":[\"bzz-raw://e868b4e385f1b6ef00ffcf663c03cb3783423177e079dceda7705fd4b148b9f7\",\"dweb:/ipfs/QmPfqwJYb6dzWCiigagK5Eb2XFohyxGWPD13wEaU4jSfNn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"UQ112x112.sol": {
				"UQ112x112": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"UQ112x112.sol\":219:613  library UQ112x112 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"UQ112x112.sol\":219:613  library UQ112x112 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582007d6a35a2c4729aa8f7160094f8c08d421e9cee46b079b131fb5b2ac4827de9064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582007d6a35a2c4729aa8f7160094f8c08d421e9cee46b079b131fb5b2ac4827de9064736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SMOD 0xD6 LOG3 GAS 0x2C SELFBALANCE 0x29 0xAA DUP16 PUSH18 0x60094F8C08D421E9CEE46B079B131FB5B2AC 0x48 0x27 0xDE SWAP1 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "219:394:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582007d6a35a2c4729aa8f7160094f8c08d421e9cee46b079b131fb5b2ac4827de9064736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SMOD 0xD6 LOG3 GAS 0x2C SELFBALANCE 0x29 0xAA DUP16 PUSH18 0x60094F8C08D421E9CEE46B079B131FB5B2AC 0x48 0x27 0xDE SWAP1 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "219:394:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"encode(uint112)": "infinite",
								"uqdiv(uint224,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582007d6a35a2c4729aa8f7160094f8c08d421e9cee46b079b131fb5b2ac4827de9064736f6c63430005100032",
									".code": [
										{
											"begin": 219,
											"end": 613,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "ADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "EQ"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"UQ112x112.sol\":{\"keccak256\":\"0x19ba58ac1f96e04e6fe2a439cceda67dee4bd35c309cddcb0852244c0022f72d\",\"urls\":[\"bzz-raw://d9f4fbf84f52e2e90916d605ce3de92fbca84aa3731955dfb591b2e989b98042\",\"dweb:/ipfs/QmYHxsNoPmVdwFbZbiWE35HDqYrQmxnhHqoVC93XeKdAqK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							83
						]
					},
					"id": 84,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 83,
							"linearizedBaseContracts": [
								83
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "100:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "123:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:63:0"
									},
									"src": "85:78:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "183:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "205:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "225:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "182:57:0"
									},
									"src": "168:72:0"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "285:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 19,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "285:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:15:0"
									},
									"scope": 83,
									"src": "246:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "347:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "346:15:0"
									},
									"scope": 83,
									"src": "306:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "411:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 29,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "411:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:7:0"
									},
									"scope": 83,
									"src": "368:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:9:0"
									},
									"scope": 83,
									"src": "424:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "504:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "503:15:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "542:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "541:9:0"
									},
									"scope": 83,
									"src": "485:66:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "576:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "575:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "631:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "630:9:0"
									},
									"scope": 83,
									"src": "557:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "663:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "680:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:32:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "713:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "712:6:0"
									},
									"scope": 83,
									"src": "646:73:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "743:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "755:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "742:27:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:6:0"
									},
									"scope": 83,
									"src": "725:69:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "853:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:71:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "911:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "911:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:6:0"
									},
									"scope": 83,
									"src": "800:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 84,
							"src": "62:857:0"
						}
					],
					"src": "36:883:0"
				},
				"id": 0
			},
			"IPancakeCallee.sol": {
				"ast": {
					"absolutePath": "IPancakeCallee.sol",
					"exportedSymbols": {
						"IPancakeCallee": [
							97
						]
					},
					"id": 98,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 85,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "IPancakeCallee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pancakeCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "123:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "147:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "172:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "197:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "197:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "113:109:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:0:1"
									},
									"scope": 97,
									"src": "93:139:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 98,
							"src": "62:172:1"
						}
					],
					"src": "36:198:1"
				},
				"id": 1
			},
			"IPancakeERC20.sol": {
				"ast": {
					"absolutePath": "IPancakeERC20.sol",
					"exportedSymbols": {
						"IPancakeERC20": [
							215
						]
					},
					"id": 216,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 99,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "IPancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 107,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "107:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "130:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "155:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:63:2"
									},
									"src": "92:78:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 115,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "190:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "212:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "232:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:57:2"
									},
									"src": "175:72:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:2:2"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "292:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "292:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "291:15:2"
									},
									"scope": 215,
									"src": "253:54:2",
									"stateMutability": "pure",
									"superFunction": 306,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:2"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "354:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 122,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "353:15:2"
									},
									"scope": 215,
									"src": "313:56:2",
									"stateMutability": "pure",
									"superFunction": 311,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:2"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "418:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 127,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "418:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "417:7:2"
									},
									"scope": 215,
									"src": "375:50:2",
									"stateMutability": "pure",
									"superFunction": 316,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:2"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "477:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:9:2"
									},
									"scope": 215,
									"src": "431:55:2",
									"stateMutability": "view",
									"superFunction": 321,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "511:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "510:15:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "549:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "548:9:2"
									},
									"scope": 215,
									"src": "492:66:2",
									"stateMutability": "view",
									"superFunction": 328,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "583:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "598:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "582:32:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "638:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "637:9:2"
									},
									"scope": 215,
									"src": "564:83:2",
									"stateMutability": "view",
									"superFunction": 337,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "687:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:32:2"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 215,
									"src": "653:73:2",
									"stateMutability": "nonpayable",
									"superFunction": 346,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "750:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "762:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "749:27:2"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "795:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:6:2"
									},
									"scope": 215,
									"src": "732:69:2",
									"stateMutability": "nonpayable",
									"superFunction": 355,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "838:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "860:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "880:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:71:2"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "918:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "917:6:2"
									},
									"scope": 215,
									"src": "807:117:2",
									"stateMutability": "nonpayable",
									"superFunction": 366,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:2:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "981:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "980:9:2"
									},
									"scope": 215,
									"src": "930:60:2",
									"stateMutability": "view",
									"superFunction": 371,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:9:2"
									},
									"scope": 215,
									"src": "996:59:2",
									"stateMutability": "pure",
									"superFunction": 376,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1077:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1076:15:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1115:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:9:2"
									},
									"scope": 215,
									"src": "1061:63:2",
									"stateMutability": "view",
									"superFunction": 383,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1155:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1178:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1203:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1226:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1252:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 206,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1252:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1269:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 208,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1288:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:158:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:2"
									},
									"scope": 215,
									"src": "1130:183:2",
									"stateMutability": "nonpayable",
									"superFunction": 400,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "62:1253:2"
						}
					],
					"src": "36:1279:2"
				},
				"id": 2
			},
			"IPancakeFactory.sol": {
				"ast": {
					"absolutePath": "IPancakeFactory.sol",
					"exportedSymbols": {
						"IPancakeFactory": [
							283
						]
					},
					"id": 284,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 283,
							"linearizedBaseContracts": [
								283
							],
							"name": "IPancakeFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 227,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "112:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "136:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "160:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "174:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:71:3"
									},
									"src": "94:89:3"
								},
								{
									"body": null,
									"documentation": null,
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:3"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "229:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:9:3"
									},
									"scope": 283,
									"src": "189:49:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:2:3"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "290:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "289:9:3"
									},
									"scope": 283,
									"src": "244:55:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "322:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "338:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "321:32:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "377:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "376:14:3"
									},
									"scope": 283,
									"src": "305:86:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "415:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:9:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "447:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:14:3"
									},
									"scope": 283,
									"src": "397:64:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:3"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "516:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "515:9:3"
									},
									"scope": 283,
									"src": "467:58:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "551:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "567:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "550:32:3"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "601:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "600:14:3"
									},
									"scope": 283,
									"src": "531:84:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "639:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:0:3"
									},
									"scope": 283,
									"src": "621:36:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "687:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "686:9:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:3"
									},
									"scope": 283,
									"src": "663:42:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "INIT_CODE_PAIR_HASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "765:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "764:9:3"
									},
									"scope": 283,
									"src": "711:63:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 284,
							"src": "62:714:3"
						}
					],
					"src": "36:740:3"
				},
				"id": 3
			},
			"IPancakePair.sol": {
				"ast": {
					"absolutePath": "IPancakePair.sol",
					"exportedSymbols": {
						"IPancakePair": [
							525
						]
					},
					"id": 526,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 525,
							"linearizedBaseContracts": [
								525
							],
							"name": "IPancakePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 293,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "106:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "129:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "154:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "105:63:4"
									},
									"src": "91:78:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 301,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "189:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "211:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "231:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "188:57:4"
									},
									"src": "174:72:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:4"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "291:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "291:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "290:15:4"
									},
									"scope": 525,
									"src": "252:54:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "353:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:15:4"
									},
									"scope": 525,
									"src": "312:56:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "417:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 313,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "417:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "416:7:4"
									},
									"scope": 525,
									"src": "374:50:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:4"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "476:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "475:9:4"
									},
									"scope": 525,
									"src": "430:55:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "510:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "509:15:4"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "548:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "547:9:4"
									},
									"scope": 525,
									"src": "491:66:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "582:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "597:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "581:32:4"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "637:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "636:9:4"
									},
									"scope": 525,
									"src": "563:83:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "669:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "686:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "668:32:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "719:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "718:6:4"
									},
									"scope": 525,
									"src": "652:73:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "749:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "761:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "748:27:4"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "794:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "794:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "793:6:4"
									},
									"scope": 525,
									"src": "731:69:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "837:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "859:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "879:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:71:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:6:4"
									},
									"scope": 525,
									"src": "806:117:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "980:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:9:4"
									},
									"scope": 525,
									"src": "929:60:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1019:2:4"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1045:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1044:9:4"
									},
									"scope": 525,
									"src": "995:59:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1076:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1075:15:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1114:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1113:9:4"
									},
									"scope": 525,
									"src": "1060:63:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1154:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1177:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1202:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1225:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1251:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 392,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1251:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1268:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1287:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 396,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1144:158:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:0:4"
									},
									"scope": 525,
									"src": "1129:183:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 408,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1329:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1353:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1370:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1328:58:4"
									},
									"src": "1318:69:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 418,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1403:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1427:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1444:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1461:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1402:78:4"
									},
									"src": "1392:89:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 432,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1506:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1538:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1565:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1592:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1620:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1648:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1496:176:4"
									},
									"src": "1486:187:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 438,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1689:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 433,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1707:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 435,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1688:36:4"
									},
									"src": "1678:47:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:2:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1783:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1782:9:4"
									},
									"scope": 525,
									"src": "1731:61:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:2:4"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "1840:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1839:9:4"
									},
									"scope": 525,
									"src": "1798:51:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:2:4"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1896:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1895:9:4"
									},
									"scope": 525,
									"src": "1855:50:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1926:2:4"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1952:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1951:9:4"
									},
									"scope": 525,
									"src": "1911:50:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2050:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 460,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2080:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 462,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2110:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 464,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2110:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2036:109:4"
									},
									"scope": 525,
									"src": "1967:179:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:4"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "2207:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2206:9:4"
									},
									"scope": 525,
									"src": "2152:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:2:4"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2277:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2276:9:4"
									},
									"scope": 525,
									"src": "2222:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2332:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2331:9:4"
									},
									"scope": 525,
									"src": "2292:49:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2361:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2360:12:4"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2391:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2390:19:4"
									},
									"scope": 525,
									"src": "2347:63:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2430:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2429:12:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2460:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "2477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2459:34:4"
									},
									"scope": 525,
									"src": "2416:78:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2523:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2551:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2579:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2599:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2599:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2513:111:4"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:4"
									},
									"scope": 525,
									"src": "2500:134:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2654:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2653:12:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2674:0:4"
									},
									"scope": 525,
									"src": "2640:35:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2694:2:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:0:4"
									},
									"scope": 525,
									"src": "2681:25:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2732:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2741:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2731:18:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:4"
									},
									"scope": 525,
									"src": "2712:47:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 526,
							"src": "62:2699:4"
						}
					],
					"src": "36:2725:4"
				},
				"id": 4
			},
			"Math.sol": {
				"ast": {
					"absolutePath": "Math.sol",
					"exportedSymbols": {
						"Math": [
							601
						]
					},
					"id": 602,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 527,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "203:34:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 536,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "213:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 537,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "217:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 538,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "217:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 541,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "229:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "217:13:5",
														"trueExpression": {
															"argumentTypes": null,
															"id": 540,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "225:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "213:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "213:17:5"
											}
										]
									},
									"documentation": null,
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "147:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "158:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "146:22:5"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "192:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:11:5"
									},
									"scope": 601,
									"src": "134:103:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "411:242:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 553,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "425:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "425:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 589,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "609:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "609:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 597,
													"nodeType": "IfStatement",
													"src": "605:42:5",
													"trueBody": {
														"id": 596,
														"nodeType": "Block",
														"src": "617:30:5",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 592,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "635:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "631:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 595,
																"nodeType": "ExpressionStatement",
																"src": "631:5:5"
															}
														]
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "421:226:5",
												"trueBody": {
													"id": 588,
													"nodeType": "Block",
													"src": "432:167:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 556,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "446:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 557,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "450:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "446:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "446:5:5"
														},
														{
															"assignments": [
																561
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 561,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 588,
																	"src": "465:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 560,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "465:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 567,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 562,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "477:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "481:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "477:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "485:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "477:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "465:21:5"
														},
														{
															"body": {
																"id": 586,
																"nodeType": "Block",
																"src": "514:75:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 571,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "532:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 572,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 561,
																				"src": "536:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "532:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 574,
																		"nodeType": "ExpressionStatement",
																		"src": "532:5:5"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 575,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 561,
																				"src": "555:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 580,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 578,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 576,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 548,
																									"src": "560:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 577,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 561,
																									"src": "564:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "560:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 579,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 561,
																								"src": "568:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "560:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 581,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "559:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 582,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "573:1:5",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "559:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "555:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 585,
																		"nodeType": "ExpressionStatement",
																		"src": "555:19:5"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 568,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "507:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 569,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "511:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "507:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 587,
															"nodeType": "WhileStatement",
															"src": "500:89:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:11:5"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "400:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:11:5"
									},
									"scope": 601,
									"src": "352:301:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 602,
							"src": "115:540:5"
						}
					],
					"src": "36:619:5"
				},
				"id": 5
			},
			"PancakeERC20.sol": {
				"ast": {
					"absolutePath": "PancakeERC20.sol",
					"exportedSymbols": {
						"PancakeERC20": [
							986
						]
					},
					"id": 987,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 603,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:6"
						},
						{
							"absolutePath": "IPancakeERC20.sol",
							"file": "IPancakeERC20.sol",
							"id": 604,
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 216,
							"src": "62:27:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "SafeMath.sol",
							"id": 605,
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 2111,
							"src": "90:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 606,
										"name": "IPancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 215,
										"src": "139:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeERC20_$215",
											"typeString": "contract IPancakeERC20"
										}
									},
									"id": 607,
									"nodeType": "InheritanceSpecifier",
									"src": "139:13:6"
								}
							],
							"contractDependencies": [
								215
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 986,
							"linearizedBaseContracts": [
								986,
								215
							],
							"name": "PancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 610,
									"libraryName": {
										"contractScope": null,
										"id": 608,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2110,
										"src": "165:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2110",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "159:27:6",
									"typeName": {
										"id": 609,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "178:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 613,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "192:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 611,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "192:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "50616e63616b65204c5073",
										"id": 612,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "222:13:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e87cb5a4dc26cf9451529a20899fcee996799afd48d7c0db7c25e150b364661d",
											"typeString": "literal_string \"Pancake LPs\""
										},
										"value": "Pancake LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 616,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "241:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 614,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "241:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "43616b652d4c50",
										"id": 615,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "273:9:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d2d8c9be4057229e2281b901f5387b4a9e188ddd279c0b8a56346e366c965c6e",
											"typeString": "literal_string \"Cake-LP\""
										},
										"value": "Cake-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 619,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "288:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 617,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "288:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 618,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "321:2:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 621,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "329:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 620,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 625,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "361:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 624,
										"keyType": {
											"id": 622,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "369:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "361:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 623,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "380:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 631,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "411:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 630,
										"keyType": {
											"id": 626,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "419:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "411:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 629,
											"keyType": {
												"id": 627,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "438:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "430:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 628,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "449:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 633,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "482:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 632,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 636,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "623:108:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 634,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "623:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "665:66:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 640,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "737:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 639,
										"keyType": {
											"id": 637,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "745:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "737:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 638,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "756:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 648,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "800:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "823:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "848:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "799:63:6"
									},
									"src": "785:78:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 656,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "883:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "905:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "925:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "882:57:6"
									},
									"src": "868:72:6"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "967:426:6",
										"statements": [
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "977:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "977:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "977:15:6"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 660,
															"isOffset": false,
															"isSlot": false,
															"src": "1025:7:6",
															"valueSize": 1
														}
													}
												],
												"id": 662,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1002:51:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 663,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "1062:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1142:84:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 667,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1132:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1132:95:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 672,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 613,
																						"src": "1261:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 671,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1255:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1255:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 670,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1245:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1245:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1301:3:6",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1295:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1295:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 675,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2161,
																			"src": "1285:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1285:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 680,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "1324:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 682,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2195,
																				"src": "1357:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakeERC20_$986",
																					"typeString": "contract PancakeERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakeERC20_$986",
																					"typeString": "contract PancakeERC20"
																				}
																			],
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1349:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1349:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 665,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "1104:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1104:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1104:272:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 664,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "1081:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1081:305:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1062:324:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "1062:324:6"
											}
										]
									},
									"documentation": null,
									"id": 689,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "957:2:6"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:0:6"
									},
									"scope": 986,
									"src": "946:447:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "1450:149:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 696,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "1460:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 699,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "1490:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 697,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "1474:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "1474:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1474:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1460:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "1460:36:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 703,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "1506:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 705,
														"indexExpression": {
															"argumentTypes": null,
															"id": 704,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "1516:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1506:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 710,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "1540:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 706,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "1522:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 708,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 707,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "1532:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1522:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "1522:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1522:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1506:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1506:40:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1578:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1570:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1570:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 718,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "1582:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 719,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "1586:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 714,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656
														],
														"referencedDeclaration": 656,
														"src": "1561:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1561:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "EmitStatement",
												"src": "1556:36:6"
											}
										]
									},
									"documentation": null,
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1414:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1426:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1413:27:6"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1450:0:6"
									},
									"scope": 986,
									"src": "1399:200:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "1658:155:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 730,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "1668:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 732,
														"indexExpression": {
															"argumentTypes": null,
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "1678:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1668:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 737,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "1706:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 733,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "1686:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 735,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "1696:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1686:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "1686:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1686:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1668:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "1668:44:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 741,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "1722:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 744,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "1752:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 742,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "1736:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "1736:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1736:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1722:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "1722:36:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 749,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "1782:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1796:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1788:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1788:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 753,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1800:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656
														],
														"referencedDeclaration": 656,
														"src": "1773:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "EmitStatement",
												"src": "1768:38:6"
											}
										]
									},
									"documentation": null,
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1620:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1634:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1619:29:6"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1658:0:6"
									},
									"scope": 986,
									"src": "1605:208:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "1922:96:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 766,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "1932:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 769,
															"indexExpression": {
																"argumentTypes": null,
																"id": 767,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "1942:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1932:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 770,
														"indexExpression": {
															"argumentTypes": null,
															"id": 768,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "1949:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1932:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 771,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "1960:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1932:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "1932:33:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 775,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1989:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 776,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "1996:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 777,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "2005:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															648
														],
														"referencedDeclaration": 648,
														"src": "1980:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "EmitStatement",
												"src": "1975:36:6"
											}
										]
									},
									"documentation": null,
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1846:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1869:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "1894:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1836:77:6"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:0:6"
									},
									"scope": 986,
									"src": "1819:199:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "2122:151:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 790,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "2132:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 792,
														"indexExpression": {
															"argumentTypes": null,
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2142:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2132:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 797,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "2170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 793,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "2150:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 795,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 794,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "2160:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2150:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "2150:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2150:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2132:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2132:44:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 801,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "2186:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 803,
														"indexExpression": {
															"argumentTypes": null,
															"id": 802,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2196:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2186:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 808,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "2220:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 804,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "2202:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 805,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "2212:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2202:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2059,
															"src": "2202:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2202:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2186:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "2186:40:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 813,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "2250:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 814,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2256:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "2260:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															656
														],
														"referencedDeclaration": 656,
														"src": "2241:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2241:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "EmitStatement",
												"src": "2236:30:6"
											}
										]
									},
									"documentation": null,
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2052:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2074:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2094:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2042:71:6"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2122:0:6"
									},
									"scope": 986,
									"src": "2024:249:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2352:74:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 829,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2371:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2371:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 831,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2383:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 832,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "2392:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 828,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "2362:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "2362:36:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2415:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 827,
												"id": 836,
												"nodeType": "Return",
												"src": "2408:11:6"
											}
										]
									},
									"documentation": null,
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2296:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2296:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2313:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2295:32:6"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2346:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2346:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2345:6:6"
									},
									"scope": 986,
									"src": "2279:147:6",
									"stateMutability": "nonpayable",
									"superFunction": 160,
									"visibility": "external"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "2501:70:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 848,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2521:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2521:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "2533:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 851,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "2537:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 847,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "2511:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2511:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "2511:32:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2560:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 846,
												"id": 855,
												"nodeType": "Return",
												"src": "2553:11:6"
											}
										]
									},
									"documentation": null,
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2450:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2462:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2449:27:6"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2495:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 844,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2495:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2494:6:6"
									},
									"scope": 986,
									"src": "2432:139:6",
									"stateMutability": "nonpayable",
									"superFunction": 169,
									"visibility": "external"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2694:214:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 868,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "2708:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 870,
															"indexExpression": {
																"argumentTypes": null,
																"id": 869,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "2718:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2708:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 873,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 871,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "2724:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2724:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2708:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2747:2:6",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2748:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2739:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2739:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2708:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 897,
												"nodeType": "IfStatement",
												"src": "2704:141:6",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "2752:93:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 879,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "2766:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 883,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 880,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "2776:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2766:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 884,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 881,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "2782:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2782:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2766:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "2828:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 885,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "2796:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 887,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 886,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 859,
																					"src": "2806:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2796:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 890,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 888,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "2812:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2812:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2796:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "2796:31:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2796:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2766:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 895,
															"nodeType": "ExpressionStatement",
															"src": "2766:68:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 899,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "2864:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "2870:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 901,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2874:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "2854:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "2854:26:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2897:4:6",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 867,
												"id": 905,
												"nodeType": "Return",
												"src": "2890:11:6"
											}
										]
									},
									"documentation": null,
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2608:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2630:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2650:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2598:71:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2688:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2688:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2687:6:6"
									},
									"scope": 986,
									"src": "2577:331:6",
									"stateMutability": "nonpayable",
									"superFunction": 180,
									"visibility": "external"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "3097:543:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 925,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3115:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 926,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "3127:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3127:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3115:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a2045585049524544",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3144:18:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															},
															"value": "Pancake: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "3107:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3107:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "3107:56:6"
											},
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "3173:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 932,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3173:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3247:10:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 938,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "3275:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 942,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "3330:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 943,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 909,
																					"src": "3347:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 944,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "3354:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 945,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 913,
																					"src": "3363:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 949,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3370:15:6",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 946,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 640,
																							"src": "3370:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 948,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 947,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 909,
																							"src": "3377:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3370:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 950,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 915,
																					"src": "3387:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 940,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "3319:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3319:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3319:77:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 939,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2161,
																		"src": "3309:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3309:88:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "3213:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3213:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3213:198:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 934,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "3190:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3190:231:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3173:248:6"
											},
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "3431:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 956,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3431:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 959,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "3468:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 960,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "3476:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 961,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3479:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 962,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "3482:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 958,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3458:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3458:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3431:53:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 966,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "3502:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3530:1:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3522:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3522:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3502:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 971,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "3536:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 972,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "3556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3536:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3502:59:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e56414c49445f5349474e4154555245",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3563:28:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															},
															"value": "Pancake: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "3494:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3494:98:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "3494:98:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 979,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "3611:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 980,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "3618:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3627:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "3602:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3602:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "3602:31:6"
											}
										]
									},
									"documentation": null,
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2962:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2962:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2987:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3010:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3036:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 916,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3036:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3053:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 918,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3053:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3072:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2929:158:6"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3097:0:6"
									},
									"scope": 986,
									"src": "2914:726:6",
									"stateMutability": "nonpayable",
									"superFunction": 214,
									"visibility": "external"
								}
							],
							"scope": 987,
							"src": "114:3528:6"
						}
					],
					"src": "36:3606:6"
				},
				"id": 6
			},
			"PancakePair.sol": {
				"ast": {
					"absolutePath": "PancakePair.sol",
					"exportedSymbols": {
						"PancakePair": [
							2035
						]
					},
					"id": 2036,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 988,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:7"
						},
						{
							"absolutePath": "IPancakePair.sol",
							"file": "./IPancakePair.sol",
							"id": 989,
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 526,
							"src": "62:28:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "PancakeERC20.sol",
							"file": "./PancakeERC20.sol",
							"id": 990,
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 987,
							"src": "91:28:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Math.sol",
							"file": "./Math.sol",
							"id": 991,
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 602,
							"src": "120:20:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "UQ112x112.sol",
							"file": "./UQ112x112.sol",
							"id": 992,
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 2153,
							"src": "141:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 993,
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 84,
							"src": "167:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IPancakeFactory.sol",
							"file": "./IPancakeFactory.sol",
							"id": 994,
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 284,
							"src": "190:31:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IPancakeCallee.sol",
							"file": "./IPancakeCallee.sol",
							"id": 995,
							"nodeType": "ImportDirective",
							"scope": 2036,
							"sourceUnit": 98,
							"src": "222:30:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 996,
										"name": "IPancakePair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 525,
										"src": "278:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakePair_$525",
											"typeString": "contract IPancakePair"
										}
									},
									"id": 997,
									"nodeType": "InheritanceSpecifier",
									"src": "278:12:7"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 998,
										"name": "PancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 986,
										"src": "292:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PancakeERC20_$986",
											"typeString": "contract PancakeERC20"
										}
									},
									"id": 999,
									"nodeType": "InheritanceSpecifier",
									"src": "292:12:7"
								}
							],
							"contractDependencies": [
								215,
								525,
								986
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035,
								986,
								215,
								525
							],
							"name": "PancakePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1002,
									"libraryName": {
										"contractScope": null,
										"id": 1000,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2110,
										"src": "317:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2110",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "311:25:7",
									"typeName": {
										"id": 1001,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "331:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1005,
									"libraryName": {
										"contractScope": null,
										"id": 1003,
										"name": "UQ112x112",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2152,
										"src": "347:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UQ112x112_$2152",
											"typeString": "library UQ112x112"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "341:28:7",
									"typeName": {
										"id": 1004,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									}
								},
								{
									"constant": true,
									"id": 1010,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "375:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1006,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "375:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 1009,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 1007,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "416:2:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 1008,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "420:1:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "416:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1019,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "427:88:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1011,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "427:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "485:27:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "479:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "479:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 1013,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2161,
													"src": "469:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 1017,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "469:45:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 1012,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "462:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 1018,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "462:53:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1021,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "522:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1020,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1023,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "550:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1022,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "550:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1025,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "577:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1024,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "577:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1027,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "605:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 1026,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1029,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "701:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 1028,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1031,
									"name": "blockTimestampLast",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "797:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 1030,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "797:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1033,
									"name": "price0CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "894:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1032,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "894:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1035,
									"name": "price1CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "932:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1034,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "932:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1037,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "970:17:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "970:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1040,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 2035,
									"src": "1074:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1038,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1074:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1039,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1098:1:7",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1121:113:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1043,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1139:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1151:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1139:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204c4f434b4544",
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1154:17:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															},
															"value": "Pancake: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "1131:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1131:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1131:41:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1049,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1182:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1193:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1182:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1182:12:7"
											},
											{
												"id": 1053,
												"nodeType": "PlaceholderStatement",
												"src": "1204:1:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1054,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1215:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1226:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1215:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1215:12:7"
											}
										]
									},
									"documentation": null,
									"id": 1059,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1118:2:7"
									},
									"src": "1105:129:7",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "1350:117:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1068,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "1360:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1069,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "1372:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1360:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "1360:20:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1072,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1390:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1073,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1402:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1390:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "1390:20:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1076,
														"name": "_blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "1420:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1077,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1442:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1420:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1420:40:7"
											}
										]
									},
									"documentation": null,
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1260:2:7"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "1284:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1061,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "1303:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1063,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"name": "_blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "1322:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1065,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1322:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1283:66:7"
									},
									"scope": 2035,
									"src": "1240:227:7",
									"stateMutability": "view",
									"superFunction": 467,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "1543:212:7",
										"statements": [
											{
												"assignments": [
													1091,
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "1554:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1090,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1554:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1093,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "1568:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1092,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1568:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1103,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1098,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1623:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1099,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "1633:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1100,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "1637:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1096,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "1600:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1600:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1600:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1094,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "1589:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1589:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1553:91:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1105,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "1662:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1106,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "1674:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1674:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1689:1:7",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1674:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1112,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "1705:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 1113,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1712:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 1114,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1711:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1110,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "1694:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1694:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1694:24:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1674:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1117,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1673:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1662:57:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a205452414e534645525f4641494c4544",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1721:26:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															},
															"value": "Pancake: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															}
														],
														"id": 1104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "1654:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:94:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "1654:94:7"
											}
										]
									},
									"documentation": null,
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1511:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1523:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1523:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1495:39:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1543:0:7"
									},
									"scope": 2035,
									"src": "1473:282:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1131,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1772:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1796:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1796:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1810:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1810:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1771:52:7"
									},
									"src": "1761:63:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1141,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1840:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1864:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1878:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1878:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1892:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1839:72:7"
									},
									"src": "1829:83:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1155,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1937:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1969:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1969:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "1993:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1993:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2017:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2017:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2042:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2067:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1927:164:7"
									},
									"src": "1917:175:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1161,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2108:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1156,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2126:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1158,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2107:36:7"
									},
									"src": "2097:47:7"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "2171:37:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1164,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "2181:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1165,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2191:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2191:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2181:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "2181:20:7"
											}
										]
									},
									"documentation": null,
									"id": 1170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:2:7"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:0:7"
									},
									"scope": 2035,
									"src": "2150:58:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "2333:141:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1178,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "2351:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2351:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1180,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "2365:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2351:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20464f5242494444454e",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2374:20:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															},
															"value": "Pancake: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															}
														],
														"id": 1177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "2343:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "2343:52:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1185,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "2425:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1186,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "2434:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2425:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "2425:16:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1189,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2451:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1190,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "2460:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2451:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "2451:16:7"
											}
										]
									},
									"documentation": null,
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2290:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2307:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2289:34:7"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:7"
									},
									"scope": 2035,
									"src": "2270:204:7",
									"stateMutability": "nonpayable",
									"superFunction": 524,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "2649:752:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1206,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "2667:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2687:2:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2688:1:7",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2679:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2679:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2667:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1212,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "2694:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2714:2:7",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2715:1:7",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2706:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2706:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "2694:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2667:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204f564552464c4f57",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2719:19:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															},
															"value": "Pancake: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "2659:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2659:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "2659:80:7"
											},
											{
												"assignments": [
													1223
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"name": "blockTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "2749:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1222,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2749:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1225,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "2780:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2780:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2798:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2801:2:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2798:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "2780:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2773:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2773:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2749:55:7"
											},
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "2814:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1233,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "2814:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1235,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "2835:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1236,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "2852:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2835:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2814:56:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1239,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "2907:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2921:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2907:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1242,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "2926:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2939:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2926:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2907:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1246,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "2944:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2957:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2944:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2907:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1279,
												"nodeType": "IfStatement",
												"src": "2903:332:7",
												"trueBody": {
													"id": 1278,
													"nodeType": "Block",
													"src": "2960:275:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1250,
																	"name": "price0CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "3034:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1257,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1200,
																						"src": "3097:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1254,
																								"name": "_reserve1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1202,
																								"src": "3080:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1252,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2152,
																								"src": "3063:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2152_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 1253,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2133,
																							"src": "3063:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 1255,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3063:27:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "3063:33:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3063:44:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3058:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3058:50:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1260,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "3111:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3058:64:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3034:88:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "3034:88:7"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1264,
																	"name": "price1CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "3136:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1271,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1202,
																						"src": "3199:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1268,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1200,
																								"src": "3182:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1266,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2152,
																								"src": "3165:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2152_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 1267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2133,
																							"src": "3165:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 1269,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3165:27:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 1270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2151,
																					"src": "3165:33:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3165:44:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3160:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3160:50:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1274,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "3213:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3160:64:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3136:88:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1277,
															"nodeType": "ExpressionStatement",
															"src": "3136:88:7"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1280,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3244:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1282,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "3263:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3255:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3255:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3244:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "3244:28:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1286,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "3282:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1288,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "3301:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3293:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3293:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3282:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "3282:28:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1292,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "3320:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1293,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "3341:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3320:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "3320:35:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1297,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3375:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1298,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3385:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1296,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1161
														],
														"referencedDeclaration": 1161,
														"src": "3370:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3370:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "EmitStatement",
												"src": "3365:29:7"
											}
										]
									},
									"documentation": null,
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "2573:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2573:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "2588:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2588:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "2603:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1199,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "2622:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1201,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2572:68:7"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2649:0:7"
									},
									"scope": 2035,
									"src": "2556:845:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "3572:747:7",
										"statements": [
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "3582:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3582:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1314,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "3614:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1313,
																"name": "IPancakeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "3598:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$283_$",
																	"typeString": "type(contract IPancakeFactory)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3598:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeFactory_$283",
																"typeString": "contract IPancakeFactory"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 232,
														"src": "3598:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3598:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3582:48:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1319,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "3640:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1320,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "3648:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3665:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3657:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3657:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "3648:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3640:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "3640:27:7"
											},
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "3677:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3677:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"argumentTypes": null,
													"id": 1329,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1037,
													"src": "3691:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3677:19:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1331,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1309,
													"src": "3725:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1403,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "4266:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4276:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4266:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1411,
													"nodeType": "IfStatement",
													"src": "4262:51:7",
													"trueBody": {
														"id": 1410,
														"nodeType": "Block",
														"src": "4279:34:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1406,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "4293:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4301:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4293:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1409,
																"nodeType": "ExpressionStatement",
																"src": "4293:9:7"
															}
														]
													}
												},
												"id": 1412,
												"nodeType": "IfStatement",
												"src": "3721:592:7",
												"trueBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "3732:524:7",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1332,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "3750:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3760:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3750:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1401,
															"nodeType": "IfStatement",
															"src": "3746:500:7",
															"trueBody": {
																"id": 1400,
																"nodeType": "Block",
																"src": "3763:483:7",
																"statements": [
																	{
																		"assignments": [
																			1336
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1336,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 1400,
																				"src": "3781:10:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1335,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3781:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1346,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1343,
																							"name": "_reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1306,
																							"src": "3824:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1340,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1304,
																									"src": "3809:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 1339,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3804:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 1341,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3804:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1342,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2109,
																						"src": "3804:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1344,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3804:30:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1337,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "3794:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$601_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 600,
																				"src": "3794:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3794:41:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3781:54:7"
																	},
																	{
																		"assignments": [
																			1348
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1348,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 1400,
																				"src": "3853:14:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1347,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3853:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1353,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1351,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1328,
																					"src": "3880:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1349,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "3870:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$601_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 600,
																				"src": "3870:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3870:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3853:34:7"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1354,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1336,
																				"src": "3909:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1355,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1348,
																				"src": "3917:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3909:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1399,
																		"nodeType": "IfStatement",
																		"src": "3905:327:7",
																		"trueBody": {
																			"id": 1398,
																			"nodeType": "Block",
																			"src": "3928:304:7",
																			"statements": [
																				{
																					"assignments": [
																						1358
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1358,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1398,
																							"src": "3950:14:7",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1357,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "3950:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1369,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "38",
																								"id": 1367,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4009:1:7",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1363,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1348,
																												"src": "3993:9:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 1361,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1336,
																												"src": "3983:5:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1362,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2081,
																											"src": "3983:9:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1364,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "3983:20:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1359,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 621,
																										"src": "3967:11:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1360,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "3967:15:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1365,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3967:37:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1366,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2109,
																							"src": "3967:41:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1368,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3967:44:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3950:61:7"
																				},
																				{
																					"assignments": [
																						1371
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1371,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 1398,
																							"src": "4033:16:7",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1370,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4033:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1382,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "38",
																										"id": 1379,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4084:1:7",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										},
																										"value": "8"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1377,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1348,
																										"src": "4070:9:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1378,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4070:13:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1380,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4070:16:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "3137",
																										"id": 1374,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4062:2:7",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										},
																										"value": "17"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1372,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1336,
																										"src": "4052:5:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1373,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2109,
																									"src": "4052:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1375,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4052:13:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1376,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2059,
																							"src": "4052:17:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1381,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4052:35:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4033:54:7"
																				},
																				{
																					"assignments": [
																						1384
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1384,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 1398,
																							"src": "4109:14:7",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1383,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4109:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1388,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1387,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1385,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1358,
																							"src": "4126:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1386,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1371,
																							"src": "4138:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4126:23:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4109:40:7"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1391,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1389,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1384,
																							"src": "4175:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1390,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4187:1:7",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "4175:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1397,
																					"nodeType": "IfStatement",
																					"src": "4171:42:7",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1393,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1312,
																									"src": "4196:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 1394,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1384,
																									"src": "4203:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1392,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 723,
																								"src": "4190:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 1395,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4190:23:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 1396,
																						"nodeType": "ExpressionStatement",
																						"src": "4190:23:7"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3505:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1303,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3524:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1305,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3504:38:7"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "3560:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3560:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3559:12:7"
									},
									"scope": 2035,
									"src": "3487:832:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "4493:1152:7",
										"statements": [
											{
												"assignments": [
													1424,
													1426,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4504:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1423,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4504:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1426,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4523:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1425,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "4523:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1429,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1427,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "4545:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4545:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4503:55:7"
											},
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4583:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1430,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4583:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1437,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4632:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4624:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4624:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1433,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "4606:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1432,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "4599:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4599:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$83",
																"typeString": "contract IERC20"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4599:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4599:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4583:55:7"
											},
											{
												"assignments": [
													1442
												],
												"declarations": [
													{
														"constant": false,
														"id": 1442,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4648:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1441,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4648:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1448,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4697:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4689:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4689:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1444,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "4671:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1443,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "4664:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4664:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$83",
																"typeString": "contract IERC20"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4664:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4664:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4648:55:7"
											},
											{
												"assignments": [
													1453
												],
												"declarations": [
													{
														"constant": false,
														"id": 1453,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4713:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1452,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4713:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1456,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4741:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1454,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "4728:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "4728:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4728:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4713:38:7"
											},
											{
												"assignments": [
													1460
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4761:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1459,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4761:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1463,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "4789:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1461,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "4776:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2081,
														"src": "4776:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4776:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4761:38:7"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4810:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1466,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4810:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1469,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "4832:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1470,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "4843:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1468,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "4823:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4810:43:7"
											},
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "4863:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1473,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4863:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"argumentTypes": null,
													"id": 1475,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 621,
													"src": "4883:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4863:31:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1477,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "4986:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5002:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4986:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1519,
													"nodeType": "Block",
													"src": "5206:123:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1501,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "5220:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1506,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "5253:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1504,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1453,
																						"src": "5241:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "5241:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5241:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1508,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "5269:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5241:37:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1512,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "5292:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1510,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1460,
																						"src": "5280:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1511,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "5280:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5280:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1514,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1426,
																				"src": "5308:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5280:37:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1502,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "5232:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$601_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 546,
																		"src": "5232:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5232:86:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5220:98:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1518,
															"nodeType": "ExpressionStatement",
															"src": "5220:98:7"
														}
													]
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "4982:347:7",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "5005:195:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1480,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "5019:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1489,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1010,
																			"src": "5067:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1485,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1460,
																							"src": "5053:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1483,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1453,
																							"src": "5041:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2109,
																						"src": "5041:11:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5041:20:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1481,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "5031:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$601_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 600,
																				"src": "5031:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5031:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "5031:35:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5031:54:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5019:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1492,
															"nodeType": "ExpressionStatement",
															"src": "5019:66:7"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5112:1:7",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5104:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5104:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1497,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "5116:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1493,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "5098:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5098:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1499,
															"nodeType": "ExpressionStatement",
															"src": "5098:36:7"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1522,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "5346:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5358:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5346:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5361:40:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "5338:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5338:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "5338:64:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1529,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "5418:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1530,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "5422:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1528,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "5412:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5412:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "5412:20:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1534,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "5451:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1535,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "5461:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1536,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "5471:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1537,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "5482:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1533,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "5443:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5443:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "5443:49:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1540,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1467,
													"src": "5506:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "5502:47:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1541,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5513:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1546,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5540:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1543,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1027,
																			"src": "5526:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5521:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5521:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "5521:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5521:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5513:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ExpressionStatement",
													"src": "5513:36:7"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1552,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "5609:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5609:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1554,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "5621:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1555,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "5630:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1551,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1131
														],
														"referencedDeclaration": 1131,
														"src": "5604:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5604:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "EmitStatement",
												"src": "5599:39:7"
											}
										]
									},
									"documentation": null,
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1419,
											"modifierName": {
												"argumentTypes": null,
												"id": 1418,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1059,
												"src": "4463:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4463:4:7"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "4442:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4441:12:7"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "4477:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4477:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4476:16:7"
									},
									"scope": 2035,
									"src": "4428:1217:7",
									"stateMutability": "nonpayable",
									"superFunction": 489,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "5831:1365:7",
										"statements": [
											{
												"assignments": [
													1571,
													1573,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "5842:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1570,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5842:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1573,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "5861:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1572,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5861:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1576,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1574,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "5883:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5883:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5841:55:7"
											},
											{
												"assignments": [
													1578
												],
												"declarations": [
													{
														"constant": false,
														"id": 1578,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "5921:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5921:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"argumentTypes": null,
													"id": 1579,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1023,
													"src": "5939:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5921:24:7"
											},
											{
												"assignments": [
													1582
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "6001:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1581,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6001:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1584,
												"initialValue": {
													"argumentTypes": null,
													"id": 1583,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1025,
													"src": "6019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6001:24:7"
											},
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "6081:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1585,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6081:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1592,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6131:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6123:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6123:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1588,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "6104:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1587,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "6097:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6097:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$83",
																"typeString": "contract IERC20"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "6097:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6097:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6081:56:7"
											},
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "6147:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1596,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6147:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1603,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6197:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6189:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6189:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1599,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "6170:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1598,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "6163:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6163:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$83",
																"typeString": "contract IERC20"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "6163:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6163:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6147:56:7"
											},
											{
												"assignments": [
													1608
												],
												"declarations": [
													{
														"constant": false,
														"id": 1608,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "6213:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1607,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6213:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1614,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1609,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "6230:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1613,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1611,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "6248:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PancakePair_$2035",
																	"typeString": "contract PancakePair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_PancakePair_$2035",
																	"typeString": "contract PancakePair"
																}
															],
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6240:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6240:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6230:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6213:41:7"
											},
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "6265:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6265:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1618,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "6287:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1619,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "6298:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1617,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "6278:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6265:43:7"
											},
											{
												"assignments": [
													1623
												],
												"declarations": [
													{
														"constant": false,
														"id": 1623,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "6318:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1622,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6318:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"argumentTypes": null,
													"id": 1624,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 621,
													"src": "6338:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6318:31:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1626,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "6437:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1629,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "6461:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1627,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "6447:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "6447:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6447:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1631,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "6473:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6447:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6437:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1634,
												"nodeType": "ExpressionStatement",
												"src": "6437:48:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1635,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "6543:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1638,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "6567:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1636,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "6553:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "6553:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6553:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1640,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "6579:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6553:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6543:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "6543:48:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1645,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "6657:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6667:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6657:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1648,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "6672:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6682:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6672:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6657:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6685:40:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "6649:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6649:77:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "6649:77:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1657,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "6750:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$2035",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6742:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6742:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1659,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "6757:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1655,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "6736:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6736:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "6736:31:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1663,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "6791:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1664,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6800:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1665,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "6804:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1662,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "6777:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6777:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "6777:35:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1669,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "6836:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1670,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6845:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1671,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "6849:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1668,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "6822:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6822:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "6822:35:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1674,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "6867:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1680,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "6912:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PancakePair_$2035",
																			"typeString": "contract PancakePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PancakePair_$2035",
																			"typeString": "contract PancakePair"
																		}
																	],
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6904:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6904:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1676,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "6885:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1675,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "6878:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6878:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$83",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "6878:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6878:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6867:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "6867:51:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1685,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "6928:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1691,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "6973:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PancakePair_$2035",
																			"typeString": "contract PancakePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PancakePair_$2035",
																			"typeString": "contract PancakePair"
																		}
																	],
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6965:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6965:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1687,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "6946:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1686,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "6939:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6939:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$83",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "6939:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6939:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6928:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "6928:51:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1697,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "6998:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1698,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "7008:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1699,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "7018:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1700,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "7029:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1696,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "6990:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6990:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "6990:49:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1703,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1616,
													"src": "7053:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1713,
												"nodeType": "IfStatement",
												"src": "7049:47:7",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1704,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "7060:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1709,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "7087:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1706,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1027,
																			"src": "7073:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7068:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7068:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2109,
																"src": "7068:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7068:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7060:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1712,
													"nodeType": "ExpressionStatement",
													"src": "7060:36:7"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1715,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "7156:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7156:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1717,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "7168:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1718,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "7177:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1719,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "7186:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1714,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1141
														],
														"referencedDeclaration": 1141,
														"src": "7151:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7151:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1721,
												"nodeType": "EmitStatement",
												"src": "7146:43:7"
											}
										]
									},
									"documentation": null,
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1564,
											"modifierName": {
												"argumentTypes": null,
												"id": 1563,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1059,
												"src": "5789:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5789:4:7"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5768:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5767:12:7"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5803:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5803:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5817:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5817:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:28:7"
									},
									"scope": 2035,
									"src": "5754:1442:7",
									"stateMutability": "nonpayable",
									"superFunction": 498,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "7400:1761:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1737,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "7418:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7431:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7418:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1740,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "7436:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7449:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7436:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7418:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7452:37:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "7410:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7410:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "7410:80:7"
											},
											{
												"assignments": [
													1748,
													1750,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "7501:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1747,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7501:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1750,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "7520:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1749,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7520:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1753,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1751,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "7542:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7542:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7500:55:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1755,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "7588:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1756,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "7601:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "7588:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1758,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "7614:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1759,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "7627:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "7614:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7588:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c4951554944495459",
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7638:33:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "7580:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7580:92:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "7580:92:7"
											},
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "7683:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1765,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7683:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1767,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7683:13:7"
											},
											{
												"assignments": [
													1769
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "7706:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1768,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7706:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1770,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7706:13:7"
											},
											{
												"id": 1848,
												"nodeType": "Block",
												"src": "7729:635:7",
												"statements": [
													{
														"assignments": [
															1772
														],
														"declarations": [
															{
																"constant": false,
																"id": 1772,
																"name": "_token0",
																"nodeType": "VariableDeclaration",
																"scope": 1848,
																"src": "7794:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7794:7:7",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1774,
														"initialValue": {
															"argumentTypes": null,
															"id": 1773,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "7812:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7794:24:7"
													},
													{
														"assignments": [
															1776
														],
														"declarations": [
															{
																"constant": false,
																"id": 1776,
																"name": "_token1",
																"nodeType": "VariableDeclaration",
																"scope": 1848,
																"src": "7828:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1775,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7828:7:7",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1778,
														"initialValue": {
															"argumentTypes": null,
															"id": 1777,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "7846:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7828:24:7"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1780,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "7870:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1781,
																			"name": "_token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "7876:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7870:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1783,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "7887:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1784,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1776,
																			"src": "7893:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7887:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7870:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a20494e56414c49445f544f",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7902:21:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	},
																	"value": "Pancake: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	}
																],
																"id": 1779,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2170,
																	2171
																],
																"referencedDeclaration": 2171,
																"src": "7862:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7862:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1789,
														"nodeType": "ExpressionStatement",
														"src": "7862:62:7"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1790,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "7938:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7951:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7938:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1799,
														"nodeType": "IfStatement",
														"src": "7934:58:7",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1794,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1772,
																		"src": "7968:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1795,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1729,
																		"src": "7977:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1796,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1725,
																		"src": "7981:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1793,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "7954:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7954:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1798,
															"nodeType": "ExpressionStatement",
															"src": "7954:38:7"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1800,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "8040:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8053:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8040:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1809,
														"nodeType": "IfStatement",
														"src": "8036:58:7",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1804,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1776,
																		"src": "8070:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1805,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1729,
																		"src": "8079:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1806,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "8083:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1803,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "8056:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8056:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "8056:38:7"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1810,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1731,
																	"src": "8142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8142:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8156:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8142:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1825,
														"nodeType": "IfStatement",
														"src": "8138:93:7",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1818,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2167,
																			"src": "8190:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8190:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1820,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1725,
																		"src": "8202:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1821,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "8214:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1822,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "8226:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1815,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1729,
																				"src": "8174:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1814,
																			"name": "IPancakeCallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "8159:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IPancakeCallee_$97_$",
																				"typeString": "type(contract IPancakeCallee)"
																			}
																		},
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8159:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeCallee_$97",
																			"typeString": "contract IPancakeCallee"
																		}
																	},
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pancakeCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 96,
																	"src": "8159:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8159:72:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1824,
															"nodeType": "ExpressionStatement",
															"src": "8159:72:7"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1826,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "8241:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1832,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "8286:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakePair_$2035",
																					"typeString": "contract PancakePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakePair_$2035",
																					"typeString": "contract PancakePair"
																				}
																			],
																			"id": 1831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8278:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8278:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1828,
																				"name": "_token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1772,
																				"src": "8259:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1827,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "8252:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8252:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$83",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "8252:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8252:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8241:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1836,
														"nodeType": "ExpressionStatement",
														"src": "8241:51:7"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1837,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "8302:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1843,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "8347:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakePair_$2035",
																					"typeString": "contract PancakePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakePair_$2035",
																					"typeString": "contract PancakePair"
																				}
																			],
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8339:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8339:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1839,
																				"name": "_token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1776,
																				"src": "8320:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1838,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "8313:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8313:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$83",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "8313:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8313:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8302:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1847,
														"nodeType": "ExpressionStatement",
														"src": "8302:51:7"
													}
												]
											},
											{
												"assignments": [
													1850
												],
												"declarations": [
													{
														"constant": false,
														"id": 1850,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "8373:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1849,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8373:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1864,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1851,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "8390:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1852,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "8401:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1853,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "8413:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8401:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8390:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8464:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8390:75:7",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1856,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "8426:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1857,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "8438:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1858,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1725,
																		"src": "8450:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8438:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1860,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8437:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8426:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8373:92:7"
											},
											{
												"assignments": [
													1866
												],
												"declarations": [
													{
														"constant": false,
														"id": 1866,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "8475:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1865,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8475:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1880,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1867,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "8492:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1868,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "8503:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1869,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "8515:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8503:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8492:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8566:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8492:75:7",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1872,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "8528:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1873,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "8540:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1874,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "8552:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1876,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8539:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8528:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8475:92:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1882,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "8585:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8597:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8585:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1885,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "8602:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8614:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8602:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8585:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8617:36:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 1881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "8577:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8577:77:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "8577:77:7"
											},
											{
												"id": 1940,
												"nodeType": "Block",
												"src": "8664:350:7",
												"statements": [
													{
														"assignments": [
															1893
														],
														"declarations": [
															{
																"constant": false,
																"id": 1893,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1940,
																"src": "8738:21:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1892,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "8738:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1905,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 1901,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8801:2:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1899,
																					"name": "amount0In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1850,
																					"src": "8787:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8787:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8787:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8776:5:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1894,
																					"name": "balance0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "8763:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8763:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8763:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "8763:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8763:42:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1904,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8762:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8738:68:7"
													},
													{
														"assignments": [
															1907
														],
														"declarations": [
															{
																"constant": false,
																"id": 1907,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1940,
																"src": "8816:21:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1906,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "8816:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1919,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 1915,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8879:2:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1913,
																					"name": "amount1In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1866,
																					"src": "8865:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8865:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8865:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1910,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8854:5:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1908,
																					"name": "balance1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1769,
																					"src": "8841:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2109,
																				"src": "8841:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8841:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "8841:23:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8841:42:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8840:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8816:68:7"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1923,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1907,
																				"src": "8923:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1921,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1893,
																				"src": "8902:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2109,
																			"src": "8902:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8902:38:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 1934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1932,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8979:5:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8986:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "8979:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1929,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1750,
																						"src": "8964:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1926,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1748,
																								"src": "8949:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"id": 1925,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "8944:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 1927,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8944:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1928,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2109,
																					"src": "8944:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8944:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2109,
																			"src": "8944:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8944:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8902:86:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a204b",
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:12:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	},
																	"value": "Pancake: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	}
																],
																"id": 1920,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2170,
																	2171
																],
																"referencedDeclaration": 2171,
																"src": "8894:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8894:109:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1939,
														"nodeType": "ExpressionStatement",
														"src": "8894:109:7"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1942,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "9032:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1943,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "9042:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1944,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "9052:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1945,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "9063:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1941,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "9024:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9024:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "9024:49:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1949,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "9093:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9093:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1951,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "9105:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1952,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "9116:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1953,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "9127:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1954,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "9139:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "9151:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1948,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1155
														],
														"referencedDeclaration": 1155,
														"src": "9088:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9088:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "EmitStatement",
												"src": "9083:71:7"
											}
										]
									},
									"documentation": null,
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1734,
											"modifierName": {
												"argumentTypes": null,
												"id": 1733,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1059,
												"src": "7395:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7395:4:7"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "7319:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7319:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "7336:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7336:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "7353:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7353:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "7365:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7365:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7318:67:7"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7400:0:7"
									},
									"scope": 2035,
									"src": "7305:1856:7",
									"stateMutability": "nonpayable",
									"superFunction": 509,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "9247:289:7",
										"statements": [
											{
												"assignments": [
													1967
												],
												"declarations": [
													{
														"constant": false,
														"id": 1967,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "9257:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1966,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9257:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1969,
												"initialValue": {
													"argumentTypes": null,
													"id": 1968,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1023,
													"src": "9275:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9257:24:7"
											},
											{
												"assignments": [
													1971
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "9306:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1970,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9306:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1973,
												"initialValue": {
													"argumentTypes": null,
													"id": 1972,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1025,
													"src": "9324:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9306:24:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1975,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "9369:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1976,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "9378:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1986,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "9427:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1982,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2199,
																					"src": "9416:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PancakePair_$2035",
																						"typeString": "contract PancakePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PancakePair_$2035",
																						"typeString": "contract PancakePair"
																					}
																				],
																				"id": 1981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9408:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9408:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1978,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1967,
																					"src": "9389:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1977,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "9382:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9382:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$83",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "9382:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9382:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2081,
																"src": "9382:44:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9382:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1974,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "9355:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9355:82:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "9355:82:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1991,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "9461:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1992,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "9470:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2002,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9519:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1998,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2199,
																					"src": "9508:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PancakePair_$2035",
																						"typeString": "contract PancakePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PancakePair_$2035",
																						"typeString": "contract PancakePair"
																					}
																				],
																				"id": 1997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9500:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9500:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1994,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1971,
																					"src": "9481:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1993,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "9474:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9474:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$83",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "9474:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9474:40:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2081,
																"src": "9474:44:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9474:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1990,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "9447:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9447:82:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "9447:82:7"
											}
										]
									},
									"documentation": null,
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1964,
											"modifierName": {
												"argumentTypes": null,
												"id": 1963,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1059,
												"src": "9242:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9242:4:7"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "9221:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9221:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9220:12:7"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9247:0:7"
									},
									"scope": 2035,
									"src": "9207:329:7",
									"stateMutability": "nonpayable",
									"superFunction": 514,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "9612:126:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2018,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "9663:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PancakePair_$2035",
																				"typeString": "contract PancakePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PancakePair_$2035",
																				"typeString": "contract PancakePair"
																			}
																		],
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9655:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9655:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2014,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "9637:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2013,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "9630:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9630:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$83",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "9630:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9630:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2026,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "9704:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PancakePair_$2035",
																				"typeString": "contract PancakePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PancakePair_$2035",
																				"typeString": "contract PancakePair"
																			}
																		],
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9696:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9696:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2022,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1025,
																			"src": "9678:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2021,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "9671:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$83_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9671:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$83",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "9671:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9671:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2029,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "9712:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 2030,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "9722:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 2012,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "9622:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9622:109:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "9622:109:7"
											}
										]
									},
									"documentation": null,
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2010,
											"modifierName": {
												"argumentTypes": null,
												"id": 2009,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1059,
												"src": "9607:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9607:4:7"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9595:2:7"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9612:0:7"
									},
									"scope": 2035,
									"src": "9582:156:7",
									"stateMutability": "nonpayable",
									"superFunction": 517,
									"visibility": "external"
								}
							],
							"scope": 2036,
							"src": "254:9486:7"
						}
					],
					"src": "36:9704:7"
				},
				"id": 7
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2110
						]
					},
					"id": 2111,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2037,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2110,
							"linearizedBaseContracts": [
								2110
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "267:66:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2047,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "286:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2048,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2039,
																				"src": "290:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2049,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2041,
																				"src": "294:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "290:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "286:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2053,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2039,
																"src": "300:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "285:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "277:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "ExpressionStatement",
												"src": "277:49:8"
											}
										]
									},
									"documentation": null,
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "211:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "222:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:22:8"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "256:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:11:8"
									},
									"scope": 2110,
									"src": "198:135:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "408:67:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2069,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2066,
																			"src": "427:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2070,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2061,
																				"src": "431:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2071,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2063,
																				"src": "435:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "431:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "426:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2075,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "441:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "418:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "418:50:8"
											}
										]
									},
									"documentation": null,
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "352:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "363:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:22:8"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "397:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:11:8"
									},
									"scope": 2110,
									"src": "339:136:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "550:80:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2091,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "568:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "573:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "568:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 2094,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2088,
																					"src": "579:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2095,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2083,
																						"src": "583:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2096,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2085,
																						"src": "587:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "583:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "579:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2099,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "578:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2100,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "592:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "578:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2102,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "597:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "578:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "568:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "600:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2170,
															2171
														],
														"referencedDeclaration": 2171,
														"src": "560:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "560:63:8"
											}
										]
									},
									"documentation": null,
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "494:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "505:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:8"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "539:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:11:8"
									},
									"scope": 2110,
									"src": "481:149:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2111,
							"src": "175:457:8"
						}
					],
					"src": "36:596:8"
				},
				"id": 8
			},
			"UQ112x112.sol": {
				"ast": {
					"absolutePath": "UQ112x112.sol",
					"exportedSymbols": {
						"UQ112x112": [
							2152
						]
					},
					"id": 2153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2112,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2152,
							"linearizedBaseContracts": [
								2152
							],
							"name": "UQ112x112",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2117,
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2152,
									"src": "243:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint224",
										"typeString": "uint224"
									},
									"typeName": {
										"id": 2113,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"id": 2116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 2114,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:1:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313132",
											"id": 2115,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "270:3:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_112_by_1",
												"typeString": "int_const 112"
											},
											"value": "112"
										},
										"src": "267:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "380:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2124,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2122,
														"src": "390:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2126,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2119,
																	"src": "402:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "394:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "394:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2128,
															"name": "Q112",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "407:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "394:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "390:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "390:21:9"
											}
										]
									},
									"documentation": null,
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "335:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2118,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "334:11:9"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "369:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2121,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "368:11:9"
									},
									"scope": 2152,
									"src": "319:118:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "576:35:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2142,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2140,
														"src": "586:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2143,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "590:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2145,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "594:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "594:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "590:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "586:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "586:18:9"
											}
										]
									},
									"documentation": null,
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uqdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "520:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2134,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "531:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2136,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "519:22:9"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "565:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2139,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "564:11:9"
									},
									"scope": 2152,
									"src": "505:106:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2153,
							"src": "219:394:9"
						}
					],
					"src": "36:577:9"
				},
				"id": 9
			}
		}
	}
}